=== Directory listing of /var/www/html/wp-content/plugins/AdPro-esim (recursive, excluding CSS files) ===
/var/www/html/wp-content/plugins/AdPro-esim
/var/www/html/wp-content/plugins/AdPro-esim/AdPro-esim.php
/var/www/html/wp-content/plugins/AdPro-esim/combined_files.txt
/var/www/html/wp-content/plugins/AdPro-esim/includes
/var/www/html/wp-content/plugins/AdPro-esim/includes/admin-settings.php
/var/www/html/wp-content/plugins/AdPro-esim/includes/api-handler.php
/var/www/html/wp-content/plugins/AdPro-esim/includes/class-wc-icount-gateway.php
/var/www/html/wp-content/plugins/AdPro-esim/includes/countries-mapping.php
/var/www/html/wp-content/plugins/AdPro-esim/includes/debugging.php
/var/www/html/wp-content/plugins/AdPro-esim/includes/emergency-payment.php
/var/www/html/wp-content/plugins/AdPro-esim/includes/woocommerce-esim-integration.php
/var/www/html/wp-content/plugins/AdPro-esim/list.sh
/var/www/html/wp-content/plugins/AdPro-esim/public
/var/www/html/wp-content/plugins/AdPro-esim/public/assets
/var/www/html/wp-content/plugins/AdPro-esim/public/assets/css
/var/www/html/wp-content/plugins/AdPro-esim/public/assets/js
/var/www/html/wp-content/plugins/AdPro-esim/public/assets/js/admin-scripts.js
/var/www/html/wp-content/plugins/AdPro-esim/public/assets/js/frontend.js
/var/www/html/wp-content/plugins/AdPro-esim/public/assets/js/payment.js
/var/www/html/wp-content/plugins/AdPro-esim/public/error-template.php
/var/www/html/wp-content/plugins/AdPro-esim/public/esim-add-to-cart.php
/var/www/html/wp-content/plugins/AdPro-esim/public/esim-country-template.php
/var/www/html/wp-content/plugins/AdPro-esim/public/frontend.php
/var/www/html/wp-content/plugins/AdPro-esim/public/success-template.php
-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/AdPro-esim.php ===
<?php
/*
Plugin Name: AdPro eSIM
Description: תוסף למכירת eSIM דרך API של AdPro עם ממשק ניהול ומשתמש.
Version: 1.0
Author: [שמך]
*/

if (!defined('ABSPATH')) {
    exit;
}

// הגדרת קבועים
define('ADPRO_ESIM_URL', plugin_dir_url(__FILE__));
define('ADPRO_ESIM_PATH', plugin_dir_path(__FILE__));

/**
 * וידוא שוווקומרס פעיל לפני שימוש בתוסף
 */
function AdPro_check_woocommerce_active() {
    if (!class_exists('WooCommerce')) {
        add_action('admin_notices', 'AdPro_woocommerce_missing_notice');
        return false;
    }
    return true;
}
add_action('plugins_loaded', 'AdPro_check_woocommerce_active', 1);

function AdPro_woocommerce_missing_notice() {
    ?>
    <div class="notice notice-error">
        <p><?php _e('AdPro eSIM requires WooCommerce to be installed and active.', 'AdPro-esim'); ?></p>
    </div>
    <?php
}

/**
 * טעינת קבצי התוסף רק אחרי ש-WooCommerce זמין
 */
add_action('plugins_loaded', function() {
    if (!class_exists('WooCommerce')) {
        return;
    }
    
    // טעינת קבצי התוסף - רק אחרי ש-WooCommerce זמין
    require_once plugin_dir_path(__FILE__) . 'includes/debugging.php';
    require_once plugin_dir_path(__FILE__) . 'includes/admin-settings.php';
    require_once plugin_dir_path(__FILE__) . 'includes/api-handler.php';
    require_once plugin_dir_path(__FILE__) . 'includes/countries-mapping.php';
    require_once plugin_dir_path(__FILE__) . 'public/frontend.php';
    require_once plugin_dir_path(__FILE__) . 'includes/woocommerce-esim-integration.php';
    require_once plugin_dir_path(__FILE__) . 'includes/emergency-payment.php';
}, 5);

/**
 * רישום שער התשלום iCount
 */
function AdPro_register_payment_gateways($gateways) {
    if (!class_exists('WC_Payment_Gateway')) {
        error_log('WooCommerce Payment Gateway class not found');
        return $gateways;
    }
    
    if (!class_exists('WC_iCount_Gateway')) {
        require_once ADPRO_ESIM_PATH . 'includes/class-wc-icount-gateway.php';
    }
    
    $gateways[] = new WC_iCount_Gateway();
    error_log('Successfully registered iCount gateway');
    return $gateways;
}
add_filter('woocommerce_payment_gateways', 'AdPro_register_payment_gateways', 20);

/**
 * וודא ש-WooCommerce נטען לפני ניסיון להשתמש בו
 */
function AdPro_init_payment_gateway() {
    // בדוק אם WooCommerce פעיל
    if (!class_exists('WooCommerce')) {
        return;
    }
    
    // וודא שיש גישה ל-WC()
    if (!function_exists('WC')) {
        return;
    }
}
add_action('plugins_loaded', 'AdPro_init_payment_gateway', 20);

/**
 * הוספת כללי שכתוב לניתובים מותאמים
 */
function AdPro_esim_rewrite_rule() {
    add_rewrite_rule(
        '^esim/([^/]+)/?$',
        'index.php?AdPro_esim_country=$matches[1]',
        'top'
    );
}
add_action('init', 'AdPro_esim_rewrite_rule');

function AdPro_esim_query_vars($vars) {
    $vars[] = 'AdPro_esim_country';
    return $vars;
}
add_filter('query_vars', 'AdPro_esim_query_vars');

function AdPro_esim_template_include($template) {
    if (get_query_var('AdPro_esim_country')) {
        $country_param = strtolower(get_query_var('AdPro_esim_country'));
        if (isset($_GET['success'])) {
            return plugin_dir_path(__FILE__) . 'public/success-template.php';
        }
        if (isset($_GET['error'])) {
            return plugin_dir_path(__FILE__) . 'public/error-template.php';
        }
        $template_path = plugin_dir_path(__FILE__) . 'public/esim-country-template.php';
        if (file_exists($template_path)) {
            return $template_path;
        }
    }
    return $template;
}
add_filter('template_include', 'AdPro_esim_template_include');

function AdPro_register_esim_endpoints() {
    add_rewrite_endpoint('esim-add-to-cart', EP_ROOT);
    
    // Check if the endpoint is accessed and load the template
    if (isset($_GET['transaction'])) {
        include(plugin_dir_path(__FILE__) . 'public/esim-add-to-cart.php');
        exit;
    }
}
add_action('init', 'AdPro_register_esim_endpoints');

// קוד קצר לממשק המשתמש
function AdPro_esim_shortcode() {
    ob_start();
    AdPro_esim_display_frontend();
    return ob_get_clean();
}
add_shortcode('AdPro_esim', 'AdPro_esim_shortcode');

/**
 * עדכון תקופתי של חבילות
 */
function AdPro_fetch_packages_periodically() {
    $countries_mapping = AdPro_get_countries_mapping();
    foreach ($countries_mapping as $hebrew => $data) {
        AdPro_esim_get_packages($data['iso']);
    }
}
add_action('AdPro_fetch_packages_event', 'AdPro_fetch_packages_periodically');

if (!wp_next_scheduled('AdPro_fetch_packages_event')) {
    wp_schedule_event(time(), 'daily', 'AdPro_fetch_packages_event');
}

/**
 * אזור אישי - הוספת נקודת קצה
 */
function AdPro_esim_add_account_endpoint() {
    add_rewrite_endpoint('AdPro-esim', EP_ROOT | EP_PAGES);
}
add_action('init', 'AdPro_esim_add_account_endpoint');

function AdPro_esim_account_menu_items($items) {
    $items['AdPro-esim'] = 'חבילות eSIM שלי';
    return $items;
}
add_filter('woocommerce_account_menu_items', 'AdPro_esim_account_menu_items');

function AdPro_esim_account_content() {
    $user_id = get_current_user_id();
    $purchases = get_user_meta($user_id, 'AdPro_esim_purchase', false);
    ?>
    <h2>חבילות eSIM שלי</h2>
    <?php if ($purchases) : ?>
        <table>
            <tr>
                <th>מדינה</th>
                <th>חבילה</th>
                <th>תאריך רכישה</th>
                <th>QR</th>
                <th>גלישה נותרה</th>
            </tr>
            <?php foreach ($purchases as $purchase) : ?>
                <?php
                $api_key = get_option('AdPro_api_key');
                $response = wp_remote_get("https://api.AdPro.com/v1/orders/info?order_id={$purchase['order_id']}", [
                    'headers' => [
                        'Authorization' => 'Bearer ' . $api_key,
                    ],
                ]);
                $usage = is_wp_error($response) ? [] : json_decode(wp_remote_retrieve_body($response), true);
                ?>
                <tr>
                    <td><?php echo esc_html($purchase['country']); ?></td>
                    <td><?php echo esc_html($purchase['package_id']); ?></td>
                    <td><?php echo esc_html($purchase['purchase_date']); ?></td>
                    <td><img src="<?php echo esc_url($purchase['qr_code']); ?>" alt="QR Code"></td>
                    <td><?php echo esc_html($usage['data_remaining'] ?? 'לא זמין'); ?></td>
                </tr>
            <?php endforeach; ?>
        </table>
    <?php else : ?>
        <p>לא נמצאו רכישות.</p>
    <?php endif; ?>
    <?php
}
add_action('woocommerce_account_AdPro-esim_endpoint', 'AdPro_esim_account_content');

/**
 * הוספת סקריפטים וסגנונות לטופס התשלום
 */
function AdPro_enqueue_payment_scripts() {
    if (is_checkout()) {
        wp_enqueue_style('AdPro-payment-styles', ADPRO_ESIM_URL . 'public/assets/css/payment.css');
        wp_enqueue_script('AdPro-payment-scripts', ADPRO_ESIM_URL . 'public/assets/js/payment.js', array('jquery'), null, true);
    }
}
add_action('wp_enqueue_scripts', 'AdPro_enqueue_payment_scripts');

/**
 * פעולות הרשמה/הסרה של התוסף
 */
register_activation_hook(__FILE__, 'AdPro_flush_all_rules');
function AdPro_flush_all_rules() {
    AdPro_esim_rewrite_rule();
    AdPro_register_esim_endpoints();
    flush_rewrite_rules();
}

register_deactivation_hook(__FILE__, function() {
    flush_rewrite_rules();
});

// פתרון עוקף - רישום ישיר של שער התשלום ב-checkout
add_action('woocommerce_checkout_before_customer_details', function() {
    if (!class_exists('WC_Payment_Gateway')) {
        error_log('WC_Payment_Gateway class not available on checkout page');
        return;
    }
    
    if (!class_exists('WC_iCount_Gateway')) {
        require_once ADPRO_ESIM_PATH . 'includes/class-wc-icount-gateway.php';
    }
    
    // וודא שהשער פעיל
    global $wc_icount_gateway_active;
    if (!isset($wc_icount_gateway_active) || !$wc_icount_gateway_active) {
        // צור שער ידנית
        $gateway = new WC_iCount_Gateway();
        
        // הוסף לרשימת שערי התשלום הזמינים
        if (function_exists('WC') && isset(WC()->payment_gateways) && method_exists(WC()->payment_gateways, 'payment_gateways')) {
            $available_gateways = WC()->payment_gateways->payment_gateways();
            $available_gateways['icount_gateway'] = $gateway;
            
            // עדכן את הרשימה
            WC()->payment_gateways->payment_gateways = $available_gateways;
            
            $wc_icount_gateway_active = true;
            error_log('iCount gateway manually added to available gateways during checkout');
        }
    }
});-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/includes/admin-settings.php ===
<?php
/**
 * הגדרות ניהול התוסף
 */

if (!defined('ABSPATH')) {
    exit; // יציאה אם הגישה ישירה
}

/**
 * הוספת פריטי תפריט לניהול התוסף
 */
function AdPro_esim_admin_menu() {
    add_menu_page(
        'ניהול eSIM',
        'eSIM',
        'manage_options',
        'AdPro-esim-settings',
        'AdPro_esim_settings_page',
        'dashicons-smartphone',
        30
    );
    
    add_submenu_page(
        'AdPro-esim-settings',
        'הגדרות API',
        'הגדרות API',
        'manage_options',
        'AdPro-esim-settings',
        'AdPro_esim_settings_page'
    );
    
    add_submenu_page(
        'AdPro-esim-settings',
        'עריכת תוכן מדינות',
        'תוכן מדינות',
        'manage_options',
        'AdPro-esim-country-content',
        'AdPro_esim_country_content_page'
    );
    
    add_submenu_page(
        'AdPro-esim-settings',
        'ניהול ספקים',
        'ניהול ספקים',
        'manage_options',
        'AdPro-esim-providers',
        'AdPro_esim_providers_page'
    );
    
    add_submenu_page(
        'AdPro-esim-settings',
        'סטטיסטיקות',
        'סטטיסטיקות',
        'manage_options',
        'AdPro-esim-stats',
        'AdPro_esim_stats_page'
    );
}
add_action('admin_menu', 'AdPro_esim_admin_menu');

/**
 * רישום הגדרות התוסף
 */
function AdPro_esim_settings_init() {
    // קבוצת הגדרות API
    register_setting('AdPro_esim_api_settings', 'AdPro_api_key');
    register_setting('AdPro_esim_api_settings', 'AdPro_merchant_id');
    register_setting('AdPro_esim_api_settings', 'AdPro_icount_company_id');
	register_setting('AdPro_esim_api_settings', 'AdPro_icount_user');
	register_setting('AdPro_esim_api_settings', 'AdPro_icount_pass');
    
    // קבוצת הגדרות מסחר
    register_setting('AdPro_esim_commerce_settings', 'AdPro_hidden_providers', [
        'type' => 'array',
        'sanitize_callback' => function($input) {
            if (!is_array($input)) {
                return [];
            }
            return array_map('sanitize_text_field', $input);
        },
        'default' => []
    ]);
    
    register_setting('AdPro_esim_commerce_settings', 'AdPro_popular_countries', [
        'type' => 'array',
        'sanitize_callback' => function($input) {
            if (!is_array($input)) {
                return [];
            }
            return array_map('sanitize_text_field', $input);
        },
        'default' => []
    ]);
    
    // הוספת סקציות
    add_settings_section(
        'AdPro_esim_api_section',
        'הגדרות API',
        'AdPro_esim_api_section_callback',
        'AdPro-esim-settings'
    );
    
    add_settings_section(
        'AdPro_esim_commerce_section',
        'הגדרות מסחר',
        'AdPro_esim_commerce_section_callback',
        'AdPro-esim-settings'
    );
    
    // הוספת שדות
    add_settings_field(
        'AdPro_api_key_field',
        'מפתח API של מובימטר',
        'AdPro_api_key_field_callback',
        'AdPro-esim-settings',
        'AdPro_esim_api_section'
    );
    
    add_settings_field(
        'AdPro_merchant_id_field',
        'מזהה סוחר של מובימטר',
        'AdPro_merchant_id_field_callback',
        'AdPro-esim-settings',
        'AdPro_esim_api_section'
    );
    
add_settings_field(
    'AdPro_icount_user_field',
    'שם משתמש iCount',
    'AdPro_icount_user_field_callback',
    'AdPro-esim-settings',
    'AdPro_esim_api_section'
);

add_settings_field(
    'AdPro_icount_pass_field',
    'סיסמת iCount',
    'AdPro_icount_pass_field_callback',
    'AdPro-esim-settings',
    'AdPro_esim_api_section'
);
    
    add_settings_field(
        'AdPro_icount_company_id_field',
        'מזהה חברה של iCount',
        'AdPro_icount_company_id_field_callback',
        'AdPro-esim-settings',
        'AdPro_esim_api_section'
    );
}
add_action('admin_init', 'AdPro_esim_settings_init');

/**
 * פונקציות callbacks לסקציות
 */
function AdPro_esim_api_section_callback() {
    echo '<p>הזן את פרטי ההתחברות ל-API של מובימטר ו-iCount.</p>';
    
    // בדיקת מפתח API
    $api_key = get_option('AdPro_api_key');
    $merchant_id = get_option('AdPro_merchant_id');
    
    if (!empty($api_key) && !empty($merchant_id)) {
        if (AdPro_validate_api_key()) {
            echo '<div class="notice notice-success inline"><p>חיבור ל-API של מובימטר פעיל ותקין.</p></div>';
        } else {
            echo '<div class="notice notice-error inline"><p>שגיאה בחיבור ל-API של מובימטר. בדוק את פרטי ההתחברות.</p></div>';
        }
    }
}

function AdPro_esim_commerce_section_callback() {
    echo '<p>הגדרות נוספות עבור המסחר באתר.</p>';
}

/**
 * פונקציות callbacks לשדות
 */
function AdPro_api_key_field_callback() {
    $api_key = get_option('AdPro_api_key');
    echo "<input type='text' name='AdPro_api_key' value='" . esc_attr($api_key) . "' class='regular-text'>";
    echo "<p class='description'>המפתח מסופק על ידי מובימטר.</p>";
}

function AdPro_merchant_id_field_callback() {
    $merchant_id = get_option('AdPro_merchant_id');
    echo "<input type='text' name='AdPro_merchant_id' value='" . esc_attr($merchant_id) . "' class='regular-text'>";
    echo "<p class='description'>מזהה הסוחר מסופק על ידי מובימטר.</p>";
}

function AdPro_icount_user_field_callback() {
    $user = get_option('AdPro_icount_user');
    echo "<input type='text' name='AdPro_icount_user' value='" . esc_attr($user) . "' class='regular-text'>";
    echo "<p class='description'>שם המשתמש של חשבון iCount.</p>";
}

function AdPro_icount_pass_field_callback() {
    $pass = get_option('AdPro_icount_pass');
    echo "<input type='password' name='AdPro_icount_pass' value='" . esc_attr($pass) . "' class='regular-text'>";
    echo "<p class='description'>הסיסמה של חשבון iCount.</p>";
}

function AdPro_icount_company_id_field_callback() {
    $company_id = get_option('AdPro_icount_company_id');
    echo "<input type='text' name='AdPro_icount_company_id' value='" . esc_attr($company_id) . "' class='regular-text'>";
    echo "<p class='description'>מזהה החברה מסופק על ידי iCount.</p>";
}

/**
 * דף הגדרות ראשי
 */
function AdPro_esim_settings_page() {
    // ניקוי מטמון אם נדרש
    if (isset($_GET['clear_cache']) && check_admin_referer('AdPro_clear_cache')) {
        AdPro_clear_api_cache();
        echo '<div class="notice notice-success"><p>המטמון נוקה בהצלחה!</p></div>';
    }
    
    ?>
    <div class="wrap">
        <h1><?php echo esc_html(get_admin_page_title()); ?></h1>
        
        <form method="post" action="options.php">
            <?php
            settings_fields('AdPro_esim_api_settings');
            do_settings_sections('AdPro-esim-settings');
            submit_button('שמור הגדרות');
            ?>
        </form>
        
        <hr>
        
        <h2>פעולות נוספות</h2>
        <p>
            <a href="<?php echo wp_nonce_url(admin_url('admin.php?page=AdPro-esim-settings&clear_cache=1'), 'AdPro_clear_cache'); ?>" class="button">
                נקה מטמון API
            </a>
            <span class="description">מנקה את המטמון של תוצאות API ומאלץ טעינה מחדש של נתונים.</span>
        </p>
        
        <hr>
        
        <h2>בדיקת חיבור</h2>
        <p>
            <a href="#" id="test-mobimatter-api" class="button">בדוק חיבור ל-API של מובימטר</a>
            <span id="api-test-result"></span>
        </p>
        
        <h2>בדיקת חיבור iCount</h2>
        <p>
            <a href="#" id="test-icount-api" class="button">בדוק חיבור ל-API של iCount</a>
            <span id="icount-test-result"></span>
        </p>
        
<script>
    jQuery(document).ready(function($) {
        // סקריפט לבדיקת חיבור למובימטר - נשאר כפי שהיה
        $('#test-mobimatter-api').on('click', function(e) {
            e.preventDefault();
            var $result = $('#api-test-result');
            
            $result.html('<span style="color: #aaa;">בודק חיבור...</span>');
            
            $.ajax({
                url: ajaxurl,
                type: 'POST',
                data: {
                    action: 'AdPro_test_mobimatter_api'
                },
                success: function(response) {
                    if (response.success) {
                        $result.html('<span style="color: green;">✓ החיבור תקין!</span>');
                    } else {
                        $result.html('<span style="color: red;">✗ שגיאה: ' + response.data + '</span>');
                    }
                },
                error: function() {
                    $result.html('<span style="color: red;">✗ שגיאה בבדיקה</span>');
                }
            });
        });
        
        // סקריפט משופר לבדיקת חיבור ל-iCount
        $('#test-icount-api').on('click', function(e) {
            e.preventDefault();
            var $result = $('#icount-test-result');
            var $debugInfo = $('#icount-debug-info');
            
            $result.html('<span style="color: #aaa;">בודק חיבור...</span>');
            
            // מחיקת מידע דיבאג קודם אם קיים
            if ($debugInfo.length) {
                $debugInfo.remove();
            }
            
            $.ajax({
                url: ajaxurl,
                type: 'POST',
                data: {
                    action: 'AdPro_test_icount_api'
                },
                success: function(response) {
                    // בדיקה אם התשובה מכילה אובייקט או מחרוזת
                    var message = '';
                    var debugData = null;
                    
                    if (typeof response.data === 'object' && response.data !== null) {
                        message = response.data.message || '';
                        debugData = response.data.debug;
                    } else {
                        message = response.data || '';
                    }
                    
                    if (response.success) {
                        $result.html('<span style="color: green;">✓ ' + message + '</span>');
                    } else {
                        $result.html('<span style="color: red;">✗ שגיאה: ' + message + '</span>');
                    }
                    
                    // הצגת מידע דיבאג אם קיים
                    if (debugData) {
                        var $debugDiv = $('<div id="icount-debug-info" style="margin-top: 15px; padding: 10px; background-color: #f5f5f5; border: 1px solid #ddd; border-radius: 4px; max-height: 400px; overflow: auto;"></div>');
                        
                        var debugHtml = '<h4 style="margin-top: 0;">פרטי דיבאג:</h4>';
                        
                        // בקשה
                        if (debugData.request) {
                            debugHtml += '<h5>בקשה:</h5>';
                            debugHtml += '<pre style="background-color: #fff; padding: 10px; border-radius: 4px; overflow: auto; max-height: 150px;">' + 
                                        JSON.stringify(debugData.request, null, 2) + 
                                        '</pre>';
                        }
                        
                        // פרטי cURL
                        if (debugData.curl_info) {
                            debugHtml += '<h5>פרטי cURL:</h5>';
                            debugHtml += '<pre style="background-color: #fff; padding: 10px; border-radius: 4px; overflow: auto; max-height: 150px;">' + 
                                        JSON.stringify(debugData.curl_info, null, 2) + 
                                        '</pre>';
                        }
                        
                        // תגובה
                        if (debugData.response) {
                            debugHtml += '<h5>תגובה:</h5>';
                            debugHtml += '<pre style="background-color: #fff; padding: 10px; border-radius: 4px; overflow: auto; max-height: 150px;">' + 
                                        JSON.stringify(debugData.response, null, 2) + 
                                        '</pre>';
                            
                            // אם יש גוף תגובה לא מפוענח, מציג אותו כטקסט גולמי
                            if (debugData.response.body_raw) {
                                debugHtml += '<h5>תגובה גולמית:</h5>';
                                debugHtml += '<pre style="background-color: #fff; padding: 10px; border-radius: 4px; overflow: auto; max-height: 150px;">' + 
                                            debugData.response.body_raw + 
                                            '</pre>';
                            }
                        }
                        
                        $debugDiv.html(debugHtml);
                        $result.after($debugDiv);
                    }
                },
                error: function(xhr, status, error) {
                    $result.html('<span style="color: red;">✗ שגיאה בבדיקה: ' + error + '</span>');
                    
                    // הצגת פרטי השגיאה
                    var $debugDiv = $('<div id="icount-debug-info" style="margin-top: 15px; padding: 10px; background-color: #f5f5f5; border: 1px solid #ddd; border-radius: 4px;"></div>');
                    $debugDiv.html('<h4 style="margin-top: 0;">פרטי שגיאה:</h4><pre>' + JSON.stringify({xhr: xhr.status, status: status, error: error}, null, 2) + '</pre>');
                    $result.after($debugDiv);
                }
            });
        });
    });
</script>
    </div>
    <?php
}

/**
 * AJAX לבדיקת חיבור לשרת API
 */
function AdPro_test_mobimatter_api_callback() {
    $api_key = get_option('AdPro_api_key');
    $merchant_id = get_option('AdPro_merchant_id');
    
    if (empty($api_key) || empty($merchant_id)) {
        wp_send_json_error('חסרים פרטי התחברות. יש להזין מפתח API ומזהה סוחר.');
        return;
    }
    
    $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/products?limit=1';
    
    $args = [
        'headers' => [
            'Accept' => 'text/plain',
            'merchantId' => $merchant_id,
            'api-key' => $api_key,
        ],
        'timeout' => 10,
    ];
    
    $response = wp_remote_get($api_url, $args);
    
    if (is_wp_error($response)) {
        wp_send_json_error('שגיאת חיבור: ' . $response->get_error_message());
        return;
    }
    
    $response_code = wp_remote_retrieve_response_code($response);
    
    if ($response_code !== 200) {
        $body = wp_remote_retrieve_body($response);
        $data = json_decode($body, true);
        $error_message = isset($data['message']) ? $data['message'] : 'קוד שגיאה: ' . $response_code;
        
        wp_send_json_error($error_message);
        return;
    }
    
    wp_send_json_success('החיבור בוצע בהצלחה');
}
add_action('wp_ajax_AdPro_test_mobimatter_api', 'AdPro_test_mobimatter_api_callback');

/**
 * AJAX לבדיקת חיבור לשרת iCount
 */
/**
 * AJAX לבדיקת חיבור לשרת iCount
 */
/**
 * AJAX לבדיקת חיבור לשרת iCount
 */
function AdPro_test_icount_api_callback() {
    // קבלת פרטי ההתחברות מההגדרות
    $company_id = get_option('AdPro_icount_company_id');
    $user = get_option('AdPro_icount_user');
    $pass = get_option('AdPro_icount_pass');
    
    if (empty($company_id) || empty($user) || empty($pass)) {
        wp_send_json_error('חסרים פרטי התחברות. יש להזין מזהה חברה, שם משתמש וסיסמה.');
        return;
    }
    
    // בניית נתוני הבקשה לפי הפורמט הנכון
    $api_url = 'https://api.icount.co.il/api/v3.php/auth/login';
    
    // שימוש ב-cURL במקום wp_remote_post
    $curl = curl_init();
    
    // בניית המידע לדיבאג (מסתיר את הסיסמה)
    $debug_info = [
        'request' => [
            'url' => $api_url,
            'method' => 'POST',
            'body' => [
                'cid' => $company_id,
                'user' => $user,
                'pass' => '***חסוי***',
                'otp' => ''  // חלק מפרוטוקול האימות אם צריך
            ]
        ],
        'response' => null
    ];
    
    // הגדרת אפשרויות cURL
    curl_setopt_array($curl, [
        CURLOPT_URL => $api_url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => '',
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => 'POST',
        CURLOPT_POSTFIELDS => [
            'cid' => $company_id,
            'user' => $user,
            'pass' => $pass,
            'otp' => ''  // התיעוד מציין פרמטר זה, אבל ניתן לו ערך ריק
        ]
    ]);
    
    // ביצוע הבקשה
    $response_body = curl_exec($curl);
    $response_code = curl_getinfo($curl, CURLINFO_HTTP_CODE);
    $error = curl_error($curl);
    
    // שמירת הנתונים לדיבאג
    $debug_info['curl_info'] = [
        'error' => $error,
        'response_code' => $response_code
    ];
    
    // בדיקה אם הייתה שגיאה ב-cURL
    if ($error) {
        curl_close($curl);
        wp_send_json_error([
            'message' => 'שגיאת חיבור cURL: ' . $error,
            'debug' => $debug_info
        ]);
        return;
    }
    
    // ניסיון לפרש את התגובה כ-JSON
    $data = json_decode($response_body, true);
    
    // שמירת נתוני התגובה לדיבאג
    $debug_info['response'] = [
        'code' => $response_code,
        'body_raw' => $response_body,
        'body_parsed' => $data
    ];
    
    // סגירת החיבור
    curl_close($curl);
    
    // נוסיף לוג לדיבאג
    error_log('iCount API request: ' . json_encode($debug_info['request']));
    error_log('iCount API response: ' . json_encode($debug_info['response']));
    
    // בדיקה אם התגובה תקינה
    if ($response_code !== 200) {
        $error_message = 'קוד שגיאה: ' . $response_code;
        wp_send_json_error([
            'message' => $error_message,
            'debug' => $debug_info
        ]);
        return;
    }
    
    // בדיקת תגובה מוצלחת לפי שדה status ו-sid
    if (isset($data['status']) && $data['status'] === true && isset($data['sid'])) {
        // התחברות הצליחה
        wp_send_json_success([
            'message' => 'החיבור בוצע בהצלחה',
            'debug' => $debug_info
        ]);
        return;
    } else {
        // התחברות נכשלה, בדיקה אם יש הודעת שגיאה
        $error_message = isset($data['reason']) ? $data['reason'] : 'שגיאה לא ידועה בהתחברות';
        wp_send_json_error([
            'message' => $error_message,
            'debug' => $debug_info
        ]);
        return;
    }
}
add_action('wp_ajax_AdPro_test_icount_api', 'AdPro_test_icount_api_callback');

/**
 * דף ניהול תוכן מדינות
 */
function AdPro_esim_country_content_page() {
    $countries_mapping = AdPro_get_countries_mapping();
    $saved_content = get_option('AdPro_esim_country_content', []);

    if (isset($_POST['save_country_content']) && check_admin_referer('AdPro_esim_country_content_nonce')) {
        $updated_content = [];
        foreach ($_POST['country_content'] as $country => $content) {
            $updated_content[$country] = [
                'text' => wp_kses_post($content['text']),
                'image' => esc_url_raw($content['image'])
            ];
        }
        update_option('AdPro_esim_country_content', $updated_content);
        echo '<div class="updated"><p>השינויים נשמרו בהצלחה!</p></div>';
        $saved_content = $updated_content;
    }
    ?>
    <div class="wrap">
        <h1>עריכת תוכן מדינות</h1>
        <p>כאן תוכל להוסיף תוכן מותאם אישית לדפי המדינות השונים.</p>
        
        <form method="post" action="">
            <?php wp_nonce_field('AdPro_esim_country_content_nonce'); ?>
            
            <?php if (empty($countries_mapping)) : ?>
                <div class="notice notice-warning">
                    <p>לא נמצאו מדינות. וודא שיש חיבור תקין ל-API.</p>
                </div>
            <?php else : ?>
                <div class="country-content-tabs">
                    <div class="country-tabs-navigation">
                        <?php 
                        $first = true;
                        foreach ($countries_mapping as $hebrew => $data) : 
                        ?>
                            <a href="#country-tab-<?php echo sanitize_title($hebrew); ?>" class="country-tab <?php echo $first ? 'active' : ''; ?>">
                                <img src="https://flagcdn.com/16x12/<?php echo strtolower($data['iso']); ?>.png" alt="<?php echo esc_attr($hebrew); ?>">
                                <?php echo esc_html($hebrew); ?>
                            </a>
                        <?php 
                            $first = false;
                        endforeach; 
                        ?>
                    </div>
                    
                    <div class="country-tabs-content">
                        <?php 
                        $first = true;
                        foreach ($countries_mapping as $hebrew => $data) : 
                            $country_key = sanitize_title($hebrew);
                        ?>
                            <div id="country-tab-<?php echo $country_key; ?>" class="country-tab-content <?php echo $first ? 'active' : ''; ?>">
                                <h2><?php echo esc_html($hebrew); ?></h2>
                                <table class="form-table">
                                    <tr>
                                        <th scope="row">תמונה (כתובת URL):</th>
                                        <td>
                                            <input type="url" name="country_content[<?php echo esc_attr($hebrew); ?>][image]" value="<?php echo esc_attr($saved_content[$hebrew]['image'] ?? ''); ?>" class="regular-text">
                                            <button type="button" class="button media-upload-button" data-target="country_content[<?php echo esc_attr($hebrew); ?>][image]">בחר תמונה</button>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th scope="row">תוכן מותאם:</th>
                                        <td>
                                            <?php
                                            wp_editor(
                                                $saved_content[$hebrew]['text'] ?? '',
                                                'country_content_' . $country_key,
                                                [
                                                    'textarea_name' => 'country_content[' . esc_attr($hebrew) . '][text]',
                                                    'textarea_rows' => 10,
                                                    'media_buttons' => true,
                                                ]
                                            );
                                            ?>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        <?php 
                            $first = false;
                        endforeach; 
                        ?>
                    </div>
                </div>
                
                <p class="submit">
                    <input type="hidden" name="save_country_content" value="1">
                    <?php submit_button('שמור שינויים', 'primary', 'submit', false); ?>
                </p>
            <?php endif; ?>
        </form>
        
        <style>
            .country-content-tabs {
                margin-top: 20px;
                border: 1px solid #ccc;
                background: #fff;
            }
            
            .country-tabs-navigation {
                display: flex;
                flex-wrap: wrap;
                gap: 2px;
                background: #f5f5f5;
                padding: 10px 10px 0;
                border-bottom: 1px solid #ccc;
            }
            
            .country-tab {
                display: flex;
                align-items: center;
                gap: 5px;
                padding: 8px 12px;
                background: #e5e5e5;
                text-decoration: none;
                color: #333;
                border-radius: 4px 4px 0 0;
                border: 1px solid #ccc;
                border-bottom: none;
                font-size: 13px;
            }
            
            .country-tab.active {
                background: #fff;
                position: relative;
                bottom: -1px;
                border-bottom: 1px solid #fff;
            }
            
            .country-tab:hover {
                background: #f0f0f0;
            }
            
            .country-tab.active:hover {
                background: #fff;
            }
            
            .country-tab-content {
                display: none;
                padding: 20px;
            }
            
            .country-tab-content.active {
                display: block;
            }
            
            .media-upload-button {
                margin-left: 10px !important;
            }
        </style>
        
        <script>
            jQuery(document).ready(function($) {
                // טאבים של מדינות
                $('.country-tab').on('click', function(e) {
                    e.preventDefault();
                    var tabId = $(this).attr('href');
                    
                    $('.country-tab').removeClass('active');
                    $('.country-tab-content').removeClass('active');
                    
                    $(this).addClass('active');
                    $(tabId).addClass('active');
                });
                
                // העלאת תמונות
                $('.media-upload-button').on('click', function(e) {
                    e.preventDefault();
                    
                    var targetInput = $(this).data('target');
                    var $input = $('input[name="' + targetInput + '"]');
                    
                    var mediaUploader = wp.media({
                        title: 'בחר תמונה',
                        button: {
                            text: 'שימוש בתמונה זו'
                        },
                        multiple: false
                    });
                    
                    mediaUploader.on('select', function() {
                        var attachment = mediaUploader.state().get('selection').first().toJSON();
                        $input.val(attachment.url);
                    });
                    
                    mediaUploader.open();
                });
            });
        </script>
    </div>
    <?php
}

/**
 * דף ניהול ספקים
 */
function AdPro_esim_providers_page() {
    // קבלת רשימת ספקים על ידי פניה ל-API ושליפת נתונים ייחודיים
    $providers = [];
    $hidden_providers = get_option('AdPro_hidden_providers', []);
    
    // שמירת שינויים
    if (isset($_POST['save_providers']) && check_admin_referer('AdPro_providers_nonce')) {
        $hidden_providers = isset($_POST['hidden_providers']) ? $_POST['hidden_providers'] : [];
        update_option('AdPro_hidden_providers', $hidden_providers);
        echo '<div class="notice notice-success"><p>הגדרות הספקים נשמרו בהצלחה!</p></div>';
    }
    
    // קבלת נתוני ספקים מהשרת
    $api_key = get_option('AdPro_api_key');
    $merchant_id = get_option('AdPro_merchant_id');
    
    if (!empty($api_key) && !empty($merchant_id)) {
        $packages = AdPro_esim_get_packages();
        
        // חילוץ ספקים ייחודיים
        foreach ($packages as $package) {
            if (isset($package['providerId']) && isset($package['providerName'])) {
                $providers[$package['providerId']] = [
                    'id' => $package['providerId'],
                    'name' => $package['providerName'],
                    'hidden' => in_array($package['providerId'], $hidden_providers)
                ];
            }
        }
    }
    
    ?>
    <div class="wrap">
        <h1>ניהול ספקים</h1>
        <p>הסתר או הצג ספקים שונים באתר.</p>
        
        <?php if (empty($api_key) || empty($merchant_id)) : ?>
            <div class="notice notice-warning">
                <p>חסרים פרטי התחברות ל-API. <a href="<?php echo admin_url('admin.php?page=AdPro-esim-settings'); ?>">הגדר את פרטי ה-API</a> כדי לראות רשימת ספקים.</p>
            </div>
        <?php elseif (empty($providers)) : ?>
            <div class="notice notice-warning">
                <p>לא נמצאו ספקים. וודא שיש חיבור תקין ל-API.</p>
            </div>
        <?php else : ?>
            <form method="post" action="">
                <?php wp_nonce_field('AdPro_providers_nonce'); ?>
                
                <table class="wp-list-table widefat fixed striped">
                    <thead>
                        <tr>
                            <th>הצג/הסתר</th>
                            <th>שם הספק</th>
                            <th>מזהה</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php foreach ($providers as $provider) : ?>
                            <tr>
                                <td>
                                    <label class="switch">
                                        <input type="checkbox" name="hidden_providers[]" value="<?php echo esc_attr($provider['id']); ?>" <?php checked($provider['hidden']); ?>>
                                        <span class="slider round"></span>
                                        <span class="switch-label"><?php echo $provider['hidden'] ? 'מוסתר' : 'מוצג'; ?></span>
                                    </label>
                                </td>
                                <td><?php echo esc_html($provider['name']); ?></td>
                                <td><?php echo esc_html($provider['id']); ?></td>
                            </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
                
                <p class="submit">
                    <input type="hidden" name="save_providers" value="1">
                    <?php submit_button('שמור הגדרות', 'primary', 'submit', false); ?>
                </p>
            </form>
            
            <style>
                /* מתג הצגה/הסתרה */
                .switch {
                    position: relative;
                    display: inline-block;
                    width: 50px;
                    height: 24px;
                }
                
                .switch input {
                    opacity: 0;
                    width: 0;
                    height: 0;
                }
                
                .slider {
                    position: absolute;
                    cursor: pointer;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background-color: #ccc;
                    transition: .4s;
                }
                
                .slider:before {
                    position: absolute;
                    content: "";
                    height: 16px;
                    width: 16px;
                    left: 4px;
                    bottom: 4px;
                    background-color: white;
                    transition: .4s;
                }
                
                input:checked + .slider {
                    background-color: #f44336;
                }
                
                input:focus + .slider {
                    box-shadow: 0 0 1px #f44336;
                }
                
                input:checked + .slider:before {
                    transform: translateX(26px);
                }
                
                .slider.round {
                    border-radius: 24px;
                }
                
                .slider.round:before {
                    border-radius: 50%;
                }
                
                .switch-label {
                    display: inline-block;
                    margin-left: 60px;
                    font-size: 14px;
                }
                
                input:checked + .slider + .switch-label {
                    color: #f44336;
                }
            </style>
            
            <script>
                jQuery(document).ready(function($) {
                    // עדכון תווית המתג
                    $('input[type="checkbox"]').on('change', function() {
                        var $label = $(this).siblings('.switch-label');
                        
                        if ($(this).is(':checked')) {
                            $label.text('מוסתר');
                        } else {
                            $label.text('מוצג');
                        }
                    });
                });
            </script>
        <?php endif; ?>
    </div>
    <?php
}

/**
 * דף סטטיסטיקות ונתונים
 */
function AdPro_esim_stats_page() {
    // חישוב סטטיסטיקות מכירה ונתונים על חבילות eSIM
    global $wpdb;
    
    // קבלת נתוני הזמנות
    $orders_query = "
        SELECT 
            p.ID as order_id,
            p.post_date as order_date,
            oim.meta_value as esim_country,
            om.meta_value as order_total
        FROM 
            {$wpdb->posts} p
        JOIN 
            {$wpdb->postmeta} om ON p.ID = om.post_id
        JOIN 
            {$wpdb->prefix}woocommerce_order_items oi ON p.ID = oi.order_id
        JOIN 
            {$wpdb->prefix}woocommerce_order_itemmeta oim ON oi.order_item_id = oim.order_item_id
        WHERE 
            p.post_type = 'shop_order'
            AND p.post_status = 'wc-completed'
            AND om.meta_key = '_order_total'
            AND oim.meta_key = 'esim_country'
        ORDER BY
            p.post_date DESC
    ";
    
    $orders = $wpdb->get_results($orders_query);
    
    // ארגון נתונים לפי מדינות
    $countries_stats = [];
    $total_revenue = 0;
    $total_orders = 0;
    
    foreach ($orders as $order) {
        $country = $order->esim_country;
        $revenue = floatval($order->order_total);
        $total_revenue += $revenue;
        $total_orders++;
        
        if (!isset($countries_stats[$country])) {
            $countries_stats[$country] = [
                'orders' => 0,
                'revenue' => 0
            ];
        }
        
        $countries_stats[$country]['orders']++;
        $countries_stats[$country]['revenue'] += $revenue;
    }
    
    // מיון לפי הכנסות (מהגבוה לנמוך)
    uasort($countries_stats, function($a, $b) {
        return $b['revenue'] <=> $a['revenue'];
    });
    
    ?>
    <div class="wrap">
        <h1>סטטיסטיקות eSIM</h1>
        
        <div class="stats-container">
            <div class="stats-summary">
                <div class="stat-card">
                    <h3>סה"כ הזמנות</h3>
                    <div class="stat-value"><?php echo $total_orders; ?></div>
                </div>
                
                <div class="stat-card">
                    <h3>סה"כ הכנסות</h3>
                    <div class="stat-value">₪<?php echo number_format($total_revenue, 2); ?></div>
                </div>
                
                <div class="stat-card">
                    <h3>הכנסה ממוצעת להזמנה</h3>
                    <div class="stat-value">₪<?php echo $total_orders > 0 ? number_format($total_revenue / $total_orders, 2) : '0.00'; ?></div>
                </div>
            </div>
            
            <?php if (!empty($countries_stats)) : ?>
                <div class="stats-details">
                    <h2>סטטיסטיקות לפי מדינה</h2>
                    
                    <table class="wp-list-table widefat fixed striped">
                        <thead>
                            <tr>
                                <th>מדינה</th>
                                <th>הזמנות</th>
                                <th>הכנסות</th>
                                <th>הכנסה ממוצעת</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php foreach ($countries_stats as $country => $stats) : ?>
                                <tr>
                                    <td><?php echo esc_html($country); ?></td>
                                    <td><?php echo $stats['orders']; ?></td>
                                    <td>₪<?php echo number_format($stats['revenue'], 2); ?></td>
                                    <td>₪<?php echo number_format($stats['revenue'] / $stats['orders'], 2); ?></td>
                                </tr>
                            <?php endforeach; ?>
                        </tbody>
                    </table>
                </div>
            <?php else : ?>
                <div class="notice notice-info">
                    <p>אין עדיין נתוני מכירות.</p>
                </div>
            <?php endif; ?>
        </div>
    </div>
    
    <style>
        .stats-container {
            margin-top: 20px;
        }
        
        .stats-summary {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            flex: 1;
            background: white;
            border-radius: 6px;
            padding: 20px;
            box-shadow: 0 1px 4px rgba(0,0,0,0.1);
            text-align: center;
        }
        
        .stat-card h3 {
            margin-top: 0;
            color: #555;
            font-weight: normal;
        }
        
        .stat-value {
            font-size: 24px;
            font-weight: bold;
            color: #333;
        }
        
        .stats-details {
            background: white;
            border-radius: 6px;
            padding: 20px;
            box-shadow: 0 1px 4px rgba(0,0,0,0.1);
        }
        
        .stats-details h2 {
            margin-top: 0;
        }
        
        @media (max-width: 768px) {
            .stats-summary {
                flex-direction: column;
            }
        }
    </style>
    <?php
}-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/includes/api-handler.php ===
<?php
/**
 * טיפול ב-API של מובימטר
 */

if (!defined('ABSPATH')) {
    exit; // יציאה אם הגישה ישירה
}

/**
 * קבלת חבילות eSIM לפי מדינה
 * 
 * @param string $country קוד מדינה
 * @return array מערך של חבילות
 */
function AdPro_esim_get_packages($country = '') {
    // בדיקה אם יש במטמון
    $cache_key = 'AdPro_esim_packages_' . md5($country);
    $cached_packages = get_transient($cache_key);
    
    // אם יש במטמון וזה לא מצב דיבאג, החזר את המטמון
    if ($cached_packages !== false && !isset($_GET['no_cache'])) {
        return $cached_packages;
    }

    // קבל פרטי התחברות מהגדרות התוסף
    $api_key = get_option('AdPro_api_key');
    $merchant_id = get_option('AdPro_merchant_id');

    // וודא שיש פרטי התחברות
    if (empty($api_key) || empty($merchant_id)) {
        error_log('AdPro eSIM: Missing API credentials');
        return [];
    }

    // בנה את כתובת ה-API
    $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/products';
    $query_params = [];
    
    // הוסף פרמטר מדינה אם יש
    if (!empty($country)) {
        $query_params['country'] = $country;
    }
    
    // הוספת פרמטר הקטגוריה
    $query_params['category'] = 'esim_realtime';
    
    // הוסף פרמטרים לכתובת
    if (!empty($query_params)) {
        $api_url .= '?' . http_build_query($query_params);
    }

    // בנה את פרטי הבקשה
    $args = [
        'headers' => [
            'Accept' => 'text/plain',
            'merchantId' => $merchant_id,
            'api-key' => $api_key,
        ],
        'timeout' => 30, // הגדל את זמן התגובה המקסימלי
    ];

    // שלח את הבקשה ל-API
    $response = wp_remote_get($api_url, $args);
    
    // בדוק אם הייתה שגיאה
    if (is_wp_error($response)) {
        error_log('AdPro eSIM API Error: ' . $response->get_error_message());
        return [];
    }

    // קבל את תוכן התגובה ופענח JSON
    $body = wp_remote_retrieve_body($response);
    $data = json_decode($body, true);

    // בדוק שהתגובה תקינה
    if (!isset($data['statusCode']) || $data['statusCode'] !== 200) {
        error_log('AdPro eSIM API Error: Invalid response - ' . json_encode($data));
        return [];
    }

    // קבל את החבילות מהתגובה
    $packages = isset($data['result']) ? $data['result'] : [];
    
    // סינון ספקים שסומנו להסתרה
    $hidden_providers = get_option('AdPro_hidden_providers', []);
    
    // סנן את החבילות לפי ספקים מוסתרים
    if (!empty($hidden_providers)) {
        $packages = array_filter($packages, function($package) use ($hidden_providers) {
            return !isset($package['providerId']) || !in_array($package['providerId'], $hidden_providers);
        });
        
        // המר בחזרה למערך רגיל (לא אסוציאטיבי)
        $packages = array_values($packages);
    }
    
    // הוסף מידע מעובד לחבילות
    foreach ($packages as &$package) {
        // חילוץ פרטי חבילה רלוונטיים
        $package['processed_data'] = [
            'data_limit' => '',
            'data_unit' => '',
            'validity_days' => '',
            'title' => isset($package['title']) ? $package['title'] : ''
        ];
        
        if (isset($package['productDetails']) && is_array($package['productDetails'])) {
            foreach ($package['productDetails'] as $detail) {
                if ($detail['name'] === 'PLAN_TITLE' && !empty($detail['value'])) {
                    $package['processed_data']['title'] = $detail['value'];
                }
                if ($detail['name'] === 'PLAN_DATA_LIMIT' && !empty($detail['value'])) {
                    $package['processed_data']['data_limit'] = $detail['value'];
                }
                if ($detail['name'] === 'PLAN_DATA_UNIT' && !empty($detail['value'])) {
                    $package['processed_data']['data_unit'] = $detail['value'];
                }
                if ($detail['name'] === 'PLAN_VALIDITY' && !empty($detail['value'])) {
                    // המרת דקות לימים
                    $package['processed_data']['validity_days'] = round(intval($detail['value']) / 24);
                }
            }
        }
    }
    
    // שמור במטמון וגם החזר
    set_transient($cache_key, $packages, 1 * HOUR_IN_SECONDS); // שמור במטמון לשעה
    return $packages;
}

/**
 * קבלת חבילה ספציפית לפי מזהה
 * 
 * @param string $country קוד מדינה
 * @param string $package_id מזהה חבילה
 * @return array|null פרטי החבילה או null אם לא נמצא
 */
function AdPro_get_package_by_id($country, $package_id) {
    // קבלת כל החבילות למדינה
    $packages = AdPro_esim_get_packages($country);
    
    // חיפוש החבילה לפי מזהה
    foreach ($packages as $package) {
        if (isset($package['productId']) && $package['productId'] === $package_id) {
            return $package;
        }
    }
    
    return null;
}

/**
 * קבלת המחיר הנמוך ביותר עבור מדינה
 * 
 * @param string $country_iso קוד ISO של המדינה
 * @return array|boolean מערך עם המחיר והמטבע או false אם אין נתונים
 */
function AdPro_get_min_price_for_country($country_iso) {
    // בדיקה אם יש במטמון
    $cache_key = 'AdPro_min_price_' . $country_iso;
    $cached_price = get_transient($cache_key);
    
    if ($cached_price !== false) {
        return $cached_price;
    }
    
    // קבלת כל החבילות למדינה
    $packages = AdPro_esim_get_packages($country_iso);
    
    if (empty($packages)) {
        return false;
    }
    
    $min_price = PHP_FLOAT_MAX;
    $currency = '';
    
    // חיפוש המחיר הנמוך ביותר
    foreach ($packages as $package) {
        if (isset($package['retailPrice']) && is_numeric($package['retailPrice'])) {
            $price = floatval($package['retailPrice']);
            
            if ($price < $min_price) {
                $min_price = $price;
                $currency = isset($package['currencyCode']) ? $package['currencyCode'] : '';
            }
        }
    }
    
    if ($min_price == PHP_FLOAT_MAX) {
        return false;
    }
    
    $result = [
        'price' => $min_price,
        'currency' => $currency
    ];
    
    // שמירה במטמון ל-3 שעות
    set_transient($cache_key, $result, 3 * HOUR_IN_SECONDS);
    
    return $result;
}

/**
 * בדיקת תוקף מפתח API של מובימטר
 * 
 * @return boolean האם המפתח תקין
 */
function AdPro_validate_api_key() {
    $api_key = get_option('AdPro_api_key');
    $merchant_id = get_option('AdPro_merchant_id');
    
    if (empty($api_key) || empty($merchant_id)) {
        return false;
    }
    
    // ניסיון קריאה בסיסית ל-API
    $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/products?limit=1';
    
    $args = [
        'headers' => [
            'Accept' => 'text/plain',
            'merchantId' => $merchant_id,
            'api-key' => $api_key,
        ],
        'timeout' => 10,
    ];
    
    $response = wp_remote_get($api_url, $args);
    
    if (is_wp_error($response)) {
        return false;
    }
    
    $response_code = wp_remote_retrieve_response_code($response);
    
    return $response_code === 200;
}

/**
 * קבלת רשתות סלולריות נתמכות למוצר מסוים
 * 
 * @param string $product_id מזהה המוצר
 * @return array מערך של רשתות סלולריות
 */
function AdPro_get_product_networks($product_id) {
    // בדיקה אם יש במטמון
    $cache_key = 'AdPro_product_networks_' . md5($product_id);
    $cached_networks = get_transient($cache_key);
    
    // אם יש במטמון וזה לא מצב דיבאג, החזר את המטמון
    if ($cached_networks !== false && !isset($_GET['no_cache'])) {
        return $cached_networks;
    }

    // קבל פרטי התחברות מהגדרות התוסף
    $api_key = get_option('AdPro_api_key');
    $merchant_id = get_option('AdPro_merchant_id');

    // וודא שיש פרטי התחברות
    if (empty($api_key) || empty($merchant_id) || empty($product_id)) {
        return [];
    }

    // בנה את כתובת ה-API
    $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/products/' . $product_id . '/networks';

    // בנה את פרטי הבקשה
    $args = [
        'headers' => [
            'Accept' => 'text/plain',
            'merchantId' => $merchant_id,
            'api-key' => $api_key,
        ],
        'timeout' => 30,
    ];

    // שלח את הבקשה ל-API
    $response = wp_remote_get($api_url, $args);
    
    // בדוק אם הייתה שגיאה
    if (is_wp_error($response)) {
        error_log('AdPro eSIM API Error (Networks): ' . $response->get_error_message());
        return [];
    }

    // קבל את תוכן התגובה ופענח JSON
    $body = wp_remote_retrieve_body($response);
    $data = json_decode($body, true);

    // בדוק שהתגובה תקינה
    if (!isset($data['statusCode']) || $data['statusCode'] !== 200) {
        error_log('AdPro eSIM API Error (Networks): Invalid response - ' . json_encode($data));
        return [];
    }

    // קבל את הרשתות מהתגובה
    $networks = isset($data['result']) ? $data['result'] : [];
    
    // שמור במטמון וגם החזר
    set_transient($cache_key, $networks, 12 * HOUR_IN_SECONDS); // שמור במטמון ל-12 שעות
    return $networks;
}

/**
 * סינון רשתות סלולריות לפי מדינה
 * 
 * @param array $networks מערך של רשתות סלולריות
 * @param string $country_iso קוד ISO של המדינה
 * @return array מערך מסונן של רשתות סלולריות
 */
function AdPro_filter_networks_by_country($networks, $country_iso) {
    if (empty($networks) || empty($country_iso)) {
        return [];
    }
    
    $filtered_networks = [];
    
    foreach ($networks as $network) {
        if (isset($network['country']) && strtoupper($network['country']) === strtoupper($country_iso)) {
            $filtered_networks[] = $network;
        }
    }
    
    return $filtered_networks;
}


/**
 * ניקוי המטמון של API
 */
function AdPro_clear_api_cache() {
    global $wpdb;
    
    $wpdb->query("DELETE FROM $wpdb->options WHERE option_name LIKE '%_transient_AdPro_esim_packages_%'");
    $wpdb->query("DELETE FROM $wpdb->options WHERE option_name LIKE '%_transient_timeout_AdPro_esim_packages_%'");
    $wpdb->query("DELETE FROM $wpdb->options WHERE option_name LIKE '%_transient_AdPro_min_price_%'");
    $wpdb->query("DELETE FROM $wpdb->options WHERE option_name LIKE '%_transient_timeout_AdPro_min_price_%'");
    
    return true;
}-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/includes/class-wc-icount-gateway.php ===
<?php
/**
 * Custom Payment Gateway for iCount API integration
 */

if (!defined('ABSPATH')) {
    exit;
}

// בדיקה שמחלקת WooCommerce קיימת
if (!class_exists('WC_Payment_Gateway')) {
    return;
}

class WC_iCount_Gateway extends WC_Payment_Gateway {

    /**
     * Setup payment gateway properties
     */
    public function __construct() {
        $this->id                   = 'icount_gateway';
        $this->icon                 = '';
        $this->has_fields           = true;
        $this->method_title         = 'סליקה באמצעות iCount';
        $this->method_description   = 'קבלת תשלום באמצעות iCount לחבילות eSIM';
        $this->supports             = array('products');
        
        // הגדרת ערכים קבועים - לא מגדרות
        $this->title                = 'תשלום בכרטיס אשראי';
        $this->description          = 'שלם באופן מאובטח באמצעות כרטיס אשראי';
        $this->enabled = 'yes'; // כפיית הפעלה תמיד
        
        // פעולות
        add_action('woocommerce_update_options_payment_gateways_' . $this->id, array($this, 'process_admin_options'));
        add_action('woocommerce_receipt_' . $this->id, array($this, 'receipt_page'));
        add_action('woocommerce_thankyou_' . $this->id, array($this, 'thankyou_page'));
        add_action('woocommerce_api_wc_icount_gateway', array($this, 'process_icount_response'));
    }
	
	    /**
     * Check if gateway is available for use - גרסה פשוטה ביותר
     */
    public function is_available() {
    return true; // תמיד זמין
}
    
/**
 * Initialize gateway settings form fields
 */
public function init_form_fields() {
    $this->form_fields = array(
        'enabled' => array(
            'title'       => 'הפעלה/כיבוי',
            'type'        => 'checkbox',
            'label'       => 'הפעל סליקה באמצעות iCount',
            'default'     => 'yes'
        ),
        'title' => array(
            'title'       => 'כותרת',
            'type'        => 'text',
            'description' => 'הכותרת שתוצג ללקוח במסך התשלום',
            'default'     => 'תשלום בכרטיס אשראי',
        ),
        'description' => array(
            'title'       => 'תיאור',
            'type'        => 'textarea',
            'description' => 'התיאור שיוצג ללקוח בדף התשלום',
            'default'     => 'שלם באופן מאובטח באמצעות כרטיס אשראי',
        )
    );
}
    
    /**
     * Output payment fields
     */
    public function payment_fields() {
        echo wpautop(wp_kses_post($this->description));
        
        echo '<fieldset id="wc-' . esc_attr($this->id) . '-cc-form" class="wc-credit-card-form wc-payment-form">';
        
        // Add a heading for credit card form
        echo '<div class="form-row form-row-wide">
            <h3>' . esc_html__('פרטי כרטיס אשראי', 'woocommerce') . '</h3>
        </div>';
        
        // Add credit card number field
        echo '<div class="form-row form-row-wide">
            <label for="' . esc_attr($this->id) . '-card-number">' . esc_html__('מספר כרטיס', 'woocommerce') . ' <span class="required">*</span></label>
            <input id="' . esc_attr($this->id) . '-card-number" class="input-text wc-credit-card-form-card-number" inputmode="numeric" autocomplete="cc-number" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" placeholder="•••• •••• •••• ••••" name="' . esc_attr($this->id) . '-card-number" />
        </div>';
        
        // Add credit card expiry field (month/year)
        echo '<div class="form-row form-row-first">
            <label for="' . esc_attr($this->id) . '-card-expiry">' . esc_html__('תוקף (MM/YY)', 'woocommerce') . ' <span class="required">*</span></label>
            <input id="' . esc_attr($this->id) . '-card-expiry" class="input-text wc-credit-card-form-card-expiry" inputmode="numeric" autocomplete="cc-exp" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" placeholder="MM / YY" name="' . esc_attr($this->id) . '-card-expiry" />
        </div>';
        
        // Add credit card CVC field
        echo '<div class="form-row form-row-last">
            <label for="' . esc_attr($this->id) . '-card-cvc">' . esc_html__('קוד אבטחה (CVC)', 'woocommerce') . ' <span class="required">*</span></label>
            <input id="' . esc_attr($this->id) . '-card-cvc" class="input-text wc-credit-card-form-card-cvc" inputmode="numeric" autocomplete="off" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" maxlength="4" placeholder="CVC" name="' . esc_attr($this->id) . '-card-cvc" />
        </div>';
        
        // ID field
        echo '<div class="form-row form-row-wide">
            <label for="' . esc_attr($this->id) . '-card-holder-id">' . esc_html__('מספר תעודת זהות', 'woocommerce') . ' <span class="required">*</span></label>
            <input id="' . esc_attr($this->id) . '-card-holder-id" class="input-text" inputmode="numeric" autocomplete="off" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" name="' . esc_attr($this->id) . '-card-holder-id" />
        </div>';
        
        // Add name on card field
        echo '<div class="form-row form-row-wide">
            <label for="' . esc_attr($this->id) . '-card-holder-name">' . esc_html__('שם בעל הכרטיס', 'woocommerce') . ' <span class="required">*</span></label>
            <input id="' . esc_attr($this->id) . '-card-holder-name" class="input-text" type="text" autocomplete="cc-name" name="' . esc_attr($this->id) . '-card-holder-name" />
        </div>';
        
        // Add installments field
        echo '<div class="form-row form-row-wide">
            <label for="' . esc_attr($this->id) . '-installments">' . esc_html__('תשלומים', 'woocommerce') . '</label>
            <select id="' . esc_attr($this->id) . '-installments" name="' . esc_attr($this->id) . '-installments">
                <option value="1">תשלום אחד</option>
                <option value="2">2 תשלומים</option>
                <option value="3">3 תשלומים</option>
                <option value="4">4 תשלומים</option>
                <option value="5">5 תשלומים</option>
                <option value="6">6 תשלומים</option>
                <option value="7">7 תשלומים</option>
                <option value="8">8 תשלומים</option>
                <option value="9">9 תשלומים</option>
                <option value="10">10 תשלומים</option>
                <option value="11">11 תשלומים</option>
                <option value="12">12 תשלומים</option>
            </select>
        </div>';
        
        echo '<div class="clear"></div>';
        echo '</fieldset>';
    }
    
    /**
     * Process the payment
     */
    public function process_payment($order_id) {
        // Get order
        $order = wc_get_order($order_id);
        
        // Check for card data
        if (!isset($_POST[$this->id . '-card-number']) || 
            !isset($_POST[$this->id . '-card-expiry']) || 
            !isset($_POST[$this->id . '-card-cvc']) || 
            !isset($_POST[$this->id . '-card-holder-id']) ||
            !isset($_POST[$this->id . '-card-holder-name'])) {
            wc_add_notice('נא להזין את פרטי כרטיס האשראי', 'error');
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        // Validate card number
        $card_number = sanitize_text_field($_POST[$this->id . '-card-number']);
        $card_number = preg_replace('/\D/', '', $card_number); // Remove non-digits
        
        if (strlen($card_number) < 12 || strlen($card_number) > 19) {
            wc_add_notice('מספר כרטיס האשראי אינו תקין', 'error');
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        // Validate expiry date
        $expiry = sanitize_text_field($_POST[$this->id . '-card-expiry']);
        $expiry = preg_replace('/\D/', '', $expiry); // Remove non-digits
        
        if (strlen($expiry) !== 4) {
            wc_add_notice('תאריך תפוגה אינו תקין, נא להזין בפורמט MM/YY', 'error');
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        $exp_month = substr($expiry, 0, 2);
        $exp_year = substr($expiry, 2, 2);
        
        if ($exp_month < 1 || $exp_month > 12) {
            wc_add_notice('חודש לא חוקי בתאריך תפוגה', 'error');
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        // Validate CVC
        $cvc = sanitize_text_field($_POST[$this->id . '-card-cvc']);
        $cvc = preg_replace('/\D/', '', $cvc); // Remove non-digits
        
        if (strlen($cvc) < 3 || strlen($cvc) > 4) {
            wc_add_notice('קוד האבטחה אינו תקין', 'error');
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        // Validate ID
        $holder_id = sanitize_text_field($_POST[$this->id . '-card-holder-id']);
        $holder_id = preg_replace('/\D/', '', $holder_id); // Remove non-digits
        
        if (strlen($holder_id) < 8 || strlen($holder_id) > 9) {
            wc_add_notice('מספר תעודת הזהות אינו תקין', 'error');
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        // Get holder name
        $holder_name = sanitize_text_field($_POST[$this->id . '-card-holder-name']);
        
        if (empty($holder_name)) {
            wc_add_notice('נא להזין את שם בעל הכרטיס', 'error');
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        // Get installments
        $installments = isset($_POST[$this->id . '-installments']) ? intval($_POST[$this->id . '-installments']) : 1;
        
        // Create order note with payment details (but mask sensitive data)
        $masked_card = substr($card_number, 0, 4) . ' XXXX XXXX ' . substr($card_number, -4);
        $order->add_order_note(sprintf(
            'תשלום התקבל באמצעות כרטיס אשראי (מספר: %s, תוקף: %s/%s, שם: %s, תשלומים: %d)',
            $masked_card,
            $exp_month,
            $exp_year,
            $holder_name,
            $installments
        ));
        
        // Create a iCount order
        $mobimatter_order_id = $this->create_mobimatter_order($order);
        
        if (!$mobimatter_order_id) {
            wc_add_notice('שגיאה ביצירת הזמנה במובימטר', 'error');
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        // Save order meta
        $order->update_meta_data('_mobimatter_order_id', $mobimatter_order_id);
        $order->save();
        
        // Process payment through iCount
        $payment_result = $this->process_icount_payment($order, array(
            'card_number' => $card_number,
            'exp_month' => $exp_month,
            'exp_year' => $exp_year,
            'cvc' => $cvc,
            'holder_id' => $holder_id,
            'holder_name' => $holder_name,
            'installments' => $installments
        ));
        
        if (!$payment_result['success']) {
            wc_add_notice('שגיאה בעיבוד התשלום: ' . $payment_result['message'], 'error');
            
            // Cancel Mobimatter order
            $this->cancel_mobimatter_order($mobimatter_order_id);
            
            return array(
                'result' => 'fail',
                'redirect' => ''
            );
        }
        
        // Save iCount document info
        if (isset($payment_result['doc_number'])) {
            $order->update_meta_data('_icount_doc_number', $payment_result['doc_number']);
        }
        
        // Complete the Mobimatter order now that payment is successful
        $esim_data = $this->complete_mobimatter_order($order, $mobimatter_order_id);
        
        if ($esim_data) {
            // Save eSIM data to order
            if (isset($esim_data['qrCodeImage'])) {
                $order->update_meta_data('_esim_qr_code', $esim_data['qrCodeImage']);
            }
            
            if (isset($esim_data['activationCode'])) {
                $order->update_meta_data('_esim_activation_code', $esim_data['activationCode']);
            }
            
            if (isset($esim_data['details'])) {
                $order->update_meta_data('_esim_details', json_encode($esim_data['details']));
            }
        }
        
        // Set as processing or completed
        $order->payment_complete();
        
        // Add success note
        $order->add_order_note('התשלום בוצע בהצלחה דרך iCount. מסמך מספר: ' . ($payment_result['doc_number'] ?? 'לא זמין'));
        
        // Send eSIM email
        AdPro_send_esim_details_email($order_id);
        
        // Return success
        return array(
            'result' => 'success',
            'redirect' => $this->get_return_url($order)
        );
    }
    
    /**
     * Create order in Mobimatter
     */
    private function create_mobimatter_order($order) {
        // Get order items
        $order_items = $order->get_items();
        if (empty($order_items)) {
            return false;
        }
        
        // Get first item
        $item = reset($order_items);
        
        // Verify eSIM package exists
        $package_id = $item->get_meta('esim_package_id');
        $country_iso = $item->get_meta('esim_country_iso');
        
        if (empty($package_id) || empty($country_iso)) {
            return false;
        }
        
        // Create Mobimatter order
        $api_key = get_option('AdPro_api_key');
        $merchant_id = get_option('AdPro_merchant_id');
        
        $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/order';
        
        $order_data = [
            'productId' => $package_id,
            'quantity' => 1,
            'orderId' => 'wc_' . $order->get_id()
        ];
        
        $args = [
            'headers' => [
                'Accept' => 'text/plain',
                'merchantId' => $merchant_id,
                'api-key' => $api_key,
                'Content-Type' => 'application/json'
            ],
            'body' => json_encode($order_data),
            'method' => 'POST',
            'timeout' => 30
        ];
        
        $response = wp_remote_post($api_url, $args);
        
        if (is_wp_error($response)) {
            $error_message = $response->get_error_message();
            $order->add_order_note('שגיאה ביצירת הזמנה במובימטר: ' . $error_message);
            error_log('שגיאה ביצירת הזמנה במובימטר: ' . $error_message);
            return false;
        }
        
        $response_code = wp_remote_retrieve_response_code($response);
        $response_body = wp_remote_retrieve_body($response);
        $response_data = json_decode($response_body, true);
        
        if ($response_code !== 200 || !isset($response_data['result']['id'])) {
            $error_message = isset($response_data['message']) ? $response_data['message'] : 'שגיאה לא ידועה';
            $order->add_order_note('שגיאה ביצירת הזמנה במובימטר: ' . $error_message);
            error_log('שגיאה ביצירת הזמנה במובימטר: קוד ' . $response_code . ', הודעה: ' . $error_message);
            return false;
        }
        
        $mobimatter_order_id = $response_data['result']['id'];
        $order->add_order_note('נוצרה הזמנה במובימטר בהצלחה, מזהה: ' . $mobimatter_order_id);
        
        return $mobimatter_order_id;
    }
    
    /**
     * Process payment through iCount API
     */
    private function process_icount_payment($order, $card_data) {
        // Get iCount credentials
        $icount_company_id = get_option('AdPro_icount_company_id');
        $icount_user = get_option('AdPro_icount_user');
        $icount_pass = get_option('AdPro_icount_pass');
        
        if (empty($icount_company_id) || empty($icount_user) || empty($icount_pass)) {
            return [
                'success' => false,
                'message' => 'חסרים פרטי התחברות של iCount'
            ];
        }
        
        // Prepare customer data
        $customer_name = $order->get_billing_first_name() . ' ' . $order->get_billing_last_name();
        $customer_email = $order->get_billing_email();
        $customer_phone = $order->get_billing_phone();
        
        // Collect product details for invoice
        $items = [];
        foreach ($order->get_items() as $item) {
            $country = $item->get_meta('מדינה') ?: '';
            $data_limit = $item->get_meta('נפח גלישה') ?: '';
            $validity_days = $item->get_meta('תקופת תוקף') ?: '';
            
            $description = "חבילת eSIM";
            if (!empty($data_limit)) {
                $description .= " {$data_limit}";
            }
            if (!empty($country)) {
                $description .= " ל{$country}";
            }
            if (!empty($validity_days)) {
                $description .= " ל-{$validity_days}";
            }
            
            $items[] = [
                'description' => $description,
                'unitprice' => $item->get_total() / $item->get_quantity(),
                'quantity' => $item->get_quantity()
            ];
        }
        
        // Prepare payment data for iCount
        $payment_data = [
            'cid' => $icount_company_id,
            'user' => $icount_user,
            'pass' => $icount_pass,
            'doctype' => 'invrec', // חשבונית-קבלה
            'client_name' => $customer_name,
            'email' => $customer_email,
            'phone' => $customer_phone,
            'lang' => 'he',
            'currency_code' => 'ILS',
            'items' => $items,
            'cc' => [
                'sum' => $order->get_total(),
                'card_type' => $this->get_card_type($card_data['card_number']),
                'card_number' => substr($card_data['card_number'], -4),
                'exp_year' => '20' . $card_data['exp_year'],
                'exp_month' => $card_data['exp_month'],
                'holder_id' => $card_data['holder_id'],
                'holder_name' => $card_data['holder_name'],
                'cvv' => $card_data['cvc'],
                'full_number' => $card_data['card_number'], // Used for processing
                'payments' => $card_data['installments']
            ],
            'send_email' => 1,
            'email_to_client' => 1,
            'custom_document_name' => "הזמנה #{$order->get_id()} - {$customer_name}"
        ];
        
        // Send request to iCount
        $response = wp_remote_post('https://api.icount.co.il/api/v3.php/doc/create', [
            'body' => json_encode($payment_data),
            'headers' => ['Content-Type' => 'application/json'],
            'timeout' => 30
        ]);
        
        if (is_wp_error($response)) {
            $error_message = $response->get_error_message();
            $order->add_order_note('שגיאה בחיבור ל-iCount: ' . $error_message);
            error_log('שגיאה בחיבור ל-iCount: ' . $error_message);
            return [
                'success' => false,
                'message' => 'שגיאה בחיבור למערכת הסליקה: ' . $error_message
            ];
        }
        
        $response_body = wp_remote_retrieve_body($response);
        $response_data = json_decode($response_body, true);
        
        if (!isset($response_data['status']) || $response_data['status'] !== 'success') {
            $error_message = isset($response_data['message']) ? $response_data['message'] : 'שגיאה לא ידועה';
            $order->add_order_note('שגיאה ביצירת מסמך ב-iCount: ' . $error_message);
            error_log('שגיאה ביצירת מסמך ב-iCount: ' . $error_message . ' - ' . print_r($response_data, true));
            return [
                'success' => false,
                'message' => $error_message
            ];
        }
        
        // Return success response
        return [
            'success' => true,
            'doc_number' => $response_data['doc_number'] ?? '',
            'message' => 'התשלום בוצע בהצלחה'
        ];
    }
    
    /**
     * Complete order in Mobimatter after successful payment
     */
    private function complete_mobimatter_order($order, $mobimatter_order_id) {
        $api_key = get_option('AdPro_api_key');
        $merchant_id = get_option('AdPro_merchant_id');
        
        $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/order/complete';
        
        $complete_data = [
            'id' => $mobimatter_order_id
        ];
        
        $args = [
            'headers' => [
                'Accept' => 'text/plain',
                'merchantId' => $merchant_id,
                'api-key' => $api_key,
                'Content-Type' => 'application/json'
            ],
            'body' => json_encode($complete_data),
            'method' => 'POST',
            'timeout' => 30
        ];
        
        $response = wp_remote_post($api_url, $args);
        
        if (is_wp_error($response)) {
            $error_message = $response->get_error_message();
            $order->add_order_note('שגיאה בהשלמת הזמנה במובימטר: ' . $error_message);
            error_log('שגיאה בהשלמת הזמנה במובימטר: ' . $error_message);
            return false;
        }
        
        $response_code = wp_remote_retrieve_response_code($response);
        $response_body = wp_remote_retrieve_body($response);
        $response_data = json_decode($response_body, true);
        
        if ($response_code !== 200 || !isset($response_data['result'])) {
            $error_message = isset($response_data['message']) ? $response_data['message'] : 'שגיאה לא ידועה';
            $order->add_order_note('שגיאה בהשלמת הזמנה במובימטר: ' . $error_message);
            error_log('שגיאה בהשלמת הזמנה במובימטר: ' . $error_message);
            return false;
        }
        
        $order->add_order_note('הזמנה הושלמה בהצלחה במובימטר');
        
        return $response_data['result'];
    }
    
    /**
     * Cancel Mobimatter order if payment fails
     */
    private function cancel_mobimatter_order($mobimatter_order_id) {
        $api_key = get_option('AdPro_api_key');
        $merchant_id = get_option('AdPro_merchant_id');
        
        $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/order/cancel';
        
        $cancel_data = [
            'id' => $mobimatter_order_id
        ];
        
        $args = [
            'headers' => [
                'Accept' => 'text/plain',
                'merchantId' => $merchant_id,
                'api-key' => $api_key,
                'Content-Type' => 'application/json'
            ],
            'body' => json_encode($cancel_data),
            'method' => 'POST',
            'timeout' => 30
        ];
        
        wp_remote_post($api_url, $args);
    }
    
    /**
     * Get card type based on card number
     */
    private function get_card_type($card_number) {
        // Get first digits
        $first_digit = substr($card_number, 0, 1);
        $first_two_digits = substr($card_number, 0, 2);
        
        // Basic card type detection
        if ($first_digit === '4') {
            return 'VISA';
        } elseif ($first_two_digits >= '51' && $first_two_digits <= '55') {
            return 'MASTERCARD';
        } elseif ($first_two_digits === '34' || $first_two_digits === '37') {
            return 'AMEX';
        } elseif ($first_two_digits === '30' || $first_two_digits === '36' || $first_two_digits === '38') {
            return 'DINERS';
        } else {
            return 'OTHER';
        }
    }

    /**
     * Check if gateway is available for use
     */
/**
 * Check if gateway is available for use
 */
/**
 * Check if gateway is available for use
 */

    
    /**
     * Output for the order received page.
     */
    public function thankyou_page($order_id) {
        $order = wc_get_order($order_id);
        
        if ($order->get_payment_method() !== $this->id) {
            return;
        }
        
        $qr_code = $order->get_meta('_esim_qr_code');
        $activation_code = $order->get_meta('_esim_activation_code');
        
        if (empty($qr_code) && empty($activation_code)) {
            echo '<div class="woocommerce-info">פרטי ה-eSIM מעובדים ויישלחו אליך בהקדם.</div>';
            return;
        }
        
        echo '<h2>פרטי ה-eSIM שלך</h2>';
        echo '<div class="esim-details">';
        
        if (!empty($qr_code)) {
            echo '<div class="esim-qr-code">';
            echo '<h3>קוד QR להפעלה</h3>';
            echo '<img src="' . esc_url($qr_code) . '" alt="eSIM QR Code">';
            echo '</div>';
        }
        
        if (!empty($activation_code)) {
            echo '<div class="esim-activation-code">';
            echo '<h3>קוד הפעלה</h3>';
            echo '<p><strong>' . esc_html($activation_code) . '</strong></p>';
            echo '</div>';
        }
        
        echo '<div class="esim-instructions">';
        echo '<h3>הוראות הפעלה</h3>';
        echo '<ol>';
        echo '<li>לך להגדרות > סלולרי > הוסף תוכנית סלולרית</li>';
        echo '<li>סרוק את קוד ה-QR או הזן את קוד ההפעלה ידנית</li>';
        echo '<li>אשר את התקנת ה-eSIM</li>';
        echo '<li>ודא שהנדידה (Roaming) מופעלת לפני הגעה ליעד</li>';
        echo '</ol>';
        echo '</div>';
        
        echo '</div>';
    }
    
    /**
     * Process a refund if supported.
     * @param  int    $order_id
     * @param  float  $amount
     * @param  string $reason
     * @return bool True or false based on success, or a WP_Error object
     */
    public function process_refund($order_id, $amount = null, $reason = '') {
        // פונקציה זו תיושם בעתיד אם נדרש לתמוך בזיכויים
        return false;
    }
    
    /**
     * Output for the order receipt page.
     */
    public function receipt_page($order_id) {
        // פונקציה זו תיושם בעתיד אם נדרש לתמוך בתהליך תשלום דו-שלבי
        echo '<p>מעבד את התשלום שלך, אנא המתן...</p>';
    }
    
    /**
     * Process IPN callbacks from iCount if needed.
     */
    public function process_icount_response() {
        // פונקציה זו תיושם בעתיד אם נדרשת תמיכה בקבלת עדכונים מאובטחים מ-iCount
        http_response_code(200);
        exit;
    }
}

-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/includes/countries-mapping.php ===
<?php
function AdPro_get_countries_mapping() {
    // קבלת המדינות מהגדרות
    $countries = get_option('AdPro_countries_mapping', []);
    
    // אם אין מדינות מוגדרות, השתמש במערך ברירת מחדל
    if (empty($countries)) {
return [
    'ישראל' => [
        'english' => 'ISRAEL',
        'iso' => 'IL',
        'slug' => 'israel'
    ],
    'ארצות הברית' => [
        'english' => 'UNITED STATES',
        'iso' => 'US',
        'slug' => 'united-states'
    ],
    'צרפת' => [
        'english' => 'FRANCE',
        'iso' => 'FR',
        'slug' => 'france'
    ],
    'גרמניה' => [
        'english' => 'GERMANY',
        'iso' => 'DE',
        'slug' => 'germany'
    ],
    'יפן' => [
        'english' => 'JAPAN',
        'iso' => 'JP',
        'slug' => 'japan'
    ],
    'פולין' => [
        'english' => 'POLAND',
        'iso' => 'PL',
        'slug' => 'poland'
    ],
    'אוסטריה' => [
        'english' => 'AUSTRIA',
        'iso' => 'AT',
        'slug' => 'austria'
    ],
    'בלגיה' => [
        'english' => 'BELGIUM',
        'iso' => 'BE',
        'slug' => 'belgium'
    ],
    'בולגריה' => [
        'english' => 'BULGARIA',
        'iso' => 'BG',
        'slug' => 'bulgaria'
    ],
    'קרואטיה' => [
        'english' => 'CROATIA',
        'iso' => 'HR',
        'slug' => 'croatia'
    ],
    'קפריסין' => [
        'english' => 'CYPRUS',
        'iso' => 'CY',
        'slug' => 'cyprus'
    ],
    'צ׳כיה' => [
        'english' => 'CZECH REPUBLIC',
        'iso' => 'CZ',
        'slug' => 'czech-republic'
    ],
    'דנמרק' => [
        'english' => 'DENMARK',
        'iso' => 'DK',
        'slug' => 'denmark'
    ],
    'אסטוניה' => [
        'english' => 'ESTONIA',
        'iso' => 'EE',
        'slug' => 'estonia'
    ],
    'פינלנד' => [
        'english' => 'FINLAND',
        'iso' => 'FI',
        'slug' => 'finland'
    ],
    'יוון' => [
        'english' => 'GREECE',
        'iso' => 'GR',
        'slug' => 'greece'
    ],
    'הונגריה' => [
        'english' => 'HUNGARY',
        'iso' => 'HU',
        'slug' => 'hungary'
    ],
    'איסלנד' => [
        'english' => 'ICELAND',
        'iso' => 'IS',
        'slug' => 'iceland'
    ],
    'אירלנד' => [
        'english' => 'IRELAND',
        'iso' => 'IE',
        'slug' => 'ireland'
    ],
    'איטליה' => [
        'english' => 'ITALY',
        'iso' => 'IT',
        'slug' => 'italy'
    ],
    'לטביה' => [
        'english' => 'LATVIA',
        'iso' => 'LV',
        'slug' => 'latvia'
    ],
    'ליכטנשטיין' => [
        'english' => 'LIECHTENSTEIN',
        'iso' => 'LI',
        'slug' => 'liechtenstein'
    ],
    'ליטא' => [
        'english' => 'LITHUANIA',
        'iso' => 'LT',
        'slug' => 'lithuania'
    ],
    'לוקסמבורג' => [
        'english' => 'LUXEMBOURG',
        'iso' => 'LU',
        'slug' => 'luxembourg'
    ],
    'מלטה' => [
        'english' => 'MALTA',
        'iso' => 'MT',
        'slug' => 'malta'
    ],
    'הולנד' => [
        'english' => 'NETHERLANDS',
        'iso' => 'NL',
        'slug' => 'netherlands'
    ],
    'פורטוגל' => [
        'english' => 'PORTUGAL',
        'iso' => 'PT',
        'slug' => 'portugal'
    ],
    'רומניה' => [
        'english' => 'ROMANIA',
        'iso' => 'RO',
        'slug' => 'romania'
    ],
    'סלובקיה' => [
        'english' => 'SLOVAKIA',
        'iso' => 'SK',
        'slug' => 'slovakia'
    ],
    'סלובניה' => [
        'english' => 'SLOVENIA',
        'iso' => 'SI',
        'slug' => 'slovenia'
    ],
    'ספרד' => [
        'english' => 'SPAIN',
        'iso' => 'ES',
        'slug' => 'spain'
    ],
    'שוודיה' => [
        'english' => 'SWEDEN',
        'iso' => 'SE',
        'slug' => 'sweden'
    ],
    'שווייץ' => [
        'english' => 'SWITZERLAND',
        'iso' => 'CH',
        'slug' => 'switzerland'
    ],
    'טורקיה' => [
        'english' => 'TURKEY',
        'iso' => 'TR',
        'slug' => 'turkey'
    ],
    'בריטניה' => [
        'english' => 'UNITED KINGDOM',
        'iso' => 'GB',
        'slug' => 'united-kingdom'
    ],
    'הוותיקן' => [
        'english' => 'VATICAN CITY',
        'iso' => 'VA',
        'slug' => 'vatican-city'
    ],

    'אלבניה' => [
        'english' => 'ALBANIA',
        'iso' => 'AL',
        'slug' => 'albania'
    ],
    'אלג׳יריה' => [
        'english' => 'ALGERIA',
        'iso' => 'DZ',
        'slug' => 'algeria'
    ],
    'אנדורה' => [
        'english' => 'ANDORRA',
        'iso' => 'AD',
        'slug' => 'andorra'
    ],
    'ארגנטינה' => [
        'english' => 'ARGENTINA',
        'iso' => 'AR',
        'slug' => 'argentina'
    ],
    'בחריין' => [
        'english' => 'BAHRAIN',
        'iso' => 'BH',
        'slug' => 'bahrain'
    ],
    'בנגלדש' => [
        'english' => 'BANGLADESH',
        'iso' => 'BD',
        'slug' => 'bangladesh'
    ],
    'בלארוס' => [
        'english' => 'BELARUS',
        'iso' => 'BY',
        'slug' => 'belarus'
    ],
    'בוסניה והרצגובינה' => [
        'english' => 'BOSNIA AND HERZEGOVINA',
        'iso' => 'BA',
        'slug' => 'bosnia-and-herzegovina'
    ],
    'ברזיל' => [
        'english' => 'BRAZIL',
        'iso' => 'BR',
        'slug' => 'brazil'
    ],
    'קמבודיה' => [
        'english' => 'CAMBODIA',
        'iso' => 'KH',
        'slug' => 'cambodia'
    ],
    'קנדה' => [
        'english' => 'CANADA',
        'iso' => 'CA',
        'slug' => 'canada'
    ],
    'צ׳אד' => [
        'english' => 'CHAD',
        'iso' => 'TD',
        'slug' => 'chad'
    ],
    'צ׳ילה' => [
        'english' => 'CHILE',
        'iso' => 'CL',
        'slug' => 'chile'
    ],
    'סין' => [
        'english' => 'CHINA',
        'iso' => 'CN',
        'slug' => 'china'
    ],
    'קוסטה ריקה' => [
        'english' => 'COSTA RICA',
        'iso' => 'CR',
        'slug' => 'costa-rica'
    ],
    'אקוודור' => [
        'english' => 'ECUADOR',
        'iso' => 'EC',
        'slug' => 'ecuador'
    ],
    'מצרים' => [
        'english' => 'EGYPT',
        'iso' => 'EG',
        'slug' => 'egypt'
    ],
    'גאורגיה' => [
        'english' => 'GEORGIA',
        'iso' => 'GE',
        'slug' => 'georgia'
    ],
    'גאנה' => [
        'english' => 'GHANA',
        'iso' => 'GH',
        'slug' => 'ghana'
    ],
    'גיברלטר' => [
        'english' => 'GIBRALTAR',
        'iso' => 'GI',
        'slug' => 'gibraltar'
    ],
    'הודו' => [
        'english' => 'INDIA',
        'iso' => 'IN',
        'slug' => 'india'
    ],
    'אינדונזיה' => [
        'english' => 'INDONESIA',
        'iso' => 'ID',
        'slug' => 'indonesia'
    ],
    'יפן' => [
        'english' => 'JAPAN',
        'iso' => 'JP',
        'slug' => 'japan'
    ],
    'ירדן' => [
        'english' => 'JORDAN',
        'iso' => 'JO',
        'slug' => 'jordan'
    ],
    'קניה' => [
        'english' => 'KENYA',
        'iso' => 'KE',
        'slug' => 'kenya'
    ],
    'כווית' => [
        'english' => 'KUWAIT',
        'iso' => 'KW',
        'slug' => 'kuwait'
    ],
    'מקאו' => [
        'english' => 'MACAO',
        'iso' => 'MO',
        'slug' => 'macao'
    ],
    'מדגסקר' => [
        'english' => 'MADAGASCAR',
        'iso' => 'MG',
        'slug' => 'madagascar'
    ],
    'מלאווי' => [
        'english' => 'MALAWI',
        'iso' => 'MW',
        'slug' => 'malawi'
    ],
    'מלזיה' => [
        'english' => 'MALAYSIA',
        'iso' => 'MY',
        'slug' => 'malaysia'
    ],
    'מקסיקו' => [
        'english' => 'MEXICO',
        'iso' => 'MX',
        'slug' => 'mexico'
    ],
    'מונגוליה' => [
        'english' => 'MONGOLIA',
        'iso' => 'MN',
        'slug' => 'mongolia'
    ],
    'מרוקו' => [
        'english' => 'MOROCCO',
        'iso' => 'MA',
        'slug' => 'morocco'
    ],
    'נפאל' => [
        'english' => 'NEPAL',
        'iso' => 'NP',
        'slug' => 'nepal'
    ],
    'ניז׳ר' => [
        'english' => 'NIGER',
        'iso' => 'NE',
        'slug' => 'niger'
    ],
    'ניגריה' => [
        'english' => 'NIGERIA',
        'iso' => 'NG',
        'slug' => 'nigeria'
    ],
    'עומאן' => [
        'english' => 'OMAN',
        'iso' => 'OM',
        'slug' => 'oman'
    ],
    'פרגוואי' => [
        'english' => 'PARAGUAY',
        'iso' => 'PY',
        'slug' => 'paraguay'
    ],
    'פרו' => [
        'english' => 'PERU',
        'iso' => 'PE',
        'slug' => 'peru'
    ],
    'קטאר' => [
        'english' => 'QATAR',
        'iso' => 'QA',
        'slug' => 'qatar'
    ],
    'סן מרינו' => [
        'english' => 'SAN MARINO',
        'iso' => 'SM',
        'slug' => 'san-marino'
    ],
    'ערב הסעודית' => [
        'english' => 'SAUDI ARABIA',
        'iso' => 'SA',
        'slug' => 'saudi-arabia'
    ],
    'דרום אפריקה' => [
        'english' => 'SOUTH AFRICA',
        'iso' => 'ZA',
        'slug' => 'south-africa'
    ],
    'טנזניה' => [
        'english' => 'TANZANIA',
        'iso' => 'TZ',
        'slug' => 'tanzania'
    ],
    'טוניסיה' => [
        'english' => 'TUNISIA',
        'iso' => 'TN',
        'slug' => 'tunisia'
    ],
    'אוגנדה' => [
        'english' => 'UGANDA',
        'iso' => 'UG',
        'slug' => 'uganda'
    ],
    'איחוד האמירויות' => [
        'english' => 'UNITED ARAB EMIRATES',
        'iso' => 'AE',
        'slug' => 'united-arab-emirates'
    ],
    'אורוגוואי' => [
        'english' => 'URUGUAY',
        'iso' => 'UY',
        'slug' => 'uruguay'
    ],
	
    'אוקראינה' => [
        'english' => 'UKRAINE',
        'iso' => 'UA',
        'slug' => 'ukraine'
    ],
    'כווית' => [
        'english' => 'KUWAIT',
        'iso' => 'KW',
        'slug' => 'kuwait'
    ],
    'פרו' => [
        'english' => 'PERU',
        'iso' => 'PE',
        'slug' => 'peru'
    ],
    'אקוודור' => [
        'english' => 'ECUADOR',
        'iso' => 'EC',
        'slug' => 'ecuador'
    ],
    'ונצואלה' => [
        'english' => 'VENEZUELA',
        'iso' => 'VE',
        'slug' => 'venezuela'
    ],
    'קניה' => [
        'english' => 'KENYA',
        'iso' => 'KE',
        'slug' => 'kenya'
    ]

];


   
    }
    
    return $countries;
}

// פונקציה לקבלת מדינה לפי slug
function AdPro_get_country_by_slug($slug) {
    $countries = AdPro_get_countries_mapping();
    foreach ($countries as $hebrew => $data) {
        if ($data['slug'] === $slug) {
            return [
                'hebrew' => $hebrew,
                'english' => $data['english'],
                'iso' => $data['iso'],
                'slug' => $data['slug']
            ];
        }
    }
    return null;
}-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/includes/debugging.php ===
<?php
/**
 * Debugging functions for AdPro eSIM plugin
 */

if (!defined('ABSPATH')) {
    exit; // יציאה אם הגישה ישירה
}



// פעולה לבדיקת שערי תשלום לפני פרטי לקוח
add_action('woocommerce_checkout_before_customer_details', function() {
    global $woocommerce;
    error_log('Available payment methods: ' . print_r(WC()->payment_gateways->get_available_payment_gateways(), true));
});

// בדיקת שדות תשלום - הוסף את זה לפונקציה payment_fields בקובץ class-wc-icount-gateway.php
// function payment_fields() {
//     error_log('Drawing payment fields for iCount gateway');
//     ...


// בדיקה ישירה של gateway ב-debugging.php
add_action('init', function() {
    if (isset($_GET['test_icount']) && current_user_can('manage_options')) {
        if (!class_exists('WC_iCount_Gateway')) {
            require_once ADPRO_ESIM_PATH . 'includes/class-wc-icount-gateway.php';
        }
        
        $gateway = new WC_iCount_Gateway();
        echo "<pre>";
        echo "Gateway ID: " . $gateway->id . "\n";
        echo "Gateway Enabled: " . $gateway->enabled . "\n";
        echo "Is Available: " . ($gateway->is_available() ? 'Yes' : 'No') . "\n";
        echo "</pre>";
        exit;
    }
});


// בדיקת מסננים
add_action('plugins_loaded', function() {
    error_log('Checking if payment_gateways filter exists: ' . (has_filter('woocommerce_payment_gateways') ? 'Yes' : 'No'));
});

add_action('woocommerce_payment_gateways', function($gateways) {
    error_log('Payment gateways before our filter: ' . print_r($gateways, true));
    return $gateways;
}, 5); // priority 5 runs before most other filters




add_action('woocommerce_before_checkout_form', function() {
    $cart_items = WC()->cart->get_cart();
    error_log('Items in cart: ' . count($cart_items));
    
    foreach ($cart_items as $cart_item_key => $cart_item) {
        $product = $cart_item['data'];
        error_log('Product in cart: ' . $product->get_name() . ', Type: ' . $product->get_type());
    }
    
    // בדוק אילו שערי תשלום תומכים במוצרים בעגלה
    if (class_exists('WC_iCount_Gateway')) {
        $gateway = new WC_iCount_Gateway();
        error_log('iCount gateway supports products: ' . print_r($gateway->supports, true));
    }
});


add_action('woocommerce_before_checkout_form', function() {
    $customer_country = WC()->customer->get_billing_country();
    error_log('Customer country: ' . $customer_country);
    
    if (class_exists('WC_iCount_Gateway')) {
        $gateway = new WC_iCount_Gateway();
        $countries = method_exists($gateway, 'get_option') ? $gateway->get_option('countries', array()) : array();
        error_log('iCount gateway countries: ' . print_r($countries, true));
    }
});





// הוסף את הקוד הזה לקובץ debugging.php

/**
 * בדיקת תוכן עגלה לפני הקופה
 */
add_action('woocommerce_before_checkout_form', function() {
    error_log('===== CHECKOUT DEBUG =====');
    
    // בדיקת שער תשלום
    if (class_exists('WC_iCount_Gateway')) {
        $gateway = new WC_iCount_Gateway();
        error_log('iCount Gateway Class Exists. Enabled: ' . $gateway->enabled);
        error_log('iCount Gateway Available: ' . ($gateway->is_available() ? 'Yes' : 'No'));
    } else {
        error_log('iCount Gateway Class MISSING!');
    }
    
    // בדיקת תכולת עגלה
    if (WC()->cart) {
        error_log('Cart Items: ' . count(WC()->cart->get_cart()));
        
        foreach (WC()->cart->get_cart() as $key => $item) {
            error_log('Item: ' . json_encode([
                'product_name' => $item['data']->get_name(),
                'esim_package_id' => isset($item['esim_package_id']) ? $item['esim_package_id'] : 'Not Set',
                'esim_country' => isset($item['esim_country']) ? $item['esim_country'] : 'Not Set'
            ]));
        }
    } else {
        error_log('Cart Not Initialized!');
    }
    
    // בדיקת שערי תשלום זמינים
    $available_gateways = WC()->payment_gateways->get_available_payment_gateways();
    error_log('Available Payment Gateways: ' . implode(', ', array_keys($available_gateways)));
    
    // בדיקת הגדרות
    error_log('iCount Settings: ' . json_encode([
        'company_id' => get_option('AdPro_icount_company_id', 'Not Set'),
        'user' => get_option('AdPro_icount_user', 'Not Set'),
        'api_key' => !empty(get_option('AdPro_api_key')) ? 'Set' : 'Not Set',
        'merchant_id' => !empty(get_option('AdPro_merchant_id')) ? 'Set' : 'Not Set'
    ]));
}, 5);





add_action('woocommerce_checkout_before_customer_details', function() {
    // בדיקת שערי תשלום פעילים
    $payment_gateways = WC()->payment_gateways->payment_gateways();
    $available_gateways = WC()->payment_gateways->get_available_payment_gateways();
    
    error_log('=== PAYMENT GATEWAYS DEBUG ===');
    error_log('ALL REGISTERED GATEWAYS: ' . print_r(array_keys($payment_gateways), true));
    error_log('AVAILABLE GATEWAYS: ' . print_r(array_keys($available_gateways), true));
    
    // בדיקה ספציפית של שער iCount
    if (isset($payment_gateways['icount_gateway'])) {
        $gateway = $payment_gateways['icount_gateway'];
        error_log('iCount Gateway Found:');
        error_log(' - ID: ' . $gateway->id);
        error_log(' - Enabled: ' . $gateway->enabled);
        error_log(' - Available: ' . ($gateway->is_available() ? 'Yes' : 'No'));
        error_log(' - Has fields: ' . ($gateway->has_fields ? 'Yes' : 'No'));
        error_log(' - Supports: ' . print_r($gateway->supports, true));
    } else {
        error_log('iCount Gateway NOT FOUND in registered gateways!');
    }
});


add_action('woocommerce_checkout_before_customer_details', function() {
    // בדיקת מוצרים בעגלה
    $cart = WC()->cart;
    error_log('=== CART CONTENTS DEBUG ===');
    error_log('Cart Total: ' . $cart->get_cart_contents_total());
    error_log('Cart Items: ' . $cart->get_cart_contents_count());
    
    foreach ($cart->get_cart() as $cart_item_key => $cart_item) {
        $product = $cart_item['data'];
        error_log('Product: ' . $product->get_name());
        error_log(' - Type: ' . $product->get_type());
        error_log(' - Virtual: ' . ($product->is_virtual() ? 'Yes' : 'No'));
        
        // בדיקת מטא דאטה
        foreach ($cart_item as $key => $value) {
            if (strpos($key, 'esim_') === 0) {
                if (is_array($value) || is_object($value)) {
                    error_log(' - Meta ' . $key . ': ' . json_encode($value));
                } else {
                    error_log(' - Meta ' . $key . ': ' . $value);
                }
            }
        }
    }
});








// הוסף בקובץ debugging.php
add_action('woocommerce_review_order_before_payment', function() {
    error_log('==== PAYMENT METHODS DISPLAY DEBUG ====');
    $available_gateways = WC()->payment_gateways->get_available_payment_gateways();
    
    foreach ($available_gateways as $gateway_id => $gateway) {
        error_log("Gateway: $gateway_id, Title: {$gateway->title}, Enabled: {$gateway->enabled}");
        
        // בדוק אם יש לשער שיטות תצוגה
        if (method_exists($gateway, 'payment_fields')) {
            error_log("$gateway_id has payment_fields method");
        }
    }
});





add_action('wp_footer', function() {
    if (is_checkout()) {
        ?>
        <script type="text/javascript">
            jQuery(document).ready(function($) {
                console.log('Available payment methods:');
                $('.wc_payment_methods li').each(function() {
                    console.log($(this).attr('class'));
                });
                
                // כפה הצגה של שער iCount
                if ($('.payment_method_icount_gateway').length) {
                    console.log('iCount gateway exists in DOM');
                    $('.payment_method_icount_gateway').show();
                } else {
                    console.log('iCount gateway NOT found in DOM');
                }
            });
        </script>
        <?php
    }
});


add_action('woocommerce_review_order_before_payment', function() {
    error_log('==== PAYMENT METHODS DISPLAY DEBUG ====');
    $available_gateways = WC()->payment_gateways->get_available_payment_gateways();
    
    error_log('Available gateways count: ' . count($available_gateways));
    foreach ($available_gateways as $gateway_id => $gateway) {
        error_log("Gateway: $gateway_id, Title: {$gateway->title}, Enabled: {$gateway->enabled}");
    }
    
    // בדוק אם יש שער iCount
    if (isset($available_gateways['icount_gateway'])) {
        error_log('iCount IS available at template level');
    } else {
        error_log('iCount is NOT available at template level');
    }
});



add_filter('woocommerce_available_payment_gateways', function($available_gateways) {
    // רק בדף הקופה
    if (!is_checkout()) {
        return $available_gateways;
    }
    
    // בדיקה אם יש מוצר eSIM בעגלה
    $has_esim = false;
    if (WC()->cart && !WC()->cart->is_empty()) {
        foreach (WC()->cart->get_cart() as $item) {
            if (isset($item['esim_package_id'])) {
                $has_esim = true;
                break;
            }
        }
    }
    
    // הכרח את שער התשלום iCount אם יש מוצר eSIM
    if ($has_esim) {
        if (!class_exists('WC_iCount_Gateway')) {
            require_once ADPRO_ESIM_PATH . 'includes/class-wc-icount-gateway.php';
        }
        
        $icount = new WC_iCount_Gateway();
        $icount->enabled = 'yes'; // הפעל בכוח
        $available_gateways['icount_gateway'] = $icount;
        
        error_log('iCount gateway forcefully added to checkout - debugging.php');
    }
    
    return $available_gateways;
}, 9999);


// בדיקה ישירה של התשלום - הוסף לתחילת הקובץ debugging.php
add_action('wp_footer', function() {
    if (is_checkout()) {
        // וודא שהעגלה מאותחלת
        if (!WC()->cart) {
            return;
        }
        
        // בדוק אם יש מוצר eSIM בעגלה
        $has_esim = false;
        foreach (WC()->cart->get_cart() as $item) {
            if (isset($item['esim_package_id'])) {
                $has_esim = true;
                break;
            }
        }

        // הצג את מצב השער
        echo '<div style="position: fixed; bottom: 10px; right: 10px; background: white; border: 1px solid #333; padding: 10px; z-index: 9999; direction: ltr; text-align: left;">';
        echo '<h4>iCount Gateway Debug:</h4>';
        
        // בדוק אם השער קיים
        if (class_exists('WC_iCount_Gateway')) {
            echo '<p>Class exists: Yes</p>';
            
            // נסה ליצור אובייקט
            try {
                $gateway = new WC_iCount_Gateway();
                echo '<p>Instance created: Yes</p>';
                echo '<p>Enabled: ' . $gateway->enabled . '</p>';
                echo '<p>is_available(): ' . ($gateway->is_available() ? 'Yes' : 'No') . '</p>';
            } catch (Exception $e) {
                echo '<p>Error creating instance: ' . $e->getMessage() . '</p>';
            }
        } else {
            echo '<p>Class exists: No</p>';
        }
        
        // בדוק אם השער רשום
        $available = WC()->payment_gateways->get_available_payment_gateways();
        echo '<p>iCount in available gateways: ' . (isset($available['icount_gateway']) ? 'Yes' : 'No') . '</p>';
        
        // בדוק אם יש מוצר eSIM
        echo '<p>Has eSIM product: ' . ($has_esim ? 'Yes' : 'No') . '</p>';
        
        echo '</div>';
    }
});


// כפייה באמצעות JavaScript - הוסף לסוף הקובץ debugging.php
add_action('wp_footer', function() {
    if (is_checkout()) {
        ?>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            console.log('iCount payment method check running...');
            
            // בדוק אם שער התשלום קיים אך מוסתר
            if ($('#payment_method_icount_gateway').length) {
                console.log('iCount payment method exists in DOM');
                
                // נסה להציג אותו בכוח
                $('#payment_method_icount_gateway').prop('checked', true).closest('li.payment_method_icount_gateway').show();
                
                // בדוק אם יש רק שער אחד
                if ($('.wc_payment_methods li').length === 1) {
                    console.log('Only one payment method exists');
                    // אם יש רק שער אחד, וודא שהוא מסומן
                    $('#payment_method_icount_gateway').prop('checked', true);
                }

                // נסה ליצור את שער התשלום אם הוא חסר לחלוטין
                if ($('.wc_payment_methods li').length === 0) {
                    console.log('No payment methods exist, creating iCount gateway');
                    var paymentHtml = '<li class="payment_method_icount_gateway">' +
                        '<input id="payment_method_icount_gateway" type="radio" class="input-radio" name="payment_method" value="icount_gateway" checked="checked" />' +
                        '<label for="payment_method_icount_gateway">תשלום בכרטיס אשראי</label>' +
                        '<div class="payment_box payment_method_icount_gateway"><p>שלם באופן מאובטח באמצעות כרטיס אשראי</p></div>' +
                        '</li>';
                    $('.wc_payment_methods').html(paymentHtml);
                }
            } else {
                console.log('iCount payment method NOT found in DOM, trying to add it');
                
                // נסה להוסיף את שער התשלום ידנית
                var paymentHtml = '<li class="payment_method_icount_gateway">' +
                    '<input id="payment_method_icount_gateway" type="radio" class="input-radio" name="payment_method" value="icount_gateway" checked="checked" />' +
                    '<label for="payment_method_icount_gateway">תשלום בכרטיס אשראי</label>' +
                    '<div class="payment_box payment_method_icount_gateway"><p>שלם באופן מאובטח באמצעות כרטיס אשראי</p></div>' +
                    '</li>';
                $('.wc_payment_methods').append(paymentHtml);
            }
        });
        </script>
        <?php
    }
});


// דריסה מוחלטת של שערי תשלום
add_filter('woocommerce_available_payment_gateways', function($available_gateways) {
    if (is_checkout()) {
        // נקה את כל שערי התשלום
        $available_gateways = array();
        
        // הוסף רק את שער iCount
        if (!class_exists('WC_iCount_Gateway')) {
            require_once ADPRO_ESIM_PATH . 'includes/class-wc-icount-gateway.php';
        }
        
        $icount = new WC_iCount_Gateway();
        $icount->enabled = 'yes'; // הפעל בכוח
        $available_gateways['icount_gateway'] = $icount;
        
        error_log('iCount gateway REPLACING ALL gateways at checkout');
    }
    
    return $available_gateways;
}, 99999); // עדיפות מאוד גבוהה



// בדיקת טעינת WooCommerce
add_action('plugins_loaded', function() {
    error_log('WooCommerce class exists: ' . (class_exists('WooCommerce') ? 'Yes' : 'No'));
    error_log('WC_Payment_Gateway class exists: ' . (class_exists('WC_Payment_Gateway') ? 'Yes' : 'No'));
}, 30);

// כפיית שער התשלום רק כאשר WooCommerce זמין
add_filter('woocommerce_available_payment_gateways', function($available_gateways) {
    // בדוק שאנחנו בעמוד התשלום
    if (is_checkout()) {
        error_log('Checkout page detected: attempting to add iCount gateway');
        
        // בדוק אם WooCommerce מוכן
        if (!class_exists('WC_Payment_Gateway')) {
            error_log('WC_Payment_Gateway class not found - aborting');
            return $available_gateways;
        }
        
        // טען את מחלקת שער התשלום
        if (!class_exists('WC_iCount_Gateway')) {
            require_once ADPRO_ESIM_PATH . 'includes/class-wc-icount-gateway.php';
        }
        
        // הוסף את שער iCount אם הוא לא קיים כבר
        if (!isset($available_gateways['icount_gateway'])) {
            $icount = new WC_iCount_Gateway();
            $icount->enabled = 'yes';
            $available_gateways['icount_gateway'] = $icount;
            error_log('iCount gateway added successfully');
        } else {
            error_log('iCount gateway already exists in available gateways');
        }
    }
    
    return $available_gateways;
}, 100);

// כפייה ישירה של טופס התשלום באמצעות JavaScript
add_action('wp_footer', function() {
    if (is_checkout()) {
        ?>
        <script type="text/javascript">
        jQuery(document).ready(function($) {
            // הסר את הודעת השגיאה שמופיעה בראש העמוד
            $('.woocommerce-error:contains("אין אמצעי תשלום")').remove();
            
            // בדוק אם טופס התשלום כבר קיים
            if ($('#payment').length) {
                console.log('Payment form exists, forcing iCount gateway');
                
                // נסה למצוא את טופס iCount
                if ($('.payment_method_icount_gateway').length === 0) {
                    console.log('iCount method not found, appending it manually');
                    
                    // בנה את טופס התשלום ידנית
                    var paymentFormHtml = `
                        <li class="wc_payment_method payment_method_icount_gateway">
                            <input id="payment_method_icount_gateway" type="radio" class="input-radio" name="payment_method" value="icount_gateway" checked="checked" data-order_button_text="">
                            <label for="payment_method_icount_gateway">תשלום בכרטיס אשראי</label>
                            <div class="payment_box payment_method_icount_gateway" style="display:block;">
                                <p>שלם באופן מאובטח באמצעות כרטיס אשראי</p>
                                
                                <fieldset id="wc-icount_gateway-cc-form" class="wc-credit-card-form wc-payment-form">
                                    <div class="form-row form-row-wide">
                                        <h3>פרטי כרטיס אשראי</h3>
                                    </div>
                                    
                                    <div class="form-row form-row-wide">
                                        <label for="icount_gateway-card-number">מספר כרטיס <span class="required">*</span></label>
                                        <input id="icount_gateway-card-number" class="input-text wc-credit-card-form-card-number" inputmode="numeric" autocomplete="cc-number" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" placeholder="•••• •••• •••• ••••" name="icount_gateway-card-number">
                                    </div>

                                    <div class="form-row form-row-first">
                                        <label for="icount_gateway-card-expiry">תוקף (MM/YY) <span class="required">*</span></label>
                                        <input id="icount_gateway-card-expiry" class="input-text wc-credit-card-form-card-expiry" inputmode="numeric" autocomplete="cc-exp" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" placeholder="MM / YY" name="icount_gateway-card-expiry">
                                    </div>

                                    <div class="form-row form-row-last">
                                        <label for="icount_gateway-card-cvc">קוד אבטחה (CVC) <span class="required">*</span></label>
                                        <input id="icount_gateway-card-cvc" class="input-text wc-credit-card-form-card-cvc" inputmode="numeric" autocomplete="off" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" maxlength="4" placeholder="CVC" name="icount_gateway-card-cvc">
                                    </div>

                                    <div class="form-row form-row-wide">
                                        <label for="icount_gateway-card-holder-id">מספר תעודת זהות <span class="required">*</span></label>
                                        <input id="icount_gateway-card-holder-id" class="input-text" inputmode="numeric" autocomplete="off" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" name="icount_gateway-card-holder-id">
                                    </div>

                                    <div class="form-row form-row-wide">
                                        <label for="icount_gateway-card-holder-name">שם בעל הכרטיס <span class="required">*</span></label>
                                        <input id="icount_gateway-card-holder-name" class="input-text" type="text" autocomplete="cc-name" name="icount_gateway-card-holder-name">
                                    </div>

                                    <div class="form-row form-row-wide">
                                        <label for="icount_gateway-installments">תשלומים</label>
                                        <select id="icount_gateway-installments" name="icount_gateway-installments">
                                            <option value="1">תשלום אחד</option>
                                            <option value="2">2 תשלומים</option>
                                            <option value="3">3 תשלומים</option>
                                            <option value="4">4 תשלומים</option>
                                            <option value="5">5 תשלומים</option>
                                            <option value="6">6 תשלומים</option>
                                            <option value="7">7 תשלומים</option>
                                            <option value="8">8 תשלומים</option>
                                            <option value="9">9 תשלומים</option>
                                            <option value="10">10 תשלומים</option>
                                            <option value="11">11 תשלומים</option>
                                            <option value="12">12 תשלומים</option>
                                        </select>
                                    </div>
                                    <div class="clear"></div>
                                </fieldset>
                            </div>
                        </li>
                    `;
                    
                    // בדוק אם יש כבר רשימת שערי תשלום
                    if ($('ul.wc_payment_methods').length) {
                        // נקה את הרשימה ממה שקיים
                        $('ul.wc_payment_methods').empty();
                        // הוסף את שער iCount
                        $('ul.wc_payment_methods').append(paymentFormHtml);
                    } else {
                        // אם אין רשימה, צור אותה
                        $('#payment').prepend('<ul class="wc_payment_methods payment_methods methods">' + paymentFormHtml + '</ul>');
                    }
                    
                    // הפעל שוב את הסקריפט של התשלום
                    if (typeof AdPro_enqueue_payment_scripts === 'function') {
                        AdPro_enqueue_payment_scripts();
                    }
                } else {
                    console.log('iCount method exists, making sure it is visible and selected');
                    $('.payment_method_icount_gateway').show();
                    $('#payment_method_icount_gateway').prop('checked', true);
                    $('.payment_box.payment_method_icount_gateway').show();
                }
            } else {
                console.log('Payment form does not exist, creating a complete form');
                
                // אם אין אלמנט תשלום בכלל, צור את כל הטופס
                var completeFormHtml = `
                <div id="payment" class="woocommerce-checkout-payment">
                    <ul class="wc_payment_methods payment_methods methods">
                        <li class="wc_payment_method payment_method_icount_gateway">
                            <input id="payment_method_icount_gateway" type="radio" class="input-radio" name="payment_method" value="icount_gateway" checked="checked" data-order_button_text="">
                            <label for="payment_method_icount_gateway">תשלום בכרטיס אשראי</label>
                            <div class="payment_box payment_method_icount_gateway" style="display:block;">
                                <p>שלם באופן מאובטח באמצעות כרטיס אשראי</p>
                                
                                <fieldset id="wc-icount_gateway-cc-form" class="wc-credit-card-form wc-payment-form">
                                    <div class="form-row form-row-wide">
                                        <h3>פרטי כרטיס אשראי</h3>
                                    </div>
                                    
                                    <div class="form-row form-row-wide">
                                        <label for="icount_gateway-card-number">מספר כרטיס <span class="required">*</span></label>
                                        <input id="icount_gateway-card-number" class="input-text wc-credit-card-form-card-number" inputmode="numeric" autocomplete="cc-number" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" placeholder="•••• •••• •••• ••••" name="icount_gateway-card-number">
                                    </div>

                                    <div class="form-row form-row-first">
                                        <label for="icount_gateway-card-expiry">תוקף (MM/YY) <span class="required">*</span></label>
                                        <input id="icount_gateway-card-expiry" class="input-text wc-credit-card-form-card-expiry" inputmode="numeric" autocomplete="cc-exp" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" placeholder="MM / YY" name="icount_gateway-card-expiry">
                                    </div>

                                    <div class="form-row form-row-last">
                                        <label for="icount_gateway-card-cvc">קוד אבטחה (CVC) <span class="required">*</span></label>
                                        <input id="icount_gateway-card-cvc" class="input-text wc-credit-card-form-card-cvc" inputmode="numeric" autocomplete="off" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" maxlength="4" placeholder="CVC" name="icount_gateway-card-cvc">
                                    </div>

                                    <div class="form-row form-row-wide">
                                        <label for="icount_gateway-card-holder-id">מספר תעודת זהות <span class="required">*</span></label>
                                        <input id="icount_gateway-card-holder-id" class="input-text" inputmode="numeric" autocomplete="off" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" name="icount_gateway-card-holder-id">
                                    </div>

                                    <div class="form-row form-row-wide">
                                        <label for="icount_gateway-card-holder-name">שם בעל הכרטיס <span class="required">*</span></label>
                                        <input id="icount_gateway-card-holder-name" class="input-text" type="text" autocomplete="cc-name" name="icount_gateway-card-holder-name">
                                    </div>

                                    <div class="form-row form-row-wide">
                                        <label for="icount_gateway-installments">תשלומים</label>
                                        <select id="icount_gateway-installments" name="icount_gateway-installments">
                                            <option value="1">תשלום אחד</option>
                                            <option value="2">2 תשלומים</option>
                                            <option value="3">3 תשלומים</option>
                                            <option value="4">4 תשלומים</option>
                                            <option value="5">5 תשלומים</option>
                                            <option value="6">6 תשלומים</option>
                                            <option value="7">7 תשלומים</option>
                                            <option value="8">8 תשלומים</option>
                                            <option value="9">9 תשלומים</option>
                                            <option value="10">10 תשלומים</option>
                                            <option value="11">11 תשלומים</option>
                                            <option value="12">12 תשלומים</option>
                                        </select>
                                    </div>
                                    <div class="clear"></div>
                                </fieldset>
                            </div>
                        </li>
                    </ul>
                    <div class="form-row place-order">
                        <noscript>
                            מכשיר שלך אינו תומך בפעולות JavaScript, אך הדבר נדרש לעיבוד התשלום. אנא אפשר JavaScript בהגדרות הדפדפן שלך.
                        </noscript>
                        <button type="submit" class="button alt" name="woocommerce_checkout_place_order" id="place_order" value="לביצוע ההזמנה" data-value="לביצוע ההזמנה">לביצוע ההזמנה</button>
                    </div>
                </div>
                `;
                
                // הוסף את הטופס המלא לחלק המתאים בדף
                $('.woocommerce-checkout-review-order').append(completeFormHtml);
            }
            
            // הסתר את הודעת השגיאה על השערים הלא זמינים
            $('.woocommerce-NoticeGroup-checkout').hide();
            
            // לוודא שטופס התשלום תמיד מוצג
            setTimeout(function() {
                $('.payment_box.payment_method_icount_gateway').show();
                $('#payment').show();
            }, 500);
        });
        </script>
        <?php
    }
});-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/includes/emergency-payment.php ===
<?php
/**
 * קובץ פתרון חירום לשער תשלום
 */

if (!defined('ABSPATH')) {
    exit;
}

// הוסף תצוגת תשלום חירום לדף התשלום
add_action('woocommerce_review_order_before_submit', function() {
    ?>
    <div id="emergency-payment-form" style="margin-bottom: 20px; padding: 15px; border: 1px solid #ddd; border-radius: 4px; background: #f8f8f8;">
        <h3 style="margin-top: 0;">פרטי כרטיס אשראי</h3>
        <p>שלם באופן מאובטח באמצעות כרטיס אשראי</p>
        
        <div class="form-row" style="margin-bottom: 10px;">
            <label for="emergency-card-number" style="display: block; margin-bottom: 5px; font-weight: bold;">מספר כרטיס <span class="required">*</span></label>
            <input id="emergency-card-number" class="input-text" style="width: 100%; padding: 8px;" inputmode="numeric" autocomplete="cc-number" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" placeholder="•••• •••• •••• ••••" name="icount_gateway-card-number">
        </div>
        
        <div style="display: flex; gap: 10px; margin-bottom: 10px;">
            <div class="form-row" style="flex: 1;">
                <label for="emergency-card-expiry" style="display: block; margin-bottom: 5px; font-weight: bold;">תוקף (MM/YY) <span class="required">*</span></label>
                <input id="emergency-card-expiry" class="input-text" style="width: 100%; padding: 8px;" inputmode="numeric" autocomplete="cc-exp" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" placeholder="MM / YY" name="icount_gateway-card-expiry">
            </div>
            
            <div class="form-row" style="flex: 1;">
                <label for="emergency-card-cvc" style="display: block; margin-bottom: 5px; font-weight: bold;">קוד אבטחה (CVC) <span class="required">*</span></label>
                <input id="emergency-card-cvc" class="input-text" style="width: 100%; padding: 8px;" inputmode="numeric" autocomplete="off" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" maxlength="4" placeholder="CVC" name="icount_gateway-card-cvc">
            </div>
        </div>
        
        <div class="form-row" style="margin-bottom: 10px;">
            <label for="emergency-card-holder-id" style="display: block; margin-bottom: 5px; font-weight: bold;">מספר תעודת זהות <span class="required">*</span></label>
            <input id="emergency-card-holder-id" class="input-text" style="width: 100%; padding: 8px;" inputmode="numeric" autocomplete="off" autocorrect="no" autocapitalize="no" spellcheck="no" type="tel" name="icount_gateway-card-holder-id">
        </div>
        
        <div class="form-row" style="margin-bottom: 10px;">
            <label for="emergency-card-holder-name" style="display: block; margin-bottom: 5px; font-weight: bold;">שם בעל הכרטיס <span class="required">*</span></label>
            <input id="emergency-card-holder-name" class="input-text" style="width: 100%; padding: 8px;" type="text" autocomplete="cc-name" name="icount_gateway-card-holder-name">
        </div>
        
        <div class="form-row" style="margin-bottom: 10px;">
            <label for="emergency-installments" style="display: block; margin-bottom: 5px; font-weight: bold;">תשלומים</label>
            <select id="emergency-installments" style="width: 100%; padding: 8px;" name="icount_gateway-installments">
                <option value="1">תשלום אחד</option>
                <option value="2">2 תשלומים</option>
                <option value="3">3 תשלומים</option>
                <option value="4">4 תשלומים</option>
                <option value="5">5 תשלומים</option>
                <option value="6">6 תשלומים</option>
            </select>
        </div>
        
        <input type="hidden" name="payment_method" value="icount_gateway">
    </div>
    
    <script type="text/javascript">
    jQuery(document).ready(function($) {
        // הסר את הודעות השגיאה
        $('.woocommerce-error:contains("אין אמצעי תשלום")').remove();
        $('.woocommerce-NoticeGroup-checkout').hide();
        
        // הסתר את האזור הרגיל של התשלום
        $('#payment').hide();
        
        // עיצוב השדות
        $('#emergency-card-number').on('keyup', function() {
            let value = $(this).val().replace(/\s+/g, '').replace(/[^0-9]/gi, '');
            let formattedValue = '';
            
            for (let i = 0; i < value.length; i++) {
                if (i > 0 && i % 4 === 0) {
                    formattedValue += ' ';
                }
                formattedValue += value[i];
            }
            
            $(this).val(formattedValue);
        });
        
        // עיצוב תוקף
        $('#emergency-card-expiry').on('keyup', function() {
            let value = $(this).val().replace(/\s+/g, '').replace(/[^0-9]/gi, '');
            
            if (value.length > 2) {
                value = value.substr(0, 2) + ' / ' + value.substr(2, 2);
            }
            
            $(this).val(value);
        });
        
        // רק מספרים בשדות מספריים
        $('#emergency-card-number, #emergency-card-expiry, #emergency-card-cvc, #emergency-card-holder-id').on('keypress', function(e) {
            if (e.which < 48 || e.which > 57) {
                return false;
            }
        });
    });
    </script>
    <?php
});

// וודא שהתשלום מעובד נכון
add_action('woocommerce_checkout_process', function() {
    // בדיקת קלט של פרטי כרטיס
    if (!isset($_POST['icount_gateway-card-number']) || 
        !isset($_POST['icount_gateway-card-expiry']) || 
        !isset($_POST['icount_gateway-card-cvc']) || 
        !isset($_POST['icount_gateway-card-holder-id']) ||
        !isset($_POST['icount_gateway-card-holder-name'])) {
        wc_add_notice('נא להזין את פרטי כרטיס האשראי', 'error');
        return;
    }
    
    // בדיקת תקינות מספר כרטיס
    $card_number = sanitize_text_field($_POST['icount_gateway-card-number']);
    $card_number = preg_replace('/\D/', '', $card_number);
    
    if (strlen($card_number) < 12 || strlen($card_number) > 19) {
        wc_add_notice('מספר כרטיס האשראי אינו תקין', 'error');
        return;
    }
    
    // בדיקת תקינות תוקף
    $expiry = sanitize_text_field($_POST['icount_gateway-card-expiry']);
    $expiry = preg_replace('/\D/', '', $expiry);
    
    if (strlen($expiry) !== 4) {
        wc_add_notice('תאריך תפוגה אינו תקין, נא להזין בפורמט MM/YY', 'error');
        return;
    }
    
    // בדיקת תקינות CVC
    $cvc = sanitize_text_field($_POST['icount_gateway-card-cvc']);
    $cvc = preg_replace('/\D/', '', $cvc);
    
    if (strlen($cvc) < 3 || strlen($cvc) > 4) {
        wc_add_notice('קוד האבטחה אינו תקין', 'error');
        return;
    }
    
    // בדיקת תקינות ת.ז.
    $holder_id = sanitize_text_field($_POST['icount_gateway-card-holder-id']);
    $holder_id = preg_replace('/\D/', '', $holder_id);
    
    if (strlen($holder_id) < 8 || strlen($holder_id) > 9) {
        wc_add_notice('מספר תעודת הזהות אינו תקין', 'error');
        return;
    }
    
    // בדיקת תקינות שם בעל הכרטיס
    $holder_name = sanitize_text_field($_POST['icount_gateway-card-holder-name']);
    
    if (empty($holder_name)) {
        wc_add_notice('נא להזין את שם בעל הכרטיס', 'error');
        return;
    }
    
    // קבע את שיטת התשלום
    $_POST['payment_method'] = 'icount_gateway';
});

// הוסף לפנקציה שמעבדת את התשלום - לאחר יצירת ההזמנה
add_action('woocommerce_checkout_order_processed', function($order_id, $posted_data, $order) {
    // שמור את פרטי התשלום בהזמנה
    if (isset($_POST['icount_gateway-card-number'])) {
        $card_number = sanitize_text_field($_POST['icount_gateway-card-number']);
        $card_number = preg_replace('/\D/', '', $card_number);
        $masked_card = substr($card_number, 0, 4) . ' XXXX XXXX ' . substr($card_number, -4);
        
        $expiry = sanitize_text_field($_POST['icount_gateway-card-expiry']);
        $expiry = preg_replace('/\D/', '', $expiry);
        $exp_month = substr($expiry, 0, 2);
        $exp_year = substr($expiry, 2, 2);
        
        $holder_name = sanitize_text_field($_POST['icount_gateway-card-holder-name']);
        
        $installments = isset($_POST['icount_gateway-installments']) ? intval($_POST['icount_gateway-installments']) : 1;
        
        // הוסף הערה להזמנה עם פרטי התשלום
        $order->add_order_note(sprintf(
            'תשלום התקבל באמצעות כרטיס אשראי (מספר: %s, תוקף: %s/%s, שם: %s, תשלומים: %d)',
            $masked_card,
            $exp_month,
            $exp_year,
            $holder_name,
            $installments
        ));
        
        // שמור מידע נוסף להזמנה
        $order->update_meta_data('_payment_method', 'icount_gateway');
        $order->update_meta_data('_payment_method_title', 'תשלום בכרטיס אשראי');
        
        // שמור את הפרטים המטושטשים
        $order->update_meta_data('_cc_last4', substr($card_number, -4));
        $order->update_meta_data('_cc_expiry', $exp_month . '/' . $exp_year);
        $order->update_meta_data('_cc_installments', $installments);
        
        $order->save();
    }
}, 10, 3);


// הסר את ההתראה על היעדר שערי תשלום
add_filter('woocommerce_no_available_payment_methods_message', function($message) {
    // בדוק אם יש מוצר eSIM בעגלה
    $has_esim = false;
    if (WC()->cart && !WC()->cart->is_empty()) {
        foreach (WC()->cart->get_cart() as $item) {
            if (isset($item['esim_package_id'])) {
                $has_esim = true;
                break;
            }
        }
    }
    
    if ($has_esim) {
        // אפשר להמשיך עם תשלום החירום
        return '';
    }
    
    // אחרת החזר את ההודעה המקורית
    return $message;
});-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/includes/woocommerce-esim-integration.php ===
<?php
/**
 * פונקציות האינטגרציה של WooCommerce עם מובימטר ו-iCount
 */

if (!defined('ABSPATH')) {
    exit; // יציאה אם הגישה ישירה
}

/**
 * יצירה או קבלה של מוצר דינמי eSIM
 * 
 * @return int מזהה המוצר
 */
 
 

function AdPro_get_or_create_esim_product() {
    $sku = 'dynamic_esim_package';
    $product_id = wc_get_product_id_by_sku($sku);
    
    if ($product_id) {
        return $product_id;
    }
    
    // יצירת מוצר דינמי בפעם הראשונה בלבד
    $product = new WC_Product_Simple();
    $product->set_name('חבילת eSIM דינמית');
    $product->set_status('publish');
    $product->set_catalog_visibility('hidden');
    $product->set_sku($sku);
    $product->set_sold_individually(true);
    $product->set_virtual(true); // מוצר וירטואלי - אין משלוח
    
    $product_id = $product->save();
    
    return $product_id;
}

/**
 * טיפול בתהליך הרכישה מדף החבילות
 */
// עדכן את הקוד בקובץ woocommerce-esim-integration.php בתהליך בחירת חבילה
function AdPro_process_package_selection() {
    // בדיקה אם WooCommerce פעיל וזמין
    if (!function_exists('WC') || !class_exists('WooCommerce')) {
        wp_redirect(home_url('/esim?error=woocommerce_not_active'));
        exit;
    }
    
    // וודא שיש הפעלת סשן
    if (!WC()->is_rest_api_request() && !is_admin()) {
        if (!WC()->session->has_session()) {
            WC()->session->set_customer_session_cookie(true);
        }
    }
    
    // בדיקת פרמטרים
    if (!isset($_POST['package_id']) || !isset($_POST['country'])) {
        wp_redirect(home_url('/esim?error=missing_parameters'));
        exit;
    }
    
    // ניקוי קלטים
    $package_id = sanitize_text_field($_POST['package_id']);
    $hebrew_country = sanitize_text_field($_POST['country']);
    
    // קבלת מידע על המדינה
    $countries_mapping = AdPro_get_countries_mapping();
    if (!isset($countries_mapping[$hebrew_country])) {
        wp_redirect(home_url('/esim?error=invalid_country'));
        exit;
    }
    
    $country_data = $countries_mapping[$hebrew_country];
    $iso_code = $country_data['iso'];
    $english_country = $country_data['english'];
    
    // קבלת פרטי חבילה מ-API של מובימטר
    $package = AdPro_get_package_by_id($iso_code, $package_id);
    if (!$package) {
        wp_redirect(home_url('/esim?error=package_not_found'));
        exit;
    }
    
    // יצירה או קבלה של מוצר דינמי
    $product_id = AdPro_get_or_create_esim_product();
    $product = wc_get_product($product_id);
    
    // חילוץ פרטי חבילה רלוונטיים
    $data_limit = '';
    $data_unit = '';
    $validity_days = '';
    
    if (isset($package['productDetails']) && is_array($package['productDetails'])) {
        foreach ($package['productDetails'] as $detail) {
            if ($detail['name'] === 'PLAN_DATA_LIMIT' && !empty($detail['value'])) {
                $data_limit = $detail['value'];
            }
            if ($detail['name'] === 'PLAN_DATA_UNIT' && !empty($detail['value'])) {
                $data_unit = $detail['value'];
            }
            if ($detail['name'] === 'PLAN_VALIDITY' && !empty($detail['value'])) {
                $validity_days = round(intval($detail['value']) / 24);
            }
        }
    }
    
    // עדכון שם ומחיר בהתאם לחבילה הנוכחית
    $title = "חבילת eSIM";
    if (!empty($data_limit) && !empty($data_unit)) {
        $title .= ": {$data_limit}{$data_unit}";
    }
    $title .= " - {$hebrew_country}";
    
    if (isset($package['title']) && !empty($package['title'])) {
        $title .= " ({$package['title']})";
    }
    
    $product->set_name($title);
    
    if (isset($package['retailPrice']) && !empty($package['retailPrice'])) {
        $product->set_price($package['retailPrice']);
        $product->set_regular_price($package['retailPrice']);
    }
    
    $product->save();
    
    // במקום להשתמש ישירות ב-WC()->cart, נשתמש ב-cookies לשמירת המידע
    // והפניה לדף מיוחד שיוסיף את המוצר לעגלה
    $cart_item_data = [
        'esim_package_id' => $package_id,
        'esim_country' => $hebrew_country,
        'esim_country_iso' => $iso_code,
        'esim_country_english' => $english_country,
        'esim_package_title' => $package['title'] ?? $title,
        'esim_data_limit' => $data_limit,
        'esim_data_unit' => $data_unit,
        'esim_validity_days' => $validity_days,
        'esim_package_data' => json_encode($package),
        'unique_key' => md5(microtime().rand()) // מניעת איחוד פריטים
    ];
    
    // שמירת נתוני עגלה בסשן או טרנזאקציה זמנית
    $transaction_id = 'esim_cart_' . md5(microtime().rand());
    set_transient($transaction_id, $cart_item_data, 60 * 10); // שמירה ל-10 דקות
    
    // לוג לדיבאג
    error_log('Setting cart transaction: ' . $transaction_id);
    error_log('Cart data: ' . json_encode($cart_item_data));
    
    // הפניה לדף "הוסף לעגלה" מיוחד שיטפל בחלק של WooCommerce
    wp_redirect(home_url('/esim-add-to-cart?transaction=' . $transaction_id));
    exit;
}
add_action('admin_post_AdPro_process_package', 'AdPro_process_package_selection');
add_action('admin_post_nopriv_AdPro_process_package', 'AdPro_process_package_selection');

/**
 * הצגת המידע המותאם על החבילה בעגלה
 */
function AdPro_display_cart_item_custom_data($item_data, $cart_item) {
    if (isset($cart_item['esim_country'])) {
        // נשתמש באימוג'י דגל במקום תמונת HTML
        $flag_emoji = '';
        if (isset($cart_item['esim_country_iso'])) {
            $iso_code = strtoupper($cart_item['esim_country_iso']);
            // המרת קוד ISO למשהו שדומה לאימוג'י דגל
            // (כל אות גדולה ב-ISO הופכת לאימוג'י דגל אזורי)
            $flag_emoji = implode('', array_map(function($char) {
                // המרת כל אות ל- regional indicator symbol
                return mb_chr(ord($char) - ord('A') + 0x1F1E6);
            }, str_split($iso_code)));
        }
        
        $item_data[] = [
            'key' => 'מדינה',
            'value' => $flag_emoji . ' ' . $cart_item['esim_country']
        ];
    }
    
    if (isset($cart_item['esim_data_limit']) && isset($cart_item['esim_data_unit'])) {
        $item_data[] = [
            'key' => 'נפח גלישה',
            'value' => $cart_item['esim_data_limit'] . ' ' . $cart_item['esim_data_unit']
        ];
    }
    
    if (isset($cart_item['esim_validity_days'])) {
        $item_data[] = [
            'key' => 'תקופת תוקף',
            'value' => $cart_item['esim_validity_days'] . ' ימים'
        ];
    }
    
    return $item_data;
}
add_filter('woocommerce_get_item_data', 'AdPro_display_cart_item_custom_data', 10, 2);

/**
 * העברת המידע המותאם מהעגלה להזמנה
 */
function AdPro_add_order_item_meta($item, $cart_item_key, $values, $order) {
    // נשמור את המידע המקורי, אבל נסתיר אותו מהתצוגה הציבורית
    foreach ($values as $key => $value) {
        if (strpos($key, 'esim_') === 0) {
            $item->add_meta_data($key, $value, true);
        }
    }
    
    // נוסיף את השדות בעברית שיוצגו ללקוח
    if (isset($values['esim_country'])) {
        $flag_html = '';
        if (isset($values['esim_country_iso'])) {
            $iso_code = strtolower($values['esim_country_iso']);
            $flag_html = '<img src="https://flagcdn.com/16x12/' . esc_attr($iso_code) . '.png" alt="דגל" style="vertical-align: middle; margin-right: 5px;">';
        }
        
        $item->add_meta_data('מדינה', $flag_html . $values['esim_country'], false);
    }
    
    if (isset($values['esim_data_limit']) && isset($values['esim_data_unit'])) {
        $item->add_meta_data('נפח גלישה', $values['esim_data_limit'] . ' ' . $values['esim_data_unit'], false);
    }
    
    if (isset($values['esim_validity_days'])) {
        $item->add_meta_data('תקופת תוקף', $values['esim_validity_days'] . ' ימים', false);
    }
}
add_action('woocommerce_checkout_create_order_line_item', 'AdPro_add_order_item_meta', 10, 4);


// אפשר תגי HTML בשדות מטה-דאטה
function AdPro_allow_html_in_meta_display($formatted_meta) {
    foreach ($formatted_meta as $key => $meta) {
        if ($meta->key == 'מדינה') {
            $formatted_meta[$key]->display = $meta->value;
        }
    }
    return $formatted_meta;
}
add_filter('woocommerce_order_item_get_formatted_meta_data', 'AdPro_allow_html_in_meta_display', 20, 1);

// הוספת מסנן שמסיר שדות טכניים מתצוגת ההזמנה
function AdPro_filter_order_item_meta($formatted_meta, $item) {
    $filtered_meta = array();
    
    // לולאה על כל המטא-דאטה המפורמט
    foreach ($formatted_meta as $meta) {
        // בדיקה אם זה שדה טכני של esim שאנחנו רוצים להסתיר
        if (strpos($meta->key, 'esim_') !== 0) {
            // זה לא שדה שאנחנו רוצים להסתיר - נשמור אותו
            $filtered_meta[] = $meta;
        }
    }
    
    return $filtered_meta;
}
add_filter('woocommerce_order_item_get_formatted_meta_data', 'AdPro_filter_order_item_meta', 10, 2);

/**
 * יצירת הזמנה במובימטר לפני השלמת התשלום
 */
function AdPro_create_mobimatter_order($order_id) {
    $order = wc_get_order($order_id);
    
    // סטטוס תקין לבדיקה לפני יצירת ההזמנה
    if ($order->get_status() !== 'pending') {
        return;
    }
    
    $order_items = $order->get_items();
    if (empty($order_items)) {
        return;
    }
    
    // בדיקה של הפריט הראשון
    $item = reset($order_items);
    
    // וידוא שיש מידע של חבילת eSIM
    $package_id = $item->get_meta('esim_package_id');
    $country_iso = $item->get_meta('esim_country_iso');
    
    if (empty($package_id) || empty($country_iso)) {
        return;
    }
    
    // יצירת הזמנה במובימטר
    $api_key = get_option('AdPro_api_key');
    $merchant_id = get_option('AdPro_merchant_id');
    
    $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/order';
    
    $order_data = [
        'productId' => $package_id,
        'quantity' => 1,
        'orderId' => 'wc_' . $order_id // סימון ייחודי של מקור ההזמנה
    ];
    
    $args = [
        'headers' => [
            'Accept' => 'text/plain',
            'merchantId' => $merchant_id,
            'api-key' => $api_key,
            'Content-Type' => 'application/json'
        ],
        'body' => json_encode($order_data),
        'method' => 'POST',
        'timeout' => 30
    ];
    
    $response = wp_remote_post($api_url, $args);
    
    if (is_wp_error($response)) {
        $error_message = $response->get_error_message();
        $order->add_order_note('שגיאה ביצירת הזמנה במובימטר: ' . $error_message);
        error_log('שגיאה ביצירת הזמנה במובימטר: ' . $error_message);
        return;
    }
    
    $response_code = wp_remote_retrieve_response_code($response);
    $response_body = wp_remote_retrieve_body($response);
    $response_data = json_decode($response_body, true);
    
    if ($response_code !== 200 || !isset($response_data['result']['id'])) {
        $error_message = isset($response_data['message']) ? $response_data['message'] : 'שגיאה לא ידועה';
        $order->add_order_note('שגיאה ביצירת הזמנה במובימטר: ' . $error_message);
        error_log('שגיאה ביצירת הזמנה במובימטר: קוד ' . $response_code . ', הודעה: ' . $error_message);
        return;
    }
    
    // שמירת מזהה ההזמנה במובימטר
    $mobimatter_order_id = $response_data['result']['id'];
    $order->update_meta_data('_mobimatter_order_id', $mobimatter_order_id);
    $order->add_order_note('נוצרה הזמנה במובימטר בהצלחה, מזהה: ' . $mobimatter_order_id);
    $order->save();
}
add_action('woocommerce_checkout_order_created', 'AdPro_create_mobimatter_order', 10, 1);

/**
 * הפניה ל-iCount לתשלום לאחר יצירת ההזמנה
 */
function AdPro_redirect_to_icount_payment($order_id) {
    $order = wc_get_order($order_id);
    
    // בדיקה אם ההזמנה מחכה לתשלום
    if ($order->get_status() !== 'pending') {
        return;
    }
    
    // בדיקה אם ההזמנה נוצרה במובימטר
    $mobimatter_order_id = $order->get_meta('_mobimatter_order_id');
    if (empty($mobimatter_order_id)) {
        $order->add_order_note('לא נמצא מזהה הזמנה במובימטר');
        return;
    }
    
    // פרטי API של iCount
    $icount_api_key = get_option('AdPro_icount_api_key');
    $icount_company_id = get_option('AdPro_icount_company_id');
    
    if (empty($icount_api_key) || empty($icount_company_id)) {
        $order->add_order_note('חסרים פרטי API של iCount');
        wc_add_notice('שגיאה בהגדרות מערכת התשלומים', 'error');
        return;
    }
	
	
	
    
    // הכנת נתונים לתשלום
    $customer_name = $order->get_billing_first_name() . ' ' . $order->get_billing_last_name();
    $customer_email = $order->get_billing_email();
    $customer_phone = $order->get_billing_phone();
    
    // איסוף פרטי מוצרים להצגה בחשבונית
    $items = [];
    foreach ($order->get_items() as $item) {
        $country = $item->get_meta('esim_country') ?: '';
        $data_limit = $item->get_meta('esim_data_limit') ?: '';
        $data_unit = $item->get_meta('esim_data_unit') ?: '';
        $validity_days = $item->get_meta('esim_validity_days') ?: '';
        
        $description = "חבילת eSIM";
        if (!empty($data_limit) && !empty($data_unit)) {
            $description .= " {$data_limit}{$data_unit}";
        }
        if (!empty($country)) {
            $description .= " ל{$country}";
        }
        if (!empty($validity_days)) {
            $description .= " ל-{$validity_days} ימים";
        }
        
        $items[] = [
            'description' => $description,
            'quantity' => $item->get_quantity(),
            'price' => $item->get_total() / $item->get_quantity(),
            'currency' => 'ILS'
        ];
    }
    
    // הכנת נתונים לתשלום ב-iCount
    $payment_data = [
        'cid' => $icount_company_id,
        'api_token' => $icount_api_key,
        'type' => 'invoice_receipt', // חשבונית קבלה בפעולה אחת
        'client_name' => $customer_name,
        'client_email' => $customer_email,
        'client_phone' => $customer_phone,
        'items' => $items,
        'description' => "הזמנה #{$order_id}",
        'success_url' => add_query_arg(['action' => 'AdPro_icount_success', 'order_id' => $order_id], home_url('/wc-api/AdPro_icount_callback')),
        'error_url' => add_query_arg(['action' => 'AdPro_icount_error', 'order_id' => $order_id], home_url('/wc-api/AdPro_icount_callback')),
    ];
    
    // שליחת בקשה ל-iCount
    $response = wp_remote_post('https://api.icount.co.il/api/v1/payment-page', [
        'body' => json_encode($payment_data),
        'headers' => ['Content-Type' => 'application/json'],
        'timeout' => 30
    ]);
    
    if (is_wp_error($response)) {
        $error_message = $response->get_error_message();
        $order->add_order_note('שגיאה בחיבור ל-iCount: ' . $error_message);
        wc_add_notice('שגיאה בחיבור למערכת הסליקה: ' . $error_message, 'error');
        return;
    }
    
    $response_body = wp_remote_retrieve_body($response);
    $response_data = json_decode($response_body, true);
    
    if (!isset($response_data['status']) || $response_data['status'] !== 'success' || !isset($response_data['payment_url'])) {
        $error_message = isset($response_data['message']) ? $response_data['message'] : 'שגיאה לא ידועה';
        $order->add_order_note('שגיאה ביצירת עמוד תשלום ב-iCount: ' . $error_message);
        wc_add_notice('שגיאה בהכנת עמוד התשלום: ' . $error_message, 'error');
        return;
    }
    
    // שמירת פרטי תשלום ב-iCount
    if (isset($response_data['doc_no'])) {
        $order->update_meta_data('_icount_doc_no', $response_data['doc_no']);
    }
    
    $order->add_order_note('הועבר לתשלום ב-iCount');
    $order->save();
    
    // הפניה לעמוד התשלום של iCount
    wp_redirect($response_data['payment_url']);
    exit;
}
add_action('woocommerce_thankyou', 'AdPro_redirect_to_icount_payment', 5);

/**
 * טיפול בתשובה מ-iCount
 */
function AdPro_handle_icount_callback() {
    if (!isset($_GET['action']) || !isset($_GET['order_id'])) {
        wp_redirect(home_url());
        exit;
    }
    
    $action = sanitize_text_field($_GET['action']);
    $order_id = intval($_GET['order_id']);
    $order = wc_get_order($order_id);
    
    if (!$order) {
        wp_redirect(home_url());
        exit;
    }
    
    if ($action === 'AdPro_icount_success') {
        // תשלום הצליח - השלמת הזמנה במובימטר
        $mobimatter_order_id = $order->get_meta('_mobimatter_order_id');
        
        if ($mobimatter_order_id) {
            $api_key = get_option('AdPro_api_key');
            $merchant_id = get_option('AdPro_merchant_id');
            
            $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/order/complete';
            
            $complete_data = [
                'id' => $mobimatter_order_id
            ];
            
            $args = [
                'headers' => [
                    'Accept' => 'text/plain',
                    'merchantId' => $merchant_id,
                    'api-key' => $api_key,
                    'Content-Type' => 'application/json'
                ],
                'body' => json_encode($complete_data),
                'method' => 'POST',
                'timeout' => 30
            ];
            
            $response = wp_remote_post($api_url, $args);
            
            if (is_wp_error($response)) {
                $error_message = $response->get_error_message();
                $order->add_order_note('שגיאה בהשלמת הזמנה במובימטר: ' . $error_message);
                
                // הפנייה לדף שגיאה
                wp_redirect(wc_get_endpoint_url('view-order', $order_id, wc_get_page_permalink('myaccount')) . '?esim_error=mobimatter_complete');
                exit;
            }
            
            $response_code = wp_remote_retrieve_response_code($response);
            $response_body = wp_remote_retrieve_body($response);
            $response_data = json_decode($response_body, true);
            
            if ($response_code !== 200 || !isset($response_data['result'])) {
                $error_message = isset($response_data['message']) ? $response_data['message'] : 'שגיאה לא ידועה';
                $order->add_order_note('שגיאה בהשלמת הזמנה במובימטר: ' . $error_message);
                
                // הפנייה לדף שגיאה
                wp_redirect(wc_get_endpoint_url('view-order', $order_id, wc_get_page_permalink('myaccount')) . '?esim_error=mobimatter_complete');
                exit;
            }
            
            // שמירת פרטי ה-eSIM
            if (isset($response_data['result']['qrCodeImage'])) {
                $order->update_meta_data('_esim_qr_code', $response_data['result']['qrCodeImage']);
            }
            
            if (isset($response_data['result']['activationCode'])) {
                $order->update_meta_data('_esim_activation_code', $response_data['result']['activationCode']);
            }
            
            if (isset($response_data['result']['details'])) {
                $order->update_meta_data('_esim_details', json_encode($response_data['result']['details']));
            }
            
            // עדכון סטטוס ההזמנה
            $order->update_status('completed', 'ההזמנה הושלמה בהצלחה במובימטר');
            $order->save();
            
            // שליחת מייל ללקוח עם פרטי ה-eSIM
            AdPro_send_esim_details_email($order_id);
            
            // הפנייה לדף התודה
            wp_redirect($order->get_checkout_order_received_url());
            exit;
        } else {
            // לא נמצא מזהה הזמנה במובימטר
            $order->add_order_note('תשלום התקבל, אך לא נמצא מזהה הזמנה במובימטר');
            
            // הפנייה לדף שגיאה
            wp_redirect(wc_get_endpoint_url('view-order', $order_id, wc_get_page_permalink('myaccount')) . '?esim_error=missing_mobimatter_id');
            exit;
        }
    } elseif ($action === 'AdPro_icount_error') {
        // תשלום נכשל - ביטול הזמנה
        $order->update_status('failed', 'התשלום נכשל');
        
        // ביטול הזמנה במובימטר
        $mobimatter_order_id = $order->get_meta('_mobimatter_order_id');
        
        if ($mobimatter_order_id) {
            $api_key = get_option('AdPro_api_key');
            $merchant_id = get_option('AdPro_merchant_id');
            
            $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/order/cancel';
            
            $cancel_data = [
                'id' => $mobimatter_order_id
            ];
            
            $args = [
                'headers' => [
                    'Accept' => 'text/plain',
                    'merchantId' => $merchant_id,
                    'api-key' => $api_key,
                    'Content-Type' => 'application/json'
                ],
                'body' => json_encode($cancel_data),
                'method' => 'POST',
                'timeout' => 30
            ];
            
            wp_remote_post($api_url, $args);
        }
        
        // הפנייה לדף שגיאה
        wp_redirect(wc_get_endpoint_url('view-order', $order_id, wc_get_page_permalink('myaccount')) . '?esim_error=payment_failed');
        exit;
    } else {
        // פעולה לא מוכרת
        wp_redirect(home_url());
        exit;
    }
}
add_action('wc-api_AdPro_icount_callback', 'AdPro_handle_icount_callback');

/**
 * שליחת מייל עם פרטי eSIM לאחר השלמת הזמנה
 */
function AdPro_send_esim_details_email($order_id) {
    $order = wc_get_order($order_id);
    if (!$order) {
        return;
    }
    
    $customer_email = $order->get_billing_email();
    if (empty($customer_email)) {
        return;
    }
    
    // קבלת פרטי eSIM
    $qr_code_url = $order->get_meta('_esim_qr_code');
    $activation_code = $order->get_meta('_esim_activation_code');
    $esim_details = json_decode($order->get_meta('_esim_details'), true);
    
    // חילוץ פרטי חבילה מפריטי ההזמנה
    $country = '';
    $data_package = '';
    $validity = '';
    
    foreach ($order->get_items() as $item) {
        $country = $item->get_meta('esim_country') ?: '';
        $data_limit = $item->get_meta('esim_data_limit') ?: '';
        $data_unit = $item->get_meta('esim_data_unit') ?: '';
        $validity_days = $item->get_meta('esim_validity_days') ?: '';
        
        if (!empty($data_limit) && !empty($data_unit)) {
            $data_package = $data_limit . $data_unit;
        }
        
        if (!empty($validity_days)) {
            $validity = $validity_days . ' ימים';
        }
        
        break; // נתמוך רק בפריט אחד כרגע
    }
    
    // בניית תוכן המייל
    $subject = 'פרטי ה-eSIM שלך - הזמנה #' . $order->get_id();
    
    $message = '<div dir="rtl" style="text-align: right; font-family: Arial, sans-serif;">';
    $message .= '<h2 style="color: #0073aa;">תודה על הזמנתך!</h2>';
    
    if (!empty($country)) {
        $message .= '<p>להלן פרטי ה-eSIM שרכשת עבור <strong>' . esc_html($country) . '</strong>:</p>';
    } else {
        $message .= '<p>להלן פרטי ה-eSIM שרכשת:</p>';
    }
    
    if (!empty($data_package)) {
        $message .= '<p>נפח נתונים: <strong>' . esc_html($data_package) . '</strong></p>';
    }
    
    if (!empty($validity)) {
        $message .= '<p>תקופת תוקף: <strong>' . esc_html($validity) . '</strong></p>';
    }
    
    if (!empty($activation_code)) {
        $message .= '<p>קוד הפעלה: <strong>' . esc_html($activation_code) . '</strong></p>';
    }
    
    if (!empty($qr_code_url)) {
        $message .= '<div style="text-align: center; margin: 20px 0;">';
        $message .= '<p>סרוק את קוד ה-QR להפעלת ה-eSIM:</p>';
        $message .= '<img src="' . esc_url($qr_code_url) . '" alt="QR Code" style="max-width: 300px;">';
        $message .= '</div>';
    }
    
    $message .= '<div style="background-color: #f8f8f8; padding: 15px; border-radius: 5px; margin-top: 20px;">';
    $message .= '<h3 style="color: #0073aa;">הוראות הפעלה:</h3>';
    $message .= '<ol>';
    $message .= '<li>לך להגדרות > סלולרי > הוסף תוכנית סלולרית</li>';
    $message .= '<li>סרוק את קוד ה-QR המצורף או הזן את קוד ההפעלה ידנית</li>';
    $message .= '<li>אשר את התקנת ה-eSIM</li>';
    $message .= '<li>ודא שהנדידה (Roaming) מופעלת לפני הגעה ליעד</li>';
    $message .= '</ol>';
    $message .= '</div>';
    
    // מידע נוסף על החבילה, אם קיים
    if (!empty($esim_details)) {
        $message .= '<div style="margin-top: 20px;">';
        $message .= '<h3 style="color: #0073aa;">פרטים נוספים:</h3>';
        $message .= '<ul>';
        
        foreach ($esim_details as $key => $value) {
            if (!empty($value) && is_string($value)) {
                $message .= '<li><strong>' . esc_html($key) . ':</strong> ' . esc_html($value) . '</li>';
            }
        }
        
        $message .= '</ul>';
        $message .= '</div>';
    }
    
    $message .= '<div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; font-size: 14px; color: #666;">';
    $message .= '<p>לצפייה בפרטי ההזמנה המלאים, <a href="' . esc_url(wc_get_endpoint_url('view-order', $order_id, wc_get_page_permalink('myaccount'))) . '">כנס לאזור האישי</a>.</p>';
    $message .= '<p>לתמיכה טכנית, אנא צור קשר בטלפון: <a href="tel:+97227222222">072-2222222</a></p>';
    $message .= '</div>';
    
    $message .= '</div>';
    
    // הגדרת תוכן HTML
    $headers = array('Content-Type: text/html; charset=UTF-8');
    
    // שליחת המייל
    wp_mail($customer_email, $subject, $message, $headers);
    
    // הוספת הערה להזמנה
    $order->add_order_note('נשלח מייל עם פרטי ה-eSIM ללקוח');
}

/**
 * הוספת תצוגת פרטי eSIM בדף הזמנה באזור האישי
 */
function AdPro_display_esim_details_in_order($order) {
    // בדיקה אם יש פרטי eSIM
    $qr_code_url = $order->get_meta('_esim_qr_code');
    
    if (empty($qr_code_url)) {
        return;
    }
    
    $activation_code = $order->get_meta('_esim_activation_code');
    $esim_details = json_decode($order->get_meta('_esim_details'), true);
    
    // חילוץ פרטי חבילה מפריטי ההזמנה
    $country = '';
    $data_package = '';
    $validity = '';
    
    foreach ($order->get_items() as $item) {
        $country = $item->get_meta('esim_country') ?: '';
        $data_limit = $item->get_meta('esim_data_limit') ?: '';
        $data_unit = $item->get_meta('esim_data_unit') ?: '';
        $validity_days = $item->get_meta('esim_validity_days') ?: '';
        
        if (!empty($data_limit) && !empty($data_unit)) {
            $data_package = $data_limit . $data_unit;
        }
        
        if (!empty($validity_days)) {
            $validity = $validity_days . ' ימים';
        }
        
        break; // נתמוך רק בפריט אחד כרגע
    }
    
    ?>
    <section class="esim-details-section">
        <h2>פרטי ה-eSIM</h2>
        
        <div class="esim-details-container">
            <?php if (!empty($country) || !empty($data_package) || !empty($validity)) : ?>
                <div class="esim-package-info">
                    <h3>פרטי החבילה</h3>
                    <ul>
                        <?php if (!empty($country)) : ?>
                            <li><strong>מדינה:</strong> <?php echo esc_html($country); ?></li>
                        <?php endif; ?>
                        
                        <?php if (!empty($data_package)) : ?>
                            <li><strong>נפח נתונים:</strong> <?php echo esc_html($data_package); ?></li>
                        <?php endif; ?>
                        
                        <?php if (!empty($validity)) : ?>
                            <li><strong>תקופת תוקף:</strong> <?php echo esc_html($validity); ?></li>
                        <?php endif; ?>
                    </ul>
                </div>
            <?php endif; ?>
            
            <div class="esim-activation-info">
                <h3>פרטי הפעלה</h3>
                
                <?php if (!empty($activation_code)) : ?>
                    <p><strong>קוד הפעלה:</strong> <?php echo esc_html($activation_code); ?></p>
                <?php endif; ?>
                
                <?php if (!empty($qr_code_url)) : ?>
                    <div class="esim-qr-code">
                        <p><strong>קוד QR להפעלה:</strong></p>
                        <img src="<?php echo esc_url($qr_code_url); ?>" alt="QR Code">
                    </div>
                <?php endif; ?>
                
                <div class="esim-instructions">
                    <h4>הוראות הפעלה:</h4>
                    <ol>
                        <li>לך להגדרות > סלולרי > הוסף תוכנית סלולרית</li>
                        <li>סרוק את קוד ה-QR או הזן את קוד ההפעלה ידנית</li>
                        <li>אשר את התקנת ה-eSIM</li>
                        <li>ודא שהנדידה (Roaming) מופעלת לפני הגעה ליעד</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>
    
    <style>
        .esim-details-section {
            margin-top: 30px;
            padding: 20px;
            background-color: #f8f8f8;
            border-radius: 5px;
        }
        
        .esim-details-container {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
        }
        
        .esim-package-info, .esim-activation-info {
            flex: 1;
            min-width: 250px;
        }
        
        .esim-qr-code {
            margin: 15px 0;
            text-align: center;
        }
        
        .esim-qr-code img {
            max-width: 200px;
            border: 1px solid #ddd;
            padding: 10px;
            background: white;
        }
        
        .esim-instructions {
            margin-top: 20px;
        }
        
        .esim-instructions ol {
            padding-right: 20px;
        }
        
        @media (max-width: 768px) {
            .esim-details-container {
                flex-direction: column;
            }
        }
    </style>
    <?php
}
add_action('woocommerce_order_details_after_order_table', 'AdPro_display_esim_details_in_order');

/**
 * הוספת תצוגת חבילות eSIM בדף התודה (Thank You)
 */
function AdPro_display_esim_details_on_thankyou($order_id) {
    $order = wc_get_order($order_id);
    
    if (!$order) {
        return;
    }
    
    // בדיקה אם יש פרטי eSIM
    $qr_code_url = $order->get_meta('_esim_qr_code');
    
    if (empty($qr_code_url)) {
        // אם אין קוד QR, כנראה שהתהליך עדיין לא הסתיים
        ?>
        <div class="esim-processing">
            <h2>ה-eSIM שלך מתעבד...</h2>
            <p>אנו מעבדים את הזמנתך. פרטי ה-eSIM ישלחו אליך במייל בקרוב.</p>
            <p>תוכל גם למצוא את פרטי ה-eSIM <a href="<?php echo esc_url(wc_get_endpoint_url('view-order', $order_id, wc_get_page_permalink('myaccount'))); ?>">באזור האישי</a> שלך.</p>
        </div>
        <?php
        return;
    }
    
    $activation_code = $order->get_meta('_esim_activation_code');
    
    // חילוץ פרטי חבילה מפריטי ההזמנה
    $country = '';
    $data_package = '';
    $validity = '';
    
    foreach ($order->get_items() as $item) {
        $country = $item->get_meta('esim_country') ?: '';
        $data_limit = $item->get_meta('esim_data_limit') ?: '';
        $data_unit = $item->get_meta('esim_data_unit') ?: '';
        $validity_days = $item->get_meta('esim_validity_days') ?: '';
        
        if (!empty($data_limit) && !empty($data_unit)) {
            $data_package = $data_limit . $data_unit;
        }
        
        if (!empty($validity_days)) {
            $validity = $validity_days . ' ימים';
        }
        
        break; // נתמוך רק בפריט אחד כרגע
    }
    
    ?>
    <div class="esim-success-message">
        <h2>ה-eSIM שלך מוכן!</h2>
        
        <?php if (!empty($country)) : ?>
            <p>תודה על רכישת חבילת eSIM עבור <?php echo esc_html($country); ?>.</p>
        <?php else : ?>
            <p>תודה על רכישת חבילת eSIM.</p>
        <?php endif; ?>
        
        <?php if (!empty($data_package) || !empty($validity)) : ?>
            <div class="esim-package-details">
                <?php if (!empty($data_package)) : ?>
                    <span class="esim-data"><?php echo esc_html($data_package); ?></span>
                <?php endif; ?>
                
                <?php if (!empty($validity)) : ?>
                    <span class="esim-validity">לתקופה של <?php echo esc_html($validity); ?></span>
                <?php endif; ?>
            </div>
        <?php endif; ?>
        
        <div class="esim-qr-container">
            <img src="<?php echo esc_url($qr_code_url); ?>" alt="QR Code">
            
            <?php if (!empty($activation_code)) : ?>
                <p class="esim-activation-code">קוד הפעלה: <strong><?php echo esc_html($activation_code); ?></strong></p>
            <?php endif; ?>
        </div>
        
        <div class="esim-instructions">
            <h3>הוראות הפעלה:</h3>
            <ol>
                <li>לך להגדרות > סלולרי > הוסף תוכנית סלולרית</li>
                <li>סרוק את קוד ה-QR המוצג למעלה או הזן את קוד ההפעלה ידנית</li>
                <li>אשר את התקנת ה-eSIM</li>
                <li>ודא שהנדידה (Roaming) מופעלת לפני הגעה ליעד</li>
            </ol>
        </div>
        
        <p class="esim-email-notice">שלחנו לך גם מייל עם פרטי ה-eSIM.</p>
    </div>
    
    <style>
        .esim-success-message {
            background-color: #f8f8f8;
            border-radius: 8px;
            padding: 30px;
            margin: 30px 0;
            text-align: center;
        }
        
        .esim-success-message h2 {
            color: #4CAF50;
            margin-bottom: 20px;
        }
        
        .esim-package-details {
            margin: 15px 0;
            font-size: 16px;
        }
        
        .esim-data {
            font-weight: bold;
            margin-left: 10px;
            margin-right: 10px;
        }
        
        .esim-validity {
            color: #555;
        }
        
        .esim-qr-container {
            margin: 25px auto;
            max-width: 250px;
        }
        
        .esim-qr-container img {
            max-width: 100%;
            border: 1px solid #ddd;
            padding: 10px;
            background: white;
            border-radius: 4px;
        }
        
        .esim-activation-code {
            margin-top: 10px;
            font-family: monospace;
            background: #f0f0f0;
            padding: 5px;
            border-radius: 4px;
            display: inline-block;
        }
        
        .esim-instructions {
            text-align: right;
            max-width: 600px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        
        .esim-instructions h3 {
            color: #333;
            margin-bottom: 15px;
        }
        
        .esim-instructions ol {
            padding-right: 20px;
            margin-bottom: 0;
        }
        
        .esim-instructions li {
            margin-bottom: 10px;
        }
        
        .esim-email-notice {
            margin-top: 25px;
            color: #666;
            font-style: italic;
        }
        
        .esim-processing {
            background-color: #fff8e5;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
            text-align: center;
        }
        
        .esim-processing h2 {
            color: #f7a700;
        }
    </style>
    <?php
}
add_action('woocommerce_thankyou', 'AdPro_display_esim_details_on_thankyou', 20);

/**
 * עדכון טופס הרכישה בדף חבילות eSIM לעבודה עם WooCommerce
 */
function AdPro_update_purchase_form($form_html, $package, $hebrew_country) {
    ob_start();
    ?>
    <form method="post" action="<?php echo esc_url(admin_url('admin-post.php')); ?>">
        <input type="hidden" name="action" value="AdPro_process_package">
        <input type="hidden" name="package_id" value="<?php echo esc_attr($package['productId']); ?>">
        <input type="hidden" name="country" value="<?php echo esc_attr($hebrew_country); ?>">
        <button type="submit" class="buy-now">רכוש עכשיו</button>
    </form>
    <?php
    return ob_get_clean();
}
add_filter('AdPro_esim_purchase_form', 'AdPro_update_purchase_form', 10, 3);-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/list.sh ===
#!/bin/bash
OUTPUT_FILE="combined_files.txt"
DIRECTORY="/var/www/html/wp-content/plugins/AdPro-esim"

# מחיקת קובץ תוצאה קודם אם קיים
> $OUTPUT_FILE

# הצגת רשימת קבצים ותיקיות (כולל תת-תיקיות, ללא קבצי CSS)
echo "=== Directory listing of $DIRECTORY (recursive, excluding CSS files) ===" > $OUTPUT_FILE
find $DIRECTORY -type f -not -name "*.css" -o -type d | sort >> $OUTPUT_FILE
echo -e "\n\n" >> $OUTPUT_FILE

# איחוד הקבצים תוך הצגת שם הקובץ (כולל קבצים בתת-תיקיות, ללא קבצי CSS)
find $DIRECTORY -type f -not -name "*.css" | sort | while read file; do
  # דילוג על קובץ הפלט עצמו כדי למנוע לולאה אינסופית
  if [ "$file" != "$DIRECTORY/$OUTPUT_FILE" ]; then
    echo "=== File: $file ===" >> $OUTPUT_FILE
    cat "$file" >> $OUTPUT_FILE
    echo -e "\n\n" >> $OUTPUT_FILE
  fi
done

echo "All files (except CSS files) have been combined into $OUTPUT_FILE"-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/public/assets/js/admin-scripts.js ===
jQuery(document).ready(function($) {
    
    // ==== סקריפטים לדף הגדרות ====
    
    // בדיקת חיבור ל-API של מובימטר
    $('#test-mobimatter-api').on('click', function(e) {
        e.preventDefault();
        var $result = $('#api-test-result');
        
        $result.html('<span style="color: #aaa;">בודק חיבור...</span>');
        
        $.ajax({
            url: ajaxurl,
            type: 'POST',
            data: {
                action: 'AdPro_test_mobimatter_api'
            },
            success: function(response) {
                if (response.success) {
                    $result.html('<span style="color: green;">✓ החיבור תקין!</span>');
                } else {
                    $result.html('<span style="color: red;">✗ שגיאה: ' + response.data + '</span>');
                }
            },
            error: function() {
                $result.html('<span style="color: red;">✗ שגיאה בבדיקה</span>');
            }
        });
    });
    
    // בדיקת חיבור ל-API של iCount
    $('#test-icount-api').on('click', function(e) {
        e.preventDefault();
        var $result = $('#icount-test-result');
        
        $result.html('<span style="color: #aaa;">בודק חיבור...</span>');
        
        $.ajax({
            url: ajaxurl,
            type: 'POST',
            data: {
                action: 'AdPro_test_icount_api'
            },
            success: function(response) {
                if (response.success) {
                    $result.html('<span style="color: green;">✓ החיבור תקין!</span>');
                } else {
                    $result.html('<span style="color: red;">✗ שגיאה: ' + response.data + '</span>');
                }
            },
            error: function() {
                $result.html('<span style="color: red;">✗ שגיאה בבדיקה</span>');
            }
        });
    });
    
    // ==== סקריפטים לדף ניהול תוכן מדינות ====
    
    // טאבים של מדינות
    $('.country-tab').on('click', function(e) {
        e.preventDefault();
        var tabId = $(this).attr('href');
        
        $('.country-tab').removeClass('active');
        $('.country-tab-content').removeClass('active');
        
        $(this).addClass('active');
        $(tabId).addClass('active');
    });
    
    // העלאת תמונות
    $('.media-upload-button').on('click', function(e) {
        e.preventDefault();
        
        var targetInput = $(this).data('target');
        var $input = $('input[name="' + targetInput + '"]');
        
        var mediaUploader = wp.media({
            title: 'בחר תמונה',
            button: {
                text: 'שימוש בתמונה זו'
            },
            multiple: false
        });
        
        mediaUploader.on('select', function() {
            var attachment = mediaUploader.state().get('selection').first().toJSON();
            $input.val(attachment.url);
        });
        
        mediaUploader.open();
    });
    
    // ==== סקריפטים לדף ניהול ספקים ====
    
    // עדכון תווית המתג
    $('input[type="checkbox"]').on('change', function() {
        var $label = $(this).siblings('.switch-label');
        
        if ($(this).is(':checked')) {
            $label.text('מוסתר');
        } else {
            $label.text('מוצג');
        }
    });
});-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/public/assets/js/frontend.js ===
jQuery(document).ready(function($) {
	
	
    // סינון חבילות

if ($('.packages-list').length) {
    
    function filterPackages() {
        var dataFilter = $('#data-filter').val();
        var durationFilter = $('#duration-filter').val();
        var priceFilter = $('#price-filter').val();
        
        // עבור על כל החבילות
        $('.package').each(function() {
            var $package = $(this);
            var dataText = $package.find('.data').text();
            var durationText = $package.find('.validity').text();
            
            // חלץ את כמות הנתונים (GB)
            var dataMatch = dataText.match(/(\d+(\.\d+)?)\s*GB/i);
            var dataAmount = dataMatch ? parseFloat(dataMatch[1]) : 0;
            
            // חלץ את משך הזמן (ימים)
            var durationMatch = durationText.match(/(\d+)\s*ימים/i);
            var durationDays = durationMatch ? parseInt(durationMatch[1]) : 0;
            
            var showByData = dataFilter === 'all';
            var showByDuration = durationFilter === 'all';
            
            // בדיקת סינון לפי נתונים
            if (!showByData) {
                if (dataFilter === '1-5' && dataAmount >= 1 && dataAmount <= 5) showByData = true;
                else if (dataFilter === '5-10' && dataAmount > 5 && dataAmount <= 10) showByData = true;
                else if (dataFilter === '10-20' && dataAmount > 10 && dataAmount <= 20) showByData = true;
                else if (dataFilter === '20-50' && dataAmount > 20 && dataAmount <= 50) showByData = true;
                else if (dataFilter === '50+' && dataAmount > 50) showByData = true;
            }
            
            // בדיקת סינון לפי זמן
            if (!showByDuration) {
                if (durationFilter === '1-7' && durationDays >= 1 && durationDays <= 7) showByDuration = true;
                else if (durationFilter === '7-14' && durationDays > 7 && durationDays <= 14) showByDuration = true;
                else if (durationFilter === '14-30' && durationDays > 14 && durationDays <= 30) showByDuration = true;
                else if (durationFilter === '30-90' && durationDays > 30 && durationDays <= 90) showByDuration = true;
                else if (durationFilter === '90+' && durationDays > 90) showByDuration = true;
            }
            
            // הצג או הסתר את החבילה
            if (showByData && showByDuration) {
                $package.removeClass('hidden-package');
            } else {
                $package.addClass('hidden-package');
            }
        });
        
        // בדוק אם אין חבילות מוצגות לאחר סינון
        if ($('.package:not(.hidden-package)').length === 0) {
            if ($('.no-filtered-packages').length === 0) {
                $('.packages-list').append('<div class="no-filtered-packages"><p>לא נמצאו חבילות העונות לקריטריוני הסינון.</p></div>');
            }
        } else {
            $('.no-filtered-packages').remove();
        }
    }
    
    // פונקציה חדשה למיון לפי מחיר
    function sortPackagesByPrice() {
        var sortDirection = $('#price-filter').val();
        
        if (sortDirection === 'all') {
            return; // אין צורך במיון
        }
        
        var $packagesContainer = $('.packages-list');
        var $packages = $packagesContainer.children('.package').get();
        
        $packages.sort(function(a, b) {
            var priceA = parseFloat($(a).find('.price').text().replace(/[^\d.]/g, ''));
            var priceB = parseFloat($(b).find('.price').text().replace(/[^\d.]/g, ''));
            
            if (isNaN(priceA)) priceA = 0;
            if (isNaN(priceB)) priceB = 0;
            
            if (sortDirection === 'low-to-high') {
                return priceA - priceB;
            } else {
                return priceB - priceA;
            }
        });
        
        // החלף את הסדר בדף
        $.each($packages, function(i, item) {
            $packagesContainer.append(item);
        });
    }
    
    // אירועי שינוי בסינון
    $('#data-filter, #duration-filter').on('change', filterPackages);
    
    // אירוע שינוי במיון לפי מחיר
    $('#price-filter').on('change', sortPackagesByPrice);
    
    // איפוס סינון
    $('#reset-filters').on('click', function() {
        $('#data-filter, #duration-filter').val('all');
        $('#price-filter').val('all');
        $('.package').removeClass('hidden-package');
        $('.no-filtered-packages').remove();
        
        // רענן את סדר החבילות המקורי (אפשרי רק אם שומרים סדר מקורי)
        // לצורך כך צריך להוסיף נתון מקורי לכל חבילה או לרענן את הדף
    });
}


    // חיפוש מדינות
    var countries = AdPro_esim_ajax.countries;
    var $searchInput = $('#country-search');
    var $suggestionsContainer = $('#country-suggestions');
    
    $searchInput.on('input', function() {
        var input = $(this).val().trim().toLowerCase(); // התעלמות מרגישות לאותיות
        
        if (input.length === 0) {
            $suggestionsContainer.empty().hide();
            return;
        }
        
        var matches = [];
        Object.keys(countries).forEach(function(hebrew) {
            if (hebrew.toLowerCase().indexOf(input) !== -1) {
                matches.push({
                    hebrew: hebrew,
                    iso: countries[hebrew].iso,
                    slug: countries[hebrew].english.toLowerCase()
                });
            }
        });
        
        matches.sort(function(a, b) {
            var aStartsWith = a.hebrew.toLowerCase().indexOf(input) === 0;
            var bStartsWith = b.hebrew.toLowerCase().indexOf(input) === 0;
            
            if (aStartsWith && !bStartsWith) return -1;
            if (!aStartsWith && bStartsWith) return 1;
            return a.hebrew.localeCompare(b.hebrew);
        });
        
        if (matches.length > 0) {
            var html = '';
            matches.forEach(function(match) {
                html += '<div class="suggestion" data-country="' + match.slug + '">' +
                    '<img src="https://flagcdn.com/16x12/' + match.iso.toLowerCase() + '.png" alt="' + match.hebrew + '"> ' +
                    '<span>' + match.hebrew + '</span></div>';
            });
            $suggestionsContainer.html(html).show();
        } else {
            $suggestionsContainer.html('<div class="no-results">לא נמצאו תוצאות</div>').show();
        }
    });
    
    $(document).on('click', '.suggestion', function() {
        var slug = $(this).data('country');
        window.location.href = AdPro_esim_ajax.site_url + '/esim/' + slug;
    });
    
    $(document).on('click', function(e) {
        if (!$(e.target).closest('.search-box').length) {
            $suggestionsContainer.hide();
        }
    });
    
    $searchInput.on('keydown', function(e) {
        var $suggestions = $('.suggestion');
        var $selected = $('.suggestion.selected');
        var $current;
        
        if (e.keyCode === 40) { // חץ למטה
            if ($selected.length === 0 || $selected.is(':last-child')) {
                $current = $suggestions.first();
            } else {
                $current = $selected.next();
            }
            $suggestions.removeClass('selected');
            $current.addClass('selected');
            // גלילה אוטומטית להצעה שנבחרה
            $current[0].scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            return false;
        }
        
        if (e.keyCode === 38) { // חץ למעלה
            if ($selected.length === 0 || $selected.is(':first-child')) {
                $current = $suggestions.last();
            } else {
                $current = $selected.prev();
            }
            $suggestions.removeClass('selected');
            $current.addClass('selected');
            $current[0].scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            return false;
        }
        
        if (e.keyCode === 13 && $selected.length > 0) { // Enter
            e.preventDefault();
            $selected.click();
        }
    });

    // פתיחת המודאל של פרטי החבילה בלחיצה על החבילה
    $(document).on('click', '.package-clickable', function(e) {
        // מניעת הפעלה אם לחצו על הכפתור "רכוש עכשיו"
        if ($(e.target).hasClass('buy-now') || $(e.target).closest('.buy-now').length) {
            return;
        }
        
        // קבלת מזהה החבילה
        var packageId = $(this).data('package-id');
        var packageDetails = null;
        
        // חיפוש נתוני החבילה ממשתנה גלובלי
        for (var i = 0; i < packageData.length; i++) {
            if (packageData[i].productId === packageId) {
                packageDetails = packageData[i];
                break;
            }
        }
        
        if (!packageDetails) {
            return;
        }
        
        // בניית תוכן המודאל
        var modalContent = '';
        
        // כותרת החבילה
        var packageTitle = packageDetails.productId;
        if (packageDetails.productDetails) {
            for (var i = 0; i < packageDetails.productDetails.length; i++) {
                if (packageDetails.productDetails[i].name === 'PLAN_TITLE' && packageDetails.productDetails[i].value) {
                    packageTitle = packageDetails.productDetails[i].value;
                    break;
                }
            }
        }
        
        modalContent += '<h2>' + packageTitle + '</h2>';
        
        // מידע כללי
        modalContent += '<div class="modal-details">';
        
        // מידע בסיסי
        modalContent += '<div class="details-section">';
        modalContent += '<h4>פרטי חבילה</h4>';
        
        // מחיר
        modalContent += '<p class="modal-price">' + packageDetails.retailPrice + ' ' + packageDetails.currencyCode + '</p>';
        
        // נתונים נוספים
        var dataLimit = '';
        var dataUnit = '';
        var validityDays = '';
        
        if (packageDetails.productDetails) {
            for (var i = 0; i < packageDetails.productDetails.length; i++) {
                var detail = packageDetails.productDetails[i];
                
                if (detail.name === 'PLAN_DATA_LIMIT' && detail.value) {
                    dataLimit = detail.value;
                }
                
                if (detail.name === 'PLAN_DATA_UNIT' && detail.value) {
                    dataUnit = detail.value;
                }
                
                if (detail.name === 'PLAN_VALIDITY' && detail.value) {
                    validityDays = Math.round(parseInt(detail.value) / 24);
                }
            }
        }
        
        if (dataLimit && dataUnit) {
            modalContent += '<p><strong>נתונים:</strong> ' + dataLimit + ' ' + dataUnit + '</p>';
        }
        
        if (validityDays) {
            modalContent += '<p><strong>תוקף:</strong> ' + validityDays + ' ימים</p>';
        }
        
        if (packageDetails.providerName) {
            modalContent += '<p><strong>ספק:</strong> ' + packageDetails.providerName + '</p>';
        }
        
        // תיאור מורחב
        modalContent += '<div class="package-description">';
        var description = "חבילת גלישה ל" + hebrewCountry;
        if (dataLimit && validityDays) {
            description += " עם " + dataLimit + " " + dataUnit + " למשך " + validityDays + " ימים.";
        }
        modalContent += '<p>' + description + '</p>';
        modalContent += '</div>';
        
        modalContent += '</div>'; // סיום details-section
        
        // רשימת מדינות נתמכות
        if (packageDetails.countries && packageDetails.countries.length > 0) {
            modalContent += '<div class="details-section">';
            modalContent += '<h4>כל המדינות הנתמכות (' + packageDetails.countries.length + ')</h4>';
            modalContent += '<div class="all-countries-grid">';
            
            packageDetails.countries.forEach(function(countryCode) {
                // טיפול בקודי מדינה מיוחדים
                var displayCode = countryCode;
                if (countryCode.indexOf('-') !== -1) {
                    displayCode = countryCode.split('-')[0];
                }
                
                // ניסיון להמיר קוד ISO לשם מדינה בעברית
                var countryName = countryCode; // ברירת מחדל
                
                // אנחנו מחפשים במשתנה countriesMapping שהועבר מ-PHP
                for (var hebrew in countriesMapping) {
                    if (countriesMapping[hebrew].iso === displayCode) {
                        countryName = hebrew;
                        break;
                    }
                }
                
                modalContent += '<div class="country-item">';
                modalContent += '<img src="https://flagcdn.com/24x18/' + displayCode.toLowerCase() + '.png" alt="' + countryCode + '">';
                modalContent += '<span>' + countryName + '</span>';
                modalContent += '</div>';
            });
            
            modalContent += '</div>'; // סיום all-countries-grid
            modalContent += '</div>'; // סיום details-section
        }
        
        modalContent += '</div>'; // סיום modal-details
        
        // כפתור רכישה
        modalContent += '<form method="post" action="' + adminAjaxUrl.replace('admin-ajax.php', 'admin-post.php') + '">';
modalContent += '<input type="hidden" name="action" value="AdPro_process_package">';
modalContent += '<input type="hidden" name="package_id" value="' + packageDetails.productId + '">';
modalContent += '<input type="hidden" name="country" value="' + hebrewCountry + '">';
modalContent += '<button type="submit" class="buy-now-modal">רכוש עכשיו</button>';
modalContent += '</form>';
        modalContent += '</div>';
        
        // הזנת התוכן למודאל והצגתו
        $('#package-modal-content').html(modalContent);
        $('#package-details-modal').fadeIn();
    });

    // סגירת המודאל
    $(document).on('click', '.close-modal', function() {
        $(this).closest('.package-modal').fadeOut();
    });

    // סגירה בלחיצה מחוץ למודאל
    $(document).on('click', '.package-modal', function(e) {
        if ($(e.target).hasClass('package-modal')) {
            $(this).fadeOut();
        }
    });
});-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/public/assets/js/payment.js ===
jQuery(document).ready(function($) {
    // בדיקה אם יש פרמטר ic_checkout בכתובת
    const urlParams = new URLSearchParams(window.location.search);
    const isIcountCheckout = urlParams.has('ic_checkout');
    const orderId = urlParams.get('ic_order_id');
    const paymentUrl = urlParams.get('ic_payment_url');
    const returnUrl = urlParams.get('ic_return_url');
    
    if (isIcountCheckout && paymentUrl) {
        // יצירת מודאל התשלום
        if (!$('#payment-modal').length) {
            $('body').append(`
                <div id="payment-modal" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.7); z-index: 9999; display: flex; justify-content: center; align-items: center;">
                    <div style="position: relative; width: 90%; max-width: 800px; height: 80%; background: white; border-radius: 10px; overflow: hidden;">
                        <button id="close-modal" style="position: absolute; top: 10px; right: 10px; background: #f0f0f0; border: none; border-radius: 50%; width: 30px; height: 30px; cursor: pointer; z-index: 10;">&times;</button>
                        <iframe id="payment-iframe" src="${decodeURIComponent(paymentUrl)}" style="width: 100%; height: 100%; border: none;"></iframe>
                    </div>
                </div>
            `);
            
            // טיפול בסגירת המודאל
            $('#close-modal').on('click', function() {
                $('#payment-modal').hide();
                if (confirm('האם אתה בטוח שברצונך לבטל את התשלום?')) {
                    window.location.href = wc_checkout_params.checkout_url;
                } else {
                    $('#payment-modal').show();
                }
            });
            
            // האזנה להודעות מ-iframe
            window.addEventListener('message', function(event) {
                try {
                    const data = event.data;
                    if (data && data.type === 'icount_payment_success') {
                        // תשלום הצליח
                        window.location.href = decodeURIComponent(returnUrl);
                    } else if (data && data.type === 'icount_payment_failure') {
                        // תשלום נכשל
                        $('#payment-modal').hide();
                        alert('תשלום נכשל. אנא נסה שנית.');
                        window.location.href = wc_checkout_params.checkout_url;
                    }
                } catch (error) {
                    console.error('Error processing message:', error);
                }
            });
        }
    }
});-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/public/error-template.php ===
<?php
get_header();

$order_id = isset($_GET['order_id']) ? sanitize_text_field($_GET['order_id']) : '';
$country_param = strtolower(get_query_var('AdPro_esim_country'));
$country_data = AdPro_get_country_by_slug($country_param);

// טעינת סגנונות
wp_enqueue_style('AdPro-esim-style', plugins_url('/public/assets/css/style.css', dirname(dirname(__FILE__))));
?>

<div id="AdPro-esim-error">
    <div class="error-icon">
        <svg width="80" height="80" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="12" cy="12" r="10" fill="#e74c3c" />
            <path d="M15 9L9 15" stroke="white" stroke-width="2" stroke-linecap="round" />
            <path d="M9 9L15 15" stroke="white" stroke-width="2" stroke-linecap="round" />
        </svg>
    </div>
    
    <h1>שגיאה בתהליך התשלום</h1>
    
    <p class="error-message">התשלום לא בוצע בהצלחה.</p>
    
    <?php if (!empty($order_id)): ?>
        <p class="order-id">מספר הזמנה: <?php echo esc_html($order_id); ?></p>
    <?php endif; ?>
    
    <div class="error-details">
        <p>ייתכן שהייתה בעיה באחד מהפרטים הבאים:</p>
        <ul>
            <li>פרטי כרטיס האשראי שגויים</li>
            <li>אין מספיק מסגרת אשראי</li>
            <li>בעיה זמנית במערכת הסליקה</li>
            <li>כרטיס האשראי חסום לעסקאות מקוונות</li>
        </ul>
    </div>
    
    <div class="error-actions">
        <?php if ($country_data): ?>
            <a href="<?php echo esc_url(home_url("/esim/{$country_data['slug']}")); ?>" class="button primary-button">נסה שוב</a>
        <?php else: ?>
            <a href="<?php echo esc_url(home_url("/esim")); ?>" class="button primary-button">חזרה לחיפוש חבילות</a>
        <?php endif; ?>
    </div>
    
    <div class="support-info">
        <p>אם אתה ממשיך לקבל שגיאה זו, אנא צור קשר עם שירות הלקוחות שלנו:</p>
        <p><a href="tel:+97227222222">072-2222222</a> או <a href="mailto:support@yourdomain.com">support@yourdomain.com</a></p>
    </div>
</div>

<style>
    #AdPro-esim-error {
        max-width: 600px;
        margin: 50px auto;
        text-align: center;
        padding: 40px 30px;
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    }
    
    .error-icon {
        margin-bottom: 20px;
    }
    
    #AdPro-esim-error h1 {
        color: #e74c3c;
        font-size: 28px;
        margin-bottom: 20px;
    }
    
    .error-message {
        font-size: 18px;
        color: #666;
        margin-bottom: 15px;
    }
    
    .order-id {
        font-family: monospace;
        background-color: #f5f5f5;
        padding: 8px 15px;
        border-radius: 4px;
        display: inline-block;
        margin-bottom: 25px;
    }
    
    .error-details {
        margin: 30px 0;
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
        text-align: right;
    }
    
    .error-details p {
        margin-top: 0;
        color: #333;
        margin-bottom: 15px;
    }
    
    .error-details ul {
        text-align: right;
        padding-right: 20px;
        margin-bottom: 0;
    }
    
    .error-details li {
        margin-bottom: 8px;
        color: #444;
    }
    
    .error-actions {
        margin: 30px 0;
    }
    
    .button {
        display: inline-block;
        padding: 12px 25px;
        border-radius: 6px;
        text-decoration: none;
        font-weight: bold;
        transition: all 0.3s;
    }
    
    .primary-button {
        background-color: #4a90e2;
        color: white;
    }
    
    .primary-button:hover {
        background-color: #3a7bc8;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    .support-info {
        margin-top: 30px;
        color: #666;
        font-size: 14px;
        border-top: 1px solid #eee;
        padding-top: 20px;
    }
    
    .support-info a {
        color: #4a90e2;
        text-decoration: none;
    }
    
    .support-info a:hover {
        text-decoration: underline;
    }
    
    @media (max-width: 768px) {
        #AdPro-esim-error {
            padding: 30px 20px;
            margin: 30px 15px;
        }
        
        #AdPro-esim-error h1 {
            font-size: 24px;
        }
        
        .error-message {
            font-size: 16px;
        }
    }
</style>

<?php
get_footer();-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/public/esim-add-to-cart.php ===
<?php
/**
 * Template Name: eSIM Add to Cart
 *
 * Handle adding eSIM products to cart when WooCommerce is fully loaded
 */

// Make sure WooCommerce is fully loaded first
if (!defined('ABSPATH')) {
    exit;
}

// Ensure PHP session is started for guest users
if (!WC()->is_rest_api_request() && !is_admin()) {
    if (!WC()->session->has_session()) {
        WC()->session->set_customer_session_cookie(true);
    }
}

get_header();
?>

<div class="esim-processing">
    <h1>מעבד את הבקשה...</h1>
    <p>המערכת מעבדת את בקשתך, נא להמתין...</p>
</div>

<script type="text/javascript">
    // Redirect to checkout after page load
    window.onload = function() {
        // Wait briefly to ensure the page is fully loaded
        setTimeout(function() {
            window.location.href = '<?php echo esc_url(wc_get_checkout_url()); ?>';
        }, 1000);
    }
</script>

<?php
// Process the cart data if transaction ID is provided
// בדוק ועדכן את הקוד בקובץ esim-add-to-cart.php

// בדוק שהנתונים מועברים נכון לעגלה
if (isset($_GET['transaction'])) {
    $transaction_id = sanitize_text_field($_GET['transaction']);
    $cart_item_data = get_transient($transaction_id);
    
    if ($cart_item_data) {
        // עכשיו אפשר להשתמש בפונקציות של WooCommerce בבטחה
        if (function_exists('WC') && WC()) {
            // וודא שהעגלה מאותחלת
            if (!WC()->cart) {
                WC()->cart = new WC_Cart();
            }
            
            // הרוקן את העגלה קודם
            WC()->cart->empty_cart();
            
            // קבל את מזהה המוצר
            $product_id = AdPro_get_or_create_esim_product();
            
            // הוסף לעגלה
            $cart_key = WC()->cart->add_to_cart($product_id, 1, 0, [], $cart_item_data);
            
            // הוסף לוג האם ההוספה לעגלה הצליחה
            if ($cart_key) {
                error_log('eSIM product added to cart successfully: ' . $cart_key);
                error_log('Cart item data: ' . json_encode($cart_item_data));
            } else {
                error_log('Failed to add eSIM product to cart!');
            }
            
            // נקה את המידע הזמני
            delete_transient($transaction_id);
        }
    } else {
        error_log('Transaction data not found for ID: ' . $transaction_id);
    }
}

get_footer();-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/public/esim-country-template.php ===
<?php
// קוד דיבאג מורחב
if (isset($_GET['debug']) && current_user_can('manage_options')) {
    echo '<h1>Debug Info</h1>';
    echo '<p>Template loaded: ' . __FILE__ . '</p>';
    echo '<p>Country param: ' . get_query_var('AdPro_esim_country') . '</p>';
    
    $country_data = AdPro_get_country_by_slug(get_query_var('AdPro_esim_country'));
    echo '<h2>Country data:</h2>';
    echo '<pre>' . print_r($country_data, true) . '</pre>';
    
    if ($country_data) {
        $api_key = get_option('AdPro_api_key');
        $merchant_id = get_option('AdPro_merchant_id');
        
        echo '<h2>API Credentials:</h2>';
        echo '<p>API Key: ' . (empty($api_key) ? 'MISSING' : substr($api_key, 0, 5) . '...') . '</p>';
        echo '<p>Merchant ID: ' . (empty($merchant_id) ? 'MISSING' : substr($merchant_id, 0, 5) . '...') . '</p>';

        // בניית כתובת ה-API לדיבאג
        $api_url = 'https://api.mobimatter.com/mobimatter/api/v2/products';
        $query_params = [];
        if (!empty($country_data['iso'])) {
            $query_params['country'] = $country_data['iso'];
        }

        // הוספת פרמטר הקטגוריה
        $query_params['category'] = 'esim_realtime';

        if (!empty($query_params)) {
            $api_url .= '?' . http_build_query($query_params);
        }
                
        echo '<h2>API Request:</h2>';
        echo '<p>URL: ' . $api_url . '</p>';
        echo '<p>Headers: merchantId=' . $merchant_id . ', api-key=' . substr($api_key, 0, 5) . '..., Accept=text/plain</p>';
        
        // ביצוע קריאת API ידנית לדיבאג
        $args = [
            'headers' => [
                'Accept' => 'text/plain',
                'merchantId' => $merchant_id,
                'api-key' => $api_key,
            ],
            'timeout' => 30,
        ];
        
        echo '<h2>API Response:</h2>';
        $response = wp_remote_get($api_url, $args);
        
        if (is_wp_error($response)) {
            echo '<p style="color: red;">Error: ' . $response->get_error_message() . '</p>';
        } else {
            $response_code = wp_remote_retrieve_response_code($response);
            $response_body = wp_remote_retrieve_body($response);
            
            echo '<p>Status Code: ' . $response_code . '</p>';
            echo '<p>Response Headers:</p><pre>' . print_r(wp_remote_retrieve_headers($response), true) . '</pre>';
            echo '<p>Response Body:</p><pre>' . htmlspecialchars($response_body) . '</pre>';
            
            $data = json_decode($response_body, true);
            if (json_last_error() === JSON_ERROR_NONE) {
                echo '<p>Parsed Response:</p><pre>' . print_r($data, true) . '</pre>';
            } else {
                echo '<p style="color: red;">JSON Parsing Error: ' . json_last_error_msg() . '</p>';
            }
        }
        
        // קבלת חבילות מהפונקציה הרגילה
        $packages = AdPro_esim_get_packages($country_data['iso']);
        echo '<h2>Function Output:</h2>';
        echo '<pre>' . print_r($packages, true) . '</pre>';
    }
    
    exit;
}

get_header();

$country_param = strtolower(get_query_var('AdPro_esim_country'));
$country_data = AdPro_get_country_by_slug($country_param);
$saved_content = get_option('AdPro_esim_country_content', []);

// טעינת סגנונות ספציפיים לדף
wp_enqueue_style('AdPro-esim-style', ADPRO_ESIM_URL . 'public/assets/css/style.css');

wp_enqueue_script('AdPro-esim-script', ADPRO_ESIM_URL . 'public/assets/js/frontend.js', array('jquery'), null, true);

// הוספת URL לניהול AJAX
wp_localize_script('AdPro-esim-script', 'adminAjaxUrl', admin_url('admin-ajax.php'));
wp_localize_script('AdPro-esim-script', 'AdPro_esim_ajax', [
    'site_url' => home_url(),
    'countries' => AdPro_get_countries_mapping(),
]);

if ($country_data) {
    $hebrew_country = $country_data['hebrew'];
    $english_country = $country_data['english'];
    $iso_code = $country_data['iso'];
    $packages = AdPro_esim_get_packages($country_data['iso']);

    // שיפור SEO
    add_filter('wp_title', function() use ($hebrew_country) {
        return 'חבילות eSIM עבור ' . $hebrew_country . ' | ' . get_bloginfo('name');
    });
    
    add_action('wp_head', function() use ($hebrew_country) {
        echo '<meta name="description" content="גלה חבילות eSIM זולות ואמינות עבור ' . esc_attr($hebrew_country) . '. רכישה מאובטחת וקבלה מיידית!">';
        echo '<meta name="keywords" content="eSIM ' . esc_attr($hebrew_country) . ', חבילות גלישה, חבילות eSIM, סים וירטואלי">';
    });
    ?>
    <div id="AdPro-esim-country-page">
        <div class="country-header">
            <h1>
                <img src="https://flagcdn.com/48x36/<?php echo strtolower($iso_code); ?>.png" alt="<?php echo esc_attr($hebrew_country); ?>">
                חבילות eSIM עבור <?php echo esc_html($hebrew_country); ?>
            </h1>
        </div>
        
        <?php if (!empty($saved_content[$hebrew_country]['image']) || !empty($saved_content[$hebrew_country]['text'])) : ?>
            <div class="country-custom-content">
                <?php if (!empty($saved_content[$hebrew_country]['image'])) : ?>
                    <img src="<?php echo esc_url($saved_content[$hebrew_country]['image']); ?>" alt="<?php echo esc_attr($hebrew_country); ?>" class="country-image">
                <?php endif; ?>
                <?php if (!empty($saved_content[$hebrew_country]['text'])) : ?>
                    <div class="country-text"><?php echo wp_kses_post($saved_content[$hebrew_country]['text']); ?></div>
                <?php endif; ?>
            </div>
        <?php else: ?>
            <div class="country-default-content">
                <p>גלה את חבילות ה-eSIM הטובות ביותר ל<?php echo esc_html($hebrew_country); ?>. חבילות גלישה לכל סוגי הנסיעות במחירים אטרקטיביים.</p>
            </div>
        <?php endif; ?>

        <!-- פילטר חבילות -->
        <?php if ($packages && !empty($packages)) : ?>
<!-- פילטר חבילות - קוד מעודכן עם סינון מחיר -->

    <div class="package-filters">
        <h3>סינון חבילות</h3>
        <div class="filter-row">
            <div class="filter-group">
                <label for="data-filter">כמות נתונים:</label>
                <select id="data-filter">
                    <option value="all">הכל</option>
                    <option value="1-5">1GB - 5GB</option>
                    <option value="5-10">5GB - 10GB</option>
                    <option value="10-20">10GB - 20GB</option>
                    <option value="20-50">20GB - 50GB</option>
                    <option value="50+">50GB ומעלה</option>
                </select>
            </div>
            <div class="filter-group">
                <label for="duration-filter">זמן:</label>
                <select id="duration-filter">
                    <option value="all">הכל</option>
                    <option value="1-7">עד שבוע</option>
                    <option value="7-14">1-2 שבועות</option>
                    <option value="14-30">עד חודש</option>
                    <option value="30-90">1-3 חודשים</option>
                    <option value="90+">3+ חודשים</option>
                </select>
            </div>
            <div class="filter-group">
                <label for="price-filter">מחיר:</label>
                <select id="price-filter">
                    <option value="all">הכל</option>
                    <option value="low-to-high">מהזול ליקר</option>
                    <option value="high-to-low">מהיקר לזול</option>
                </select>
            </div>
            <button id="reset-filters" class="reset-button">איפוס סינון</button>
        </div>
    </div>
<?php endif; ?>

        <?php if ($packages && !empty($packages)) : ?>
            <div class="packages-list">
                <?php foreach ($packages as $package) : ?>
                    <!-- נוסיף מחלקה package-clickable לפתיחת המודאל -->
                    <div class="package package-clickable" data-package-id="<?php echo esc_attr($package['productId']); ?>">
                        <?php
                        // חילוץ נתוני החבילה
                        $package_title = '';
                        $data_limit = '';
                        $data_unit = '';
                        $validity_days = '';
                        $price = isset($package['retailPrice']) ? $package['retailPrice'] : '';
                        $currency = isset($package['currencyCode']) ? $package['currencyCode'] : '';
                        $supported_countries = isset($package['countries']) ? $package['countries'] : [];
                        
                        // הוצאת פרטי החבילה מהמערך
                        if (isset($package['productDetails']) && is_array($package['productDetails'])) {
                            foreach ($package['productDetails'] as $detail) {
                                if ($detail['name'] === 'PLAN_TITLE' && !empty($detail['value'])) {
                                    $package_title = $detail['value'];
                                }
                                if ($detail['name'] === 'PLAN_DATA_LIMIT' && !empty($detail['value'])) {
                                    $data_limit = $detail['value'];
                                }
                                if ($detail['name'] === 'PLAN_DATA_UNIT' && !empty($detail['value'])) {
                                    $data_unit = $detail['value'];
                                }
                                if ($detail['name'] === 'PLAN_VALIDITY' && !empty($detail['value'])) {
                                    // המרת דקות לימים
                                    $validity_days = round(intval($detail['value']) / 24);
                                }
                            }
                        }
                        
                        // אם חסר כותרת, השתמש במזהה המוצר
                        if (empty($package_title)) {
                            $package_title = isset($package['productId']) ? $package['productId'] : 'חבילת eSIM';
                        }
                        ?>
                        
                        <h2><?php echo esc_html($package_title); ?></h2>
                        
                        <div class="package-details">
                            <p class="price"><?php echo esc_html($price); ?> <?php echo esc_html($currency); ?></p>
                            
                            <?php if (!empty($data_limit) && !empty($data_unit)) : ?>
                                <p class="data"><strong>נתונים:</strong> <?php echo esc_html($data_limit . ' ' . $data_unit); ?></p>
                            <?php endif; ?>
                            
                            <?php if (!empty($validity_days)) : ?>
                                <p class="validity"><strong>תוקף:</strong> <?php echo esc_html($validity_days); ?> ימים</p>
                            <?php endif; ?>
                            
                            <?php if (isset($package['providerName'])) : ?>
                                <p class="provider"><strong>ספק:</strong> <?php echo esc_html($package['providerName']); ?></p>
                            <?php endif; ?>
                            
                            <div class="package-description">
                                <?php
                                $description = "חבילת גלישה ל" . esc_html($hebrew_country);
                                if (!empty($data_limit) && !empty($validity_days)) {
                                    $description .= " עם " . $data_limit . " " . $data_unit . " למשך " . $validity_days . " ימים.";
                                }
                                ?>
                                <p><?php echo esc_html($description); ?></p>
                            </div>
                            
                            <?php
                            // קבלת רשתות ספציפיות למדינה זו
                            $product_id = $package['productId'];
                            $all_networks = AdPro_get_product_networks($product_id);
                            $country_networks = AdPro_filter_networks_by_country($all_networks, $country_data['iso']);
                            ?>

                            <?php if (!empty($country_networks)) : ?>
                                <div class="country-networks">
                                    <h3>רשתות סלולר נתמכות ב<?php echo esc_html($hebrew_country); ?></h3>
                                    <div class="networks-grid">
                                        <?php foreach ($country_networks as $network) : ?>
                                            <div class="network-item">
                                                <span class="network-name"><?php echo esc_html($network['brand']); ?></span>
                                                <?php if (isset($network['is5G']) && $network['is5G']) : ?>
                                                    <span class="network-technology network-5g">5G</span>
                                                <?php elseif (isset($network['is4G']) && $network['is4G']) : ?>
                                                    <span class="network-technology network-4g">4G</span>
                                                <?php endif; ?>
                                            </div>
                                        <?php endforeach; ?>
                                    </div>
                                </div>
                            <?php endif; ?>
                            
                            <?php if (!empty($supported_countries) && count($supported_countries) > 0) : ?>
                                <div class="supported-countries">
                                    <h3>מדינות נתמכות</h3>
                                    <div class="country-flags">
                                        <?php
                                        // מגביל למספר מוגדר של דגלים כדי לא להציף את הדף
                                        $max_flags = 20;
                                        $count = 0;
                                        
                                        foreach ($supported_countries as $country_code) :
                                            if ($count >= $max_flags) {
                                                echo '<div class="more-countries">+' . (count($supported_countries) - $max_flags) . ' מדינות נוספות</div>';
                                                break;
                                            }
                                            
                                            // התמודדות עם קודי מדינה מיוחדים כמו US-HI
                                            $display_code = $country_code;
                                            if (strpos($country_code, '-') !== false) {
                                                $parts = explode('-', $country_code);
                                                $display_code = $parts[0];
                                            }
                                            
                                            $count++;
                                        ?>
                                            <div class="country-flag" title="<?php echo esc_attr($country_code); ?>">
                                                <img src="https://flagcdn.com/24x18/<?php echo strtolower($display_code); ?>.png" alt="<?php echo esc_attr($country_code); ?>">
                                            </div>
                                        <?php endforeach; ?>
                                    </div>
                                </div>
                            <?php endif; ?>
                        </div>
                        
                        <form method="post" action="<?php echo esc_url(admin_url('admin-post.php')); ?>">
    <input type="hidden" name="action" value="AdPro_process_package">
    <input type="hidden" name="package_id" value="<?php echo esc_attr($package['productId']); ?>">
    <input type="hidden" name="country" value="<?php echo esc_attr($hebrew_country); ?>">
    <button type="submit" class="buy-now">רכוש עכשיו</button>
</form>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php else : ?>
            <div class="no-packages">
                <p>לא נמצאו חבילות זמינות עבור <?php echo esc_html($hebrew_country); ?> כרגע.</p>
                <p>אנא נסה שוב מאוחר יותר או בחר מדינה אחרת.</p>
            </div>
        <?php endif; ?>

        <!-- נוסיף מודאל חדש לפרטי חבילה מלאים -->
        <div id="package-details-modal" class="package-modal" style="display: none;">
            <div class="modal-content">
                <span class="close-modal">&times;</span>
                <div id="package-modal-content">
                    <!-- התוכן יוזן דינמית ע"י JavaScript -->
                </div>
            </div>
        </div>

        <!-- נשמור את נתוני החבילות בקובץ JavaScript -->
        <script type="text/javascript">
            var packageData = <?php echo json_encode($packages); ?>;
            var countriesMapping = <?php echo json_encode(AdPro_get_countries_mapping()); ?>;
            var hebrewCountry = "<?php echo esc_js($hebrew_country); ?>";
        </script>
    </div>
    <?php
} else {
    ?>
    <div class="country-not-found">
        <h1>מדינה לא נמצאה</h1>
        <p>המדינה המבוקשת אינה נמצאת במערכת או אינה נתמכת.</p>
        <a href="<?php echo home_url(); ?>" class="button">חזרה לדף הבית</a>
    </div>
    <?php
}

get_footer();-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/public/frontend.php ===
<?php
function AdPro_esim_display_frontend() {
    wp_enqueue_style('AdPro-esim-style', ADPRO_ESIM_URL . 'public/assets/css/style.css');
    wp_enqueue_script('AdPro-esim-script', ADPRO_ESIM_URL . 'public/assets/js/frontend.js', ['jquery'], null, true);
   
    
    $countries_mapping = AdPro_get_countries_mapping();
    wp_localize_script('AdPro-esim-script', 'AdPro_esim_ajax', [
        'site_url' => home_url(),
        'countries' => $countries_mapping,
    ]);

    ?>
    <div id="AdPro-esim-container">
         <div class="search-container">
            <h2>חיפוש חבילות eSIM לפי מדינה</h2>
            <div class="search-box">
                <input type="text" id="country-search" placeholder="הקלד שם מדינה..." autocomplete="off">
                <div id="country-suggestions" class="suggestions"></div>
            </div>
            
            <div class="popular-countries">
                <h3>מדינות פופולריות</h3>
                <div class="country-grid">
                    <?php
                    // במקום מערך קבוע, נשתמש באפשרות מהגדרות
					$popular_countries = get_option('AdPro_popular_countries', []);

                    
                    foreach ($popular_countries as $country) {
                        if (isset($countries_mapping[$country])) {
                            $data = $countries_mapping[$country];
                            echo '<a href="' . home_url('/esim/' . $data['slug']) . '" class="country-item">';
                            echo '<img src="https://flagcdn.com/48x36/' . strtolower($data['iso']) . '.png" alt="' . esc_attr($country) . '">';
                            echo '<span>' . esc_html($country) . '</span>';
                            echo '</a>';
                        }
                    }
                    ?>
                </div>
            </div>
        </div>
    </div>
    <?php
}-e 


=== File: /var/www/html/wp-content/plugins/AdPro-esim/public/success-template.php ===
<?php
get_header();

$order_id = isset($_GET['order_id']) ? sanitize_text_field($_GET['order_id']) : '';
$country_param = strtolower(get_query_var('AdPro_esim_country'));
$country_data = AdPro_get_country_by_slug($country_param);

// טעינת סגנונות
wp_enqueue_style('AdPro-esim-style', plugins_url('/public/assets/css/style.css', dirname(dirname(__FILE__))));
?>

<div id="AdPro-esim-success">
    <div class="success-icon">
        <svg width="80" height="80" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="12" cy="12" r="10" fill="#4CAF50" />
            <path d="M8 12L11 15L16 9" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
    </div>
    
    <h1>רכישה בוצעה בהצלחה!</h1>
    
    <p class="success-message">תודה על רכישתך. פרטי ה-eSIM נשלחו לכתובת הדוא"ל שלך.</p>
    
    <?php if (!empty($order_id)): ?>
        <p class="order-id">מספר הזמנה: <?php echo esc_html($order_id); ?></p>
    <?php endif; ?>
    
    <div class="success-actions">
        <?php if (function_exists('wc_get_account_endpoint_url')): ?>
            <a href="<?php echo esc_url(wc_get_account_endpoint_url('AdPro-esim')); ?>" class="button primary-button">צפה בחבילות שלי</a>
        <?php else: ?>
            <a href="<?php echo esc_url(home_url('/my-account/AdPro-esim')); ?>" class="button primary-button">צפה בחבילות שלי</a>
        <?php endif; ?>
        
        <?php if ($country_data): ?>
            <a href="<?php echo esc_url(home_url("/esim/{$country_data['slug']}")); ?>" class="button secondary-button">חזרה לחבילות <?php echo esc_html($country_data['hebrew']); ?></a>
        <?php endif; ?>
    </div>
    
    <div class="success-info">
        <h3>הוראות הפעלה</h3>
        <ol>
            <li>סרוק את קוד ה-QR שנשלח אליך במייל</li>
            <li>פעל לפי ההוראות להוספת eSIM למכשיר שלך</li>
            <li>הפעל את ה-eSIM לפני הגעתך ליעד</li>
            <li>ודא שהגדרות הנדידה מופעלות במכשיר שלך</li>
        </ol>
        
        <p class="support-text">לתמיכה טכנית, אנא צור קשר בטלפון: <a href="tel:+97227222222">072-2222222</a></p>
    </div>
</div>

<style>
    #AdPro-esim-success {
        max-width: 600px;
        margin: 50px auto;
        text-align: center;
        padding: 40px 30px;
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    }
    
    .success-icon {
        margin-bottom: 20px;
    }
    
    #AdPro-esim-success h1 {
        color: #333;
        font-size: 28px;
        margin-bottom: 20px;
    }
    
    .success-message {
        font-size: 18px;
        color: #666;
        margin-bottom: 15px;
    }
    
    .order-id {
        font-family: monospace;
        background-color: #f5f5f5;
        padding: 8px 15px;
        border-radius: 4px;
        display: inline-block;
        margin-bottom: 25px;
    }
    
    .success-actions {
        margin: 30px 0;
        display: flex;
        gap: 15px;
        justify-content: center;
        flex-wrap: wrap;
    }
    
    .button {
        display: inline-block;
        padding: 12px 25px;
        border-radius: 6px;
        text-decoration: none;
        font-weight: bold;
        transition: all 0.3s;
    }
    
    .primary-button {
        background-color: #4CAF50;
        color: white;
    }
    
    .primary-button:hover {
        background-color: #45a049;
		.primary-button:hover {
        background-color: #45a049;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    .secondary-button {
        background-color: #f5f5f5;
        color: #333;
        border: 1px solid #ddd;
    }
    
    .secondary-button:hover {
        background-color: #eaeaea;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .success-info {
        margin-top: 40px;
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
        text-align: right;
    }
    
    .success-info h3 {
        margin-top: 0;
        color: #333;
        margin-bottom: 15px;
    }
    
    .success-info ol {
        text-align: right;
        padding-right: 20px;
        margin-bottom: 20px;
    }
    
    .success-info li {
        margin-bottom: 10px;
        color: #444;
    }
    
    .support-text {
        color: #666;
        font-size: 14px;
        border-top: 1px solid #eee;
        padding-top: 15px;
        margin-top: 20px;
    }
    
    .support-text a {
        color: #4a90e2;
        text-decoration: none;
    }
    
    .support-text a:hover {
        text-decoration: underline;
    }
    
    @media (max-width: 768px) {
        #AdPro-esim-success {
            padding: 30px 20px;
            margin: 30px 15px;
        }
        
        #AdPro-esim-success h1 {
            font-size: 24px;
        }
        
        .success-message {
            font-size: 16px;
        }
        
        .success-actions {
            flex-direction: column;
        }
        
        .button {
            width: 100%;
        }
    }
</style>

<?php
get_footer();-e 


